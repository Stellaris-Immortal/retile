#Default Triggers:
#	buildings_simple_allow			#yes if no free rural district slots
#	country_uses_food				#yes if country needs food
#	buildings_unemployed			#yes if there are any unemployed WORKERS or SERVANTS
#	buildings_has_motes				#yes if motes income is positive
#	buildings_has_crystals			#yes if crystals income is positive
#	buildings_has_exotic_gases		#yes if gas income is positive
#	buildings_difficulty			#???
#	buildings_stop_pop				#yes if pops exceed certain counts depending on conditions
#	districts_build_district		#yes if conditions are ideal for building new districts ???
#	districts_good_energy			#yes if planet has positive energy modifier
#	districts_good_minerals			#yes if planet has positive minerals modifier
#	districts_good_food				#yes if planet has positive food modifier
#	jobs_save_goods					#??? used to prevent AI from using up all it's consumer goods
#	jobs_work_minerals				#??? used to decide if AI should work jobs that produce minerals
#	jobs_work_minerals_goods		#??? used to decide if AI should work jobs that produce consumer goods

#Other Useful Tools:
#	has_building_construction		#check what's being currently built - yes, no, or specific building
#	on_built = {
#		planet = { 
#			owner = { set_timed_country_flag = { flag = buildings_new_mote_building days = 480 } }
#		}
#	}

#Retile planet flags:
#	retile_food_world
#	retile_energy_world
#	retile_minerals_world

has_worker_job = {
	has_job = custodian
}

planet_needs_workers = {
	has_available_jobs = custodian
}

has_combat_specialist_job = {
	has_job = soldier
}

planet_needs_combat_specialists = {
	has_available_jobs = soldier
}

has_robot_specialist_job = {
	OR = {
		has_job = clerk
		has_job = foundry
		has_job = bureaucrat
	}
}

planet_needs_robot_specialists = {
	OR = {
		has_available_jobs = clerk
		has_available_jobs = foundry
		has_available_jobs = bureaucrat
	}
}

has_synth_specialist_job = {
	OR = {
		has_job = researcher
		has_job = patrol_drone
		has_job = dimensional_portal_researcher
		has_job = dimensional_portal_researcher_gestalt
		has_job = titan_hunter
	}
}

planet_needs_synth_specialists = {
	OR = {
		has_available_jobs = researcher
		has_available_jobs = patrol_drone
		has_available_jobs = dimensional_portal_researcher
		has_available_jobs = dimensional_portal_researcher_gestalt
		has_available_jobs = titan_hunter
	}
}

has_ruler_job = {
	OR = {
		has_job = head_researcher
		has_job = high_priest
		has_job = administrator
		has_job = noble
		has_job = merchant
		has_job = executive
	}
}

planet_needs_rulers = {
	OR = {
		has_available_jobs = head_researcher
		has_available_jobs = high_priest
		has_available_jobs = administrator
		has_available_jobs = noble
		has_available_jobs = merchant
		has_available_jobs = executive
	}
}

# Does this pop eat food?
pop_eats_food = {
	species = {
		NOR = {
			is_archetype = ROBOT
			is_archetype = MACHINE
			is_archetype = PLANTOID
			is_archetype = LITHOID
		}
	}
}

pop_eats_minerals = {
	species = {
		is_archetype = LITHOID
	}
}

pop_eats_energy = {
	species = {
		OR = {
			is_archetype = ROBOT
			is_archetype = MACHINE
		}
	}
}

# Does this country use consumer goods?
country_uses_goods = {	# country scope
	OR = {
		always = yes
		#is_gestalt = no
		#has_valid_civic = civic_machine_servitor
		#has_valid_civic = civic_machine_assimilator
	}
}

# Does the planet have any urban districts?
### OUTDATED...
retile_urban = {	# planet scope
	custom_tooltip = {
		fail_text = "retile_requires_urban_district"
		OR = {
			always = yes
		}
	}
}

# Can this country do diplomacy?
retile_diplomacy = {	# counry scope
	custom_tooltip = {
		fail_text = "retile_no_diplomacy"
		exists = owner
		owner = {
			NOR = {
				has_valid_civic = civic_inwards_perfection
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_machine_terminator
				has_valid_civic = civic_fanatic_purifiers
			}
		}
	}
}

is_plantoid_empire = {
	owner_species = { is_plantoid = yes }
}

is_plantoid = {
	species = {
		is_archetype = PLANTOID
	}
}

ai_no_unfinished_megastructures = {
	hidden_trigger = { OR = {
		owner = { is_ai = no }
		owner = { not = { any_owned_megastructure = { is_unfinished_megastructure = yes } } }
	} }
}

is_unfinished_megastructure = {
	OR = {
		is_unfinished_matter_decompressor = yes
		is_unfinished_dyson_sphere = yes
		is_unfinished_sentry_array = yes
		is_unfinished_science_nexus = yes
		is_unfinished_strategic_coordination_center = yes
		is_unfinished_mega_art_installation = yes
		is_unfinished_interstellar_assembly = yes
		is_unfinished_ring_world = yes
	}
}

is_unfinished_ring_world = {	### Not sure how accurate this one is...
	OR = {
		is_megastructure_type = ring_world_1
		is_megastructure_type = ring_world_2_intermediate
		is_megastructure_type = ring_world_2
		#is_megastructure_type = ring_world_3_intermediate
		is_megastructure_type = ring_world_ruined
	}
}

is_unfinished_matter_decompressor = {
	OR = {
		is_megastructure_type = matter_decompressor_0
		is_megastructure_type = matter_decompressor_1
		is_megastructure_type = matter_decompressor_2
		is_megastructure_type = matter_decompressor_3
		is_megastructure_type = matter_decompressor_ruined
	}
}

is_unfinished_dyson_sphere = {
	OR = {
		is_megastructure_type = dyson_sphere_0
		is_megastructure_type = dyson_sphere_1
		is_megastructure_type = dyson_sphere_2
		is_megastructure_type = dyson_sphere_3
		is_megastructure_type = dyson_sphere_4
		is_megastructure_type = dyson_sphere_ruined
	}
}

is_unfinished_sentry_array = {
	OR = {
		is_megastructure_type = spy_orb_0
		is_megastructure_type = spy_orb_1
		is_megastructure_type = spy_orb_2
		is_megastructure_type = spy_orb_3
		is_megastructure_type = spy_orb_ruined
	}
}

is_unfinished_science_nexus = {
	OR = {
		is_megastructure_type = think_tank_0
		is_megastructure_type = think_tank_1
		is_megastructure_type = think_tank_2
		is_megastructure_type = think_tank_3
		is_megastructure_type = think_tank_ruined
	}
}

is_unfinished_strategic_coordination_center = {
	OR = {
		is_megastructure_type = strategic_coordination_center_0
		is_megastructure_type = strategic_coordination_center_1
		is_megastructure_type = strategic_coordination_center_2
		is_megastructure_type = strategic_coordination_center_ruined
	}
}

is_unfinished_mega_art_installation = {
	OR = {
		is_megastructure_type = mega_art_installation_0
		is_megastructure_type = mega_art_installation_1
		is_megastructure_type = mega_art_installation_2
		is_megastructure_type = mega_art_installation_3
		is_megastructure_type = mega_art_installation_ruined
		#is_megastructure_type = mega_art_installation_restored # There is another tier
	}
}

is_unfinished_interstellar_assembly = {
	OR = {
		is_megastructure_type = interstellar_assembly_0
		is_megastructure_type = interstellar_assembly_1
		is_megastructure_type = interstellar_assembly_2
		is_megastructure_type = interstellar_assembly_3
		is_megastructure_type = interstellar_assembly_ruined
	}
}

########################################## Deposit Checks

is_energy_deposit_low = {
	OR = {
		is_deposit_type = d_buzzing_plains
		is_deposit_type = d_arid_highlands
		is_deposit_type = d_hot_springs
		is_deposit_type = d_rushing_waterfalls
	}
}

is_energy_deposit_med = {
	OR = {
		is_deposit_type = d_searing_desert
		is_deposit_type = d_frozen_gas_lake
		is_deposit_type = d_odd_factory_wreckage_1
		is_deposit_type = d_underground_contact_zone
		is_deposit_type = d_delhi_sprawl
		is_deposit_type = d_immense_solar_array
	}
}

is_energy_deposit_high = {
	OR = {
		is_deposit_type = d_geothermal_vent
		is_deposit_type = d_underwater_vent
		is_deposit_type = d_tempestous_mountain
		is_deposit_type = d_junk_hollows
		is_deposit_type = d_irradiated_valley
		is_deposit_type = d_organic_landfill
		is_deposit_type = d_underground_generator
		is_deposit_type = d_numas_breath
		is_deposit_type = d_boswash_metropolitan_axis
		is_deposit_type = d_pearl_river_agglomerate
		is_deposit_type = d_ancient_reactor_pits
	}
}

is_minerals_deposit_low = {
	OR = {
		is_deposit_type = d_mineral_striations
		is_deposit_type = d_veiny_cliffs
		is_deposit_type = d_mineral_fields
		is_deposit_type = d_mauritanian_security_zone
	}
}

is_minerals_deposit_med = {
	OR = {
		is_deposit_type = d_prosperous_mesa
		is_deposit_type = d_ore_rich_caverns
		is_deposit_type = d_odd_factory_wreckage_2
		is_deposit_type = d_underground_vault_2
		is_deposit_type = d_nanosands
		is_deposit_type = d_relic_metal_boneyard
	}
}

is_minerals_deposit_high = {
	OR = {
		is_deposit_type = d_rich_mountain
		is_deposit_type = d_submerged_ore_veins
		is_deposit_type = d_metal_boneyard
		is_deposit_type = d_junk_wastes
		is_deposit_type = d_ancient_mining_site
		is_deposit_type = d_impact_crater
		is_deposit_type = d_worm_mine
		is_deposit_type = d_underground_mine
		is_deposit_type = d_mesopotamian_urban_corridor
		is_deposit_type = d_great_albertan_crater
		is_deposit_type = d_abandoned_mining_tunnels
	}
}

is_food_deposit_low = {
	OR = {
		is_deposit_type = d_natural_farmland
		is_deposit_type = d_lichen_fields
		is_deposit_type = d_bountiful_plains
		is_deposit_type = d_rugged_woods
		is_deposit_type = d_green_hills
		is_deposit_type = d_forgiving_tundra
		is_deposit_type = d_boggy_fens
		is_deposit_type = d_nutritious_mudland
		is_deposit_type = d_scandinavian_reclamation_sector
	}
}

is_food_deposit_med = {
	OR = {
		is_deposit_type = d_fungal_caves
		is_deposit_type = d_lush_jungle
		is_deposit_type = d_fertile_lands
		is_deposit_type = d_great_river
		is_deposit_type = d_abandoned_primitive_homesteads
	}
}

is_food_deposit_high = {
	OR = {
		is_deposit_type = d_black_soil
		is_deposit_type = d_teeming_reef
		is_deposit_type = d_marvelous_oasis
		is_deposit_type = d_tropical_island
		is_deposit_type = d_fungal_forest
		is_deposit_type = d_junk_canals
		is_deposit_type = d_hyperfertile_valley
		is_deposit_type = d_harvester_fields
		is_deposit_type = d_worm_farm
		is_deposit_type = d_underground_farm
		is_deposit_type = d_pacific_algae_tracts
		is_deposit_type = d_saharan_irrigation_project
	}
}

has_void_dweller_or_starborn = {
	OR = {
		has_origin = origin_void_dwellers
		has_starborn = yes
	}
}
