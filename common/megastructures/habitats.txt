# see README.txt for example

habitat_0 = {
	entity = ""
	construction_entity = "orbital_habitat_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = -7 y = -7 }
	build_time = 1800

	resources = {
		category = megastructures
		cost = {
			alloys = 3000
		}
	}
	construction_blocks_others = no
	construction_blocked_by_others = no

	potential = {
		OR = {
			has_technology = tech_habitat_1
			has_civic = civic_diadochi
			has_civic = civic_great_khans_legacy
			has_country_flag = democratic_khanate_flag
		}
		OR = {	# Make the AI fill up habitats a bit before building more, so they don't spam quite as many...
			is_ai = no
			NOT = { any_planet_within_border = { AND = {
				is_planet_class = pc_habitat
				OR = {
					is_colony = no
					num_pops < 5
				}
			} } }
		}
	}

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				#can_build_megastructure_on_planet = yes
				NOR = {
					has_planet_flag = megastructure
					has_planet_flag = has_megastructure
					solar_system = {
						has_star_flag = ring_world_built
					}
					is_planet_class = pc_ringworld_habitable
					is_planet_class = pc_ringworld_habitable_damaged
					is_planet_class = pc_ringworld_tech
					is_planet_class = pc_ringworld_tech_damaged
					is_planet_class = pc_ringworld_seam
					is_planet_class = pc_ringworld_seam_damaged
					is_planet_class = pc_habitat
				}
			}
			#custom_tooltip = {
			#	fail_text = "requires_no_orbital_station"
			#	has_orbital_station = no
			#}

 			# balance for habitats
			custom_tooltip = {
				fail_text = "requires_not_minor_planetary_body"
				NOR = {
					is_asteroid = yes
					is_moon = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_not_star"
				is_star = no
			}
		} # use these for all non-star megastructures
	}

	# root = system
	# from = country	
	ai_weight = {
		factor = 10
	
		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}
	
	on_build_start = {}
	on_build_cancel = {}
	
	on_build_complete = {
		fromfrom.planet = {
			if = {
				limit = { has_research_station = yes }
				random_research_station = { dismantle = yes }
			}
			if = {
				limit = { has_mining_station = yes }
				random_mining_station = { dismantle = yes }
			}
		}
		spawn_planet = {
			class = "pc_habitat"
			location = fromfrom.planet
			orbit_location = yes
			orbit_angle_offset = 45
			orbit_distance_offset = 9.899
			size = 8
			has_ring = no
			
			init_effect = {				
				set_name = "HABITAT_PLANET_NAME"
				set_planet_entity = {
					entity = "orbital_habitat_entity"
					graphical_culture = fromfrom
				}
				surveyed = {
					set_surveyed = yes
					surveyor = FROM
				}
				set_all_comms_surveyed = yes
				clear_blockers = yes
				if = {
					limit = {
						from = { has_ascension_perk = ap_voidborn }
						NOT = { has_modifier = master_builders_habitats }
					}
					add_modifier = {
						modifier = master_builders_habitats
						days = -1
					}
				}
				set_planet_flag = megastructure
				set_planet_flag = habitat

				if = {
					limit = {
						OR = {
							fromfrom.planet = { has_deposit = d_minerals_1 }
							fromfrom.planet = { has_deposit = d_minerals_2 }
							fromfrom.planet = { has_deposit = d_minerals_3 }
							fromfrom.planet = { has_deposit = d_minerals_4 }
							fromfrom.planet = { has_deposit = d_minerals_5 }
							fromfrom.planet = { has_deposit = d_minerals_6 }
							fromfrom.planet = { has_deposit = d_minerals_7 }
							fromfrom.planet = { has_deposit = d_minerals_8 }
							fromfrom.planet = { has_deposit = d_minerals_9 }
							fromfrom.planet = { has_deposit = d_minerals_10 }
						}
					}
					set_planet_flag = mining_habitat
				}

				if = {
					limit = {
						OR = {
							fromfrom.planet = { has_deposit = d_energy_1 }
							fromfrom.planet = { has_deposit = d_energy_2 }
							fromfrom.planet = { has_deposit = d_energy_3 }
							fromfrom.planet = { has_deposit = d_energy_4 }
							fromfrom.planet = { has_deposit = d_energy_5 }
							fromfrom.planet = { has_deposit = d_energy_6 }
							fromfrom.planet = { has_deposit = d_energy_7 }
							fromfrom.planet = { has_deposit = d_energy_8 }
							fromfrom.planet = { has_deposit = d_energy_9 }
							fromfrom.planet = { has_deposit = d_energy_10 }
						}
					}
					set_planet_flag = energy_habitat
				}

				if = {
					limit = { fromfrom.planet = { has_deposit_for = shipclass_research_station } }
					set_planet_flag = research_habitat
				}

				if = {
					limit = {
						OR = {
							fromfrom.planet = { has_deposit = d_trade_value_1 }
							fromfrom.planet = { has_deposit = d_trade_value_2 }
							fromfrom.planet = { has_deposit = d_trade_value_3 }
							fromfrom.planet = { has_deposit = d_trade_value_4 }
							fromfrom.planet = { has_deposit = d_trade_value_5 }
							fromfrom.planet = { has_deposit = d_trade_value_6 }
							fromfrom.planet = { has_deposit = d_trade_value_7 }
							fromfrom.planet = { has_deposit = d_trade_value_8 }
							fromfrom.planet = { has_deposit = d_trade_value_9 }
							fromfrom.planet = { has_deposit = d_trade_value_10 }
						}
					}
					set_planet_flag = commercial_habitat
				}

				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_exotic_gases_1 }
					}
					add_deposit = d_hab_gas_1
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_exotic_gases_2 }
					}
					add_deposit = d_hab_gas_2
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_exotic_gases_3 }
					}
					add_deposit = d_hab_gas_3
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_exotic_gases_4 }
					}
					add_deposit = d_hab_gas_4
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_exotic_gases_5 }
					}
					add_deposit = d_hab_gas_5
				}

				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_rare_crystals_1 }
					}
					add_deposit = d_hab_crystal_1
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_rare_crystals_2 }
					}
					add_deposit = d_hab_crystal_2
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_rare_crystals_3 }
					}
					add_deposit = d_hab_crystal_3
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_rare_crystals_4 }
					}
					add_deposit = d_hab_crystal_4
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_rare_crystals_5 }
					}
					add_deposit = d_hab_crystal_5
				}
				
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_volatile_motes_1 }
					}
					add_deposit = d_hab_mote_1
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_volatile_motes_2 }
					}
					add_deposit = d_hab_mote_2
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_volatile_motes_3 }
					}
					add_deposit = d_hab_mote_3
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_volatile_motes_4 }
					}
					add_deposit = d_hab_mote_4
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_volatile_motes_5 }
					}
					add_deposit = d_hab_mote_5
				}

				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_zro_deposit_1 }
					}
					add_deposit = d_hab_zro_1
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_zro_deposit_2 }
					}
					add_deposit = d_hab_zro_2
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_zro_deposit_3 }
					}
					add_deposit = d_hab_zro_3
				}

				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_dark_matter_deposit_1 }
					}
					add_deposit = d_hab_dark_matter_1
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_dark_matter_deposit_2 }
					}
					add_deposit = d_hab_dark_matter_2
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_dark_matter_deposit_3 }
					}
					add_deposit = d_hab_dark_matter_3
				}

				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_living_metal_deposit }
					}
					add_deposit = d_hab_living_metal_1
				}
				
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_alloys_1 }
					}
					add_deposit = d_hab_alloy_1
					set_planet_flag = mining_habitat
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_alloys_2 }
					}
					add_deposit = d_hab_alloy_2
					set_planet_flag = mining_habitat
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_alloys_3 }
					}
					add_deposit = d_hab_alloy_3
					set_planet_flag = mining_habitat
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_alloys_4 }
					}
					add_deposit = d_hab_alloy_4
					set_planet_flag = mining_habitat
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_alloys_5 }
					}
					add_deposit = d_hab_alloy_5
					set_planet_flag = mining_habitat
				}
				if = {
					limit = {
						AND = {
							NOT = { has_planet_flag = mining_habitat }
							NOT = { has_planet_flag = energy_habitat }
							NOT = { has_planet_flag = research_habitat }
							NOT = { has_planet_flag = commercial_habitat }
						}
					}
					set_planet_flag = hydroponics_habitat
				}
			}
		}
		fromfrom.planet = {
			set_planet_flag = has_megastructure
		}
		remove_megastructure = fromfrom
		from = { country_event =  { id = utopia.61 } }
	}
}