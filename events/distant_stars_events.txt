namespace = distar

#################################
#
# Anomaly Events
# by Dee Majek
# distar.1 - distar.999
#
#################################

# root = ship scope
# from = planet scope

### Supply Wreckage ###
ship_event = {
	id = distar.1
	title = "distar.1.name"
	desc = "distar.1.desc"
	picture = GFX_evt_space_debris
	show_sound = event_ship_bridge
	location = event_target:supply_wreckage_tar
	
	is_triggered_only = yes
			
	immediate = { 
		create_ambient_object = {
			type = "abandoned_ship_object"
			location = from
		}
		last_created_ambient_object = {
			save_event_target_as = supply_wreckage_tar
			set_location = {
				target = from
				distance = 5
				angle = 90
			}
		}
		owner = {
			random_neighbor_country = {
				limit = {
 					is_country_type = default
 					is_homicidal = no
					has_communications = prev
					NOR = {
						is_at_war_with = prev
						is_country = prev
					}
					any_system = { has_access_fleet = prev }
				}
				save_event_target_as = wreckage_owner
			}
		}
	}
	option = {
		name = "distar.1.a"
		owner = { add_resource = { minerals = 300 } }
		custom_tooltip = "distar.1.a.tooltip"
		hidden_effect = { owner = { country_event = { id = distar.2 days = 180 } } }
	}
	option = {
		trigger = {
			owner = { NOT = { is_at_war_with = event_target:wreckage_owner } }
		}
		name = "distar.1.b"
		custom_tooltip = "distar.1.b.tooltip"
		hidden_effect = { owner = { country_event = { id = distar.3 days = 60 } } }
	}
}

country_event = {
	id = distar.2
	title = "distar.2.name"
	desc = {
		trigger = {
			NOT = { has_authority = auth_machine_intelligence }
		}
		text = "distar.2.desc"
	}
	desc = {
		trigger = {
			has_authority = auth_machine_intelligence
		}
		text = "distar.2.desc.machi"
	}
	location = event_target:wreckage_owner

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:wreckage_owner
		planet_background = event_target:wreckage_owner
		graphical_culture = event_target:wreckage_owner
		city_level = event_target:wreckage_owner
		room = event_target:wreckage_owner.ruler
	}

	option = {
		trigger = { resource_stockpile_compare = { resource = minerals value >= 300 } }
		name = distar.2.a
		event_target:wreckage_owner = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_stole_supplies
			}
		}
		hidden_effect = {
			event_target:supply_wreckage_tar = {
				destroy_ambient_object = this
			}
		}
	}

	option = {
		trigger = {
			resource_stockpile_compare = { resource = minerals value >= 300 }
			NOT = { is_at_war_with = event_target:wreckage_owner }
		}
		name = distar.2.b
		add_resource = { minerals = -300 }
		hidden_effect = {
			event_target:supply_wreckage_tar = {
				destroy_ambient_object = this
			}
		}
	}

	option = {
		trigger = { resource_stockpile_compare = { resource = minerals value < 300 } }
		name = TOOPOOR
		event_target:wreckage_owner = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_stole_supplies
			}
		}
		hidden_effect = {
			event_target:supply_wreckage_tar = {
				destroy_ambient_object = this
			}
		}
	}
}

country_event = {
	id = distar.3
	title = "distar.3.name"
	desc = "distar.3.desc"
	location = event_target:wreckage_owner

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:wreckage_owner
		planet_background = event_target:wreckage_owner
		graphical_culture = event_target:wreckage_owner
		city_level = event_target:wreckage_owner
		room = event_target:wreckage_owner.ruler
	}

	option = {
		name = distar.3.a
		add_resource = { influence = 100 }
		event_target:wreckage_owner = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_returned_supplies
			}
		}
		hidden_effect = {
			event_target:supply_wreckage_tar = {
				destroy_ambient_object = this
			}
		}
	}
}

## Superflare Gatekeeper (on_colonized)
planet_event = {
	id = distar.5
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_modifier = superflare_planet
	}

	immediate = {
		planet_event = { id = distar.7 days = 365 random = 50 }
		planet_event = { id = distar.8 days = 365 random = 50 }
		set_planet_flag = colony_event
	}
}

## Superflare Ancient Civ
ship_event = {
	id = distar.6
	title = "distar.6.name"
	desc = "distar.6.desc"
  	picture = GFX_evt_dead_city
	show_sound = event_scanner
	location = from

	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.5 days = 30 } }
	}

	option = {
		name = INTERESTING
		from = {
			add_deposit = d_society_4
			hidden_effect = { add_modifier = { modifier = frozen_in_time days = -1 } }
		}
	}
}

planet_event = {
	id = distar.7
	title = "distar.7.name"
	desc = {
		trigger = {
			has_modifier = superflare_planet
			OR = {
				is_colony = yes
				is_under_colonization = yes
			}
		}
		text = "distar.7.desc"
	}
	desc = {
		trigger = {
			has_modifier = superflare_planet
			is_colony = no
			is_under_colonization = no
		}
		text = "distar.7.desc.nocol"
	}
	picture = GFX_evt_star_yellow
	show_sound = event_scanner
	location = root

	is_triggered_only = yes

	trigger = {
		OR = { exists = owner exists = controller exists = space_owner }
		has_modifier = superflare_planet
	}

	immediate = {
		solar_system = {
			random_system_planet = {
				limit = { has_planet_flag = frozen_in_time_flag }
				save_event_target_as = frozen_in_time_planet
			}
		}
	}

	option = {
		trigger = {
			OR = {
				is_under_colonization = yes
				is_colony = yes
			}
		}
		name = "distar.7.a"
		enable_special_project = {
			name = "SUPERFLARE_PROJECT"
			location = root
			owner = root.owner
		}
		hidden_effect = {
			planet_event = { id = distar.8 days = 180 } 
		}
	}

	option = {
		trigger = {
			is_under_colonization = no
			is_colony = no
		}
		name = "distar.7.b"
		add_modifier = { modifier = superflare_struck years = 20 }
		hidden_effect = { remove_modifier = "superflare_planet" }
	}
}

planet_event = { #If you lose the colony after accepting the Special Project but before completing it
	id = distar.8
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOR = {
			exists = owner
			exists = controller
			has_modifier = superflare_avoided
			has_modifier = superflare_struck
		}
		has_modifier = superflare_planet
	}

	immediate = {
		add_modifier = { modifier = superflare_struck years = 20 }
		remove_modifier = "superflare_planet"
	}
}

ship_event = {
	id = distar.9
	title = "distar.9.name"
	desc = "distar.9.desc"
	picture = GFX_evt_satellite_in_orbit
	show_sound = event_scanner
	location = fromfrom

	is_triggered_only = yes

	option = {
		name = EXCELLENT
		fromfrom = {
			add_modifier = { modifier = superflare_avoided }
			hidden_effect = { remove_modifier = "superflare_planet" }
		}
		leader = {
			IF = {
				limit = { has_trait = leader_trait_expertise_field_manipulation	}
				add_skill = 1
			}
			else = {
				add_trait = leader_trait_expertise_field_manipulation
				add_experience = 200
			}
		}
	}
}

country_event = {
	id = distar.10
	title = "distar.10.name"
	desc = "distar.10.desc"
	picture = GFX_evt_star_yellow
	show_sound = event_scanner
	location = fromfrom

	is_triggered_only = yes

	option = {
		name = TERRIBLE
		fromfrom = {
			add_modifier = { modifier = superflare_struck years = 20 }
			hidden_effect = { remove_modifier = "superflare_planet" }
			random_owned_pop = {
				kill_pop = yes
			}
		}
	}
}

 ## Energetic Spectra
ship_event = {
	id = distar.15
	title = "distar.15.name"
	desc = "distar.15.desc"
	picture = GFX_evt_black_hole
	show_sound = event_scanner
	location = from

	is_triggered_only = yes

	immediate = {
		from = {
			if = {
				limit = { has_deposit_for = shipclass_research_station }
				clear_deposits = yes
			}
		}
	}

	option = {
		name = FASCINATING
		from = {
			add_deposit = d_energy_3
			hidden_effect = { add_modifier = { modifier = black_hole_energy years = -1 } }
		}
	}
}

 ## Blackhole Hologram
ship_event = {
	id = distar.20
	title = "distar.20.name"
	desc = "distar.20.desc"
	picture = GFX_evt_fleet_neutral
	show_sound = event_scanner
	location = from

	is_triggered_only = yes

	immediate = {
		from = {
			if = {
				limit = { has_deposit_for = shipclass_mining_station }
				clear_deposits = yes
			}
		}
		owner = { country_event = { id = story.5 days = 30 } }
	}

	option = {
		name = CURIOUS
		from = {
			add_deposit = d_society_3
			hidden_effect = { add_modifier = { modifier = black_hole_hologram years = -1 } }
		}
	}
}

 ## Rudimentary Robots
ship_event = {
	id = distar.25
	title = "distar.25.name"
	desc = "distar.25.desc"
	picture = GFX_evt_city_ruins
	show_sound = event_scanner
	location = from

	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.5 days = 30 } }
	}

	#option = {
	#	trigger = {
	#		from = { planet_size < 18 }
	#	}
	#	name = INTERESTING
	#	custom_tooltip = distar.25.a.tooltip
	#}
	option = {
		#trigger = {
		#	from = { planet_size > 17 }
		#}
		name = INTERESTING
		custom_tooltip = distar.25.b.tooltip
	}
}

 ## Rudimentary Robots -> Rage Virus Chain
planet_event = {
	id = distar.26
	title = "distar.26.name"
	desc = "distar.26.desc"
	picture = GFX_evt_organic_oppression
	show_sound = event_scanner
	location = root

	is_triggered_only = yes

	trigger = {
		has_planet_flag = primitive_robot_planet
		any_pop = {
			species = {
				has_species_flag = primitive_robots_flag
			}
		}
		owner = {
			is_country_type = default
			NOT = { has_country_flag = cured_rage_virus }
		}
	}

	immediate = {
		planet_event = { id = distar.31 days = 1825 random = 730 }
		set_planet_flag = colony_event
	}

	option = {
		trigger = {
			owner = {
				NOR = {
					has_policy_flag = ai_outlawed
					has_ethic = ethic_gestalt_consciousness
				}
			}
		}
		name = "distar.26.a"
		custom_tooltip = "distar.26.a.tooltip"
		hidden_effect =  { planet_event = { id = distar.27 days = 90 random = 10 } }
	}
	option = {
		trigger = {
			owner = { NOT = { has_policy_flag = ai_outlawed } }
		}
		name = "distar.26.b"
		owner = {
			add_resource = { minerals = 100 }
		}
		root = {
			every_pop = {
				limit = { species = { has_species_flag = primitive_robots_flag } }
				kill_pop = yes
			}
		}
	}
	option = {
		trigger = {
			owner = { has_policy_flag = ai_outlawed }
		}
		name = "distar.26.c"
		owner = {
			add_resource = { minerals = 100 }
		}
		root = {
			every_pop = {
				limit = { species = { has_species_flag = primitive_robots_flag } }
				kill_pop = yes
			}
		}
	}
	option = {
		trigger = {
			owner = { has_authority = auth_machine_intelligence }
		}
		name = "distar.26.mach"
		custom_tooltip = "distar.26.a.tooltip"
		hidden_effect =  { planet_event = { id = distar.27 days = 90 random = 10 } }
	}

	after = {
		hidden_effect = { remove_modifier = "primitive_robots" }
	}
}

planet_event = {
	id = distar.27
	title = "distar.27.name"
	desc = "distar.27.desc"
	picture = GFX_evt_city_ruins
	show_sound = event_scanner
	location = root

	is_triggered_only = yes

	trigger = {
		exists = owner
	}

	option = {
		name = "distar.27.a"
		enable_special_project = {
			name = "PRIMITIVE_ROBOT_PROJECT"
			location = root
			owner = root.owner
		}
	}
}

ship_event = { #MI version
	id = distar.28
	title = "distar.28.name"
	desc = "distar.28.desc"
	picture = GFX_evt_city_ruins
	show_sound = event_scanner
	location = fromfrom

	is_triggered_only = yes

	trigger = {
		owner = { has_authority = auth_machine_intelligence }
	}

	option = {
		name = "distar.28.a"
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
		}
		leader = {
			add_experience = 200
		}
	}
}

ship_event = { #Biological version
	id = distar.29
	title = "distar.29.name"
	desc = "distar.29.desc"
	picture = GFX_evt_robot_assembly_plant
	show_sound = event_scanner
	location = fromfrom

	is_triggered_only = yes

	trigger = {
		owner = { NOT = { has_authority = auth_machine_intelligence } }
	}

	option = {
		name = "distar.29.a"
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
		}
		leader = {
			add_experience = 200
		}
		hidden_effect = { ship_event = { id = distar.30 } }
	}
}

ship_event = {
	id = distar.30
	title = "distar.30.name"
	desc = "distar.30.desc"
	show_sound = event_radio_chatter
	location = fromfromfrom

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		room = no_video_feed_room
	}

	option = {
		name = "distar.30.a"
		response_text = distar.30.desc
		is_dialog_only = yes
	}
	option = {
		name = "distar.30.b"
		response_text = distar.30.b.response
		is_dialog_only = yes
	}
	option = {
		name = "distar.30.c"
		response_text = distar.30.c.response
		is_dialog_only = yes
	}
	option = {
		name = "distar.30.d"
		response_text = distar.30.d.response
		is_dialog_only = yes
	}
	option = {
		name = "distar.30.e"
	}
}

planet_event = {
	id = distar.31
	title = "distar.31.name"
	desc = "distar.31.desc"
	picture = GFX_evt_news_room
	show_sound = event_radio_chatter
	location = from

	is_triggered_only = yes

	trigger = {
		exists = owner
		any_owned_pop = {
			NOR = {	has_trait = trait_mechanical has_trait = trait_machine_unit	}
		}
	}

	immediate = {
		IF = {
			limit = {
				count_pops = {
					limit = { NOT = { has_trait = trait_mechanical } }
					count < 6
				}
			}
			while = {
				count = 2
				random_pop = {
					limit = {
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							has_modifier = erratic_behavior
						}
					}
					add_modifier = { modifier = erratic_behavior days = -1 }
				}
			}
		}
		else_if = {
			limit = {
				count_pops = {
					limit = { NOT = { has_trait = trait_mechanical } }
					count > 5
					count < 13
				}
			}
			while = {
				count = 3
				random_pop = {
					limit = {
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							has_modifier = erratic_behavior
						}
					}
					add_modifier = { modifier = erratic_behavior days = -1 }
				}
			}
		}
		else = {
			while = {
				count = 5
				random_pop = {
					limit = {
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							has_modifier = erratic_behavior
						}
					}
					add_modifier = { modifier = erratic_behavior days = -1 }
				}
			}
		}
	}

	option = {
		name = "distar.31.a"
		enable_special_project = {
			name = "RETROVIRUS_PROJECT"
			location = root
			owner = root.owner
		}
		hidden_effect = {
			planet_event = { id = distar.32 days = 60 }
			planet_event = { id = distar.33 days = 120 }
		}
	}
}

planet_event = { #Recursive, spreads every other month as long as have biopops left to spread to on planet
	id = distar.32
	title = "distar.32.name"
	desc = "distar.32.desc"
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = from

	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = cured_rage_virus } }
		any_owned_pop = {
			NOR = {
				has_trait = trait_mechanical
				has_trait = trait_machine_unit
				has_modifier = erratic_behavior
			}
		}
	}

	immediate = {
		IF = {
			limit = {
				count_pops = {
					limit = {
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
					count < 6
				}
			}
			random_pop = {
				limit = {
					NOR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
						has_modifier = erratic_behavior
					}
				}
				add_modifier = { modifier = erratic_behavior days = -1 }
			}
		}
		else = {
			while = {
				count = 2
				random_pop = {
					limit = {
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							has_modifier = erratic_behavior
						}
					}
					add_modifier = { modifier = erratic_behavior days = -1 }
				}
			}
		}
	}

	option = {
		name = WORRYING
		hidden_effect = {
			planet_event = { id = distar.32 days = 60 }
		}
	}
}

planet_event = { #Onetime
	id = distar.33
	title = "distar.33.name"
	desc = "distar.33.desc"
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = from

	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = cured_rage_virus } }
	}

	immediate = {
		set_planet_flag = retrovirus_armies
		random_pop = {
			limit = { has_modifier = erratic_behavior }
			species = { save_event_target_as = infected_species }
		}
		create_country = {
			name = "NAME_Enraged_Colonists"
			type = faction
			auto_delete = yes
			flag = {
				background = {
    		        category = "backgrounds"
    		        file = "00_solid.dds"
    		    }
    		    colors = {
    		        "red"
    		        "red"
    		        "null"
    		        "null"
    		    }
			}
			effect = {
				establish_communications_no_message = root.owner
				establish_contact = { who = root.owner location = root.solar_system }
			}
		}
		last_created_country = {
			save_global_event_target_as = enraged_colonists_country
		}
		create_army = {
			name = "NAME_Enraged_Colonists"
			owner = event_target:enraged_colonists_country
			species = event_target:infected_species
			type = "enraged_army"
		}
		create_army = {
			name = "NAME_Enraged_Colonists"
			owner = event_target:enraged_colonists_country
			species = event_target:infected_species
			type = "enraged_army"
		}
		create_army = {
			name = "NAME_Enraged_Colonists"
			owner = event_target:enraged_colonists_country
			species = event_target:infected_species
			type = "enraged_army"
		}
	}

	option = {
		name = distar.33.a
		custom_tooltip = distar.33.a.tooltip
	}
}

country_event = {
	id = distar.34
	title = "distar.34.name"
	desc = {
		trigger = {
			has_country_flag = started_retrovirus_project
		}
		text = "distar.34.desc.a"
	}
	desc = {
		trigger = {
			NOT = { has_country_flag = started_retrovirus_project }
		}
		text = "distar.34.desc.b"
	}
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = fromfrom

	is_triggered_only = yes

	trigger = {
		fromfrom = {
			has_planet_flag = retrovirus_armies
		}
		from = {
			is_same_value = event_target:enraged_colonists_country
		}
	}

	option = {
		name = distar.34.a
		hidden_effect = { fromfrom = { remove_planet_flag = retrovirus_armies } }
	}
}

planet_event = {
	id = distar.35
	title = "distar.35.name"
	desc = "distar.35.desc"
	picture = GFX_evt_interior_battle
	show_sound = event_red_alert
	location = from

	is_triggered_only = yes

	option = {
		name = "distar.35.a"
		add_modifier = { modifier = researcher_rage days = 365 }
	}
}

planet_event = { #Rage Virus cured
	id = distar.36
	title = "distar.36.name"
	desc = "distar.36.desc"
	picture = GFX_evt_disease_outbreak
	show_sound = event_laboratory_sound
	location = from

	is_triggered_only = yes

	immediate = {
		owner = {
			set_country_flag = cured_rage_virus
			remove_country_flag = started_retrovirus_project
		}
	}

	option = {
		name = EXCELLENT
		owner = {
			hidden_effect = {
				every_pop = {
					limit = {
						has_modifier = erratic_behavior
						owner = { is_same_value = root.owner }
					}
					remove_modifier = "erratic_behavior"
				}
			}
			IF = {
				limit = { any_owned_leader = { is_researching_area = society } }
				random_owned_leader = {
					limit = { is_researching_area = society }
					add_skill = 1
				}
			}
			if = {
 			    limit = { NOT = { has_technology = tech_genome_mapping } }
 			    give_technology = { tech = tech_genome_mapping }
 			}
 			else_if = {
 			    limit = { NOT = { has_technology = tech_frontier_health } }
 			    give_technology = { tech = tech_frontier_health }
 			}
 			else_if = {
 				limit = { NOT = { has_technology = tech_frontier_hospital } }
 			    give_technology = { tech = tech_frontier_hospital }
 			}
 			else_if = {
 				limit = { NOT = { has_technology = tech_vitality_boosters } }
 			    give_technology = { tech = tech_vitality_boosters }
 			}
 			else_if = {
 				limit = { has_technology = tech_vitality_boosters }
 			    give_technology = { tech = tech_repeatable_improved_leader_life_span }
 			}
		}
	}
}

country_event = {
	id = distar.37
	title = "distar.34.name"
	desc = {
		trigger = {
			has_country_flag = started_retrovirus_project
		}
		text = "distar.34.desc.a"
	}
	desc = {
		trigger = {
			NOT = { has_country_flag = started_retrovirus_project }
		}
		text = "distar.34.desc.b"
	}
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = fromfrom

	is_triggered_only = yes

	trigger = {
		fromfrom = {
			has_planet_flag = retrovirus_armies
		}
		fromfrom = {
			controller = {
				is_same_value = event_target:enraged_colonists_country
			}
		}
	}

	option = {
		name = distar.34.a
		hidden_effect = { fromfrom = { remove_planet_flag = retrovirus_armies } }
	}
}

 ## Gray Goo
ship_event = {
	id = distar.40
	title = "distar.40.name"
	desc = "distar.40.desc"
	picture = GFX_evt_gray_goo
	show_sound = event_ship_bridge
	location = from
	
	is_triggered_only = yes

	option = {
    	name = EXCELLENT
    	owner = {
    	    if = {
    	        limit = { NOT = { has_technology = tech_engineering_1 } }
    	        give_technology = { tech = tech_engineering_1 }
    	    }
    	    else_if = {
    	        limit = { NOT = { has_technology = tech_assembly_pattern } }
    	        give_technology = { tech = tech_assembly_pattern }
    	    }
    	    else_if = {
    	    	limit = { NOT = { has_technology = tech_construction_templates } }
    	        give_technology = { tech = tech_construction_templates }
    	    }
    	    else_if = {
    	    	limit = { has_technology = tech_construction_templates }
    	        give_technology = { tech = tech_repeatable_reduced_building_time }
    	    }
    	    generate_lcluster_clue = yes
   		}
	}
}

## Dark Flow
ship_event = {
	id = distar.45
	title = "distar.45.name"
	desc = "distar.45.desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		owner = { set_country_flag = got_dark_flow }
		solar_system = {
			random_system_megastructure = {
				limit = {
					OR = {
						is_megastructure_type = gateway_ruined
						is_megastructure_type = gateway_restored
					}
				}
				save_event_target_as = dark_flow_gateway
			}
		}
	}

	option = {
		name = INTERESTING
		event_target:dark_flow_gateway = {
			enable_special_project = {
				name = "DARK_FLOW_PROJECT"
				location = this
				owner = root.owner
			}
		}
	}
}

ship_event = {
	id = distar.46
	title = "distar.46.name"
	desc = "distar.46.desc"
	picture = GFX_evt_surreal_visions
	show_sound = event_scanner
	location = event_target:dark_flow_gateway
	
	is_triggered_only = yes

	immediate = {
		random_system_megastructure = {
			limit = {
				OR = {
					is_megastructure_type = gateway_ruined
					is_megastructure_type = gateway_restored
				}
			}
			save_event_target_as = dark_flow_gateway
		}
	}

	option = {
		name = DISCONCERTING
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			hidden_effect = { pop_lcluster_event = yes }
		}
		leader = {
			add_trait = leader_trait_paranoid
			add_skill = 2
		}
	}
}

## Lost Amoeba
ship_event = {
	id = distar.50
	title = "distar.50.name"
	desc = {
		trigger = {
			owner = { has_country_flag = amoeba_encountered }
		}
		text = "distar.50.desc"
	}
	desc = {
		trigger = {
			owner = { NOT = { has_country_flag = amoeba_encountered } }
		}
		text = "distar.50.desc.first_enc"
	}
	picture = GFX_evt_friendly_amoeba
	show_sound = event_space_amoeba
	location = from
	
	is_triggered_only = yes

	immediate = {
		create_country = {
			name = "NAME_Lost_Amoeba"
			type = faction
			auto_delete = yes
			flag = {
    		    icon = {
    		        category = "pirate"
    		        file = "flag_pirate_3.dds"
    		    }
    		    background = {
    		        category = "backgrounds"
    		        file = "00_solid.dds"
    		    }
    		    colors = {
    		        "blue"
    		        "blue"
    		        "null"
    		        "null"
    		    }
    		}
			effect = {
				set_faction_hostility = {
					target = root.owner
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
				create_fleet = {
					name = "NAME_Lost_Amoeba"
					effect = {
						set_owner = prev
						create_ship = {
							name = "NAME_Lost_Amoeba"
							design = "NAME_Small_Space_Organism_Teal"
							prefix = no
							upgradable = no
						}
						set_location = {
							target = from
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						set_fleet_flag = lost_amoeba_fleet@root.owner
						save_event_target_as = lost_amoeba_fleet
					}
					settings = {
						can_upgrade = no
						can_disband = no
						can_change_composition = no
						can_change_leader = no
						uses_naval_capacity = no
						spawn_debris = yes
					}
				}
				save_event_target_as = lost_amoeba_country
			}
		}
		root = {
			fleet = {
				save_event_target_as = science_ship_fleet
			}
		}
		event_target:lost_amoeba_fleet = {
			auto_follow_fleet = {
				target = event_target:science_ship_fleet
				attack_fleet = no
			}
		}	
	}

	option = {
		name = distar.50.a
		event_target:lost_amoeba_fleet = {
			set_owner = root.owner
		}
		hidden_effect = {
			leader = {
				save_global_event_target_as = amoeba_finding_scientist
			}
			owner = {
				set_country_flag = amoeba_befriended # Achievement flag
				country_event = { id = distar.51 days = 365 random = 60 }
				country_event = { id = distar.304 days = 36500 }
				IF = {
					limit = {
						NOT = { has_country_flag = amoeba_encountered }
					}
					capital_scope = {
						enable_special_project = {
							name = "INVESTIGATE_SPACE_AMOEBA"
							location = this
							owner = root.owner
						}
					}
					set_country_flag = amoeba_encountered
				}
			}
		}
	}

	option = {
		name = distar.50.b
		custom_tooltip = distar.50.b.tooltip
		hidden_effect = {
			owner = {
				country_event = { id = distar.52 days = 90 }
				IF = {
					limit = {
						NOT = { has_country_flag = amoeba_encountered }
					}
					capital_scope = {
						enable_special_project = {
							name = "INVESTIGATE_SPACE_AMOEBA"
							location = this
							owner = root.owner
						}
					}
					set_country_flag = amoeba_encountered
				}
			}
		}
	}

	option = {
		name = "distar.50.c"
		event_target:lost_amoeba_fleet = {
			enable_special_project = {
				name = "DISSECTION_PROJECT"
				location = this
				owner = root.owner
			}
		}
		hidden_effect = {
			owner = {
				IF = {
					limit = {
						NOT = { has_country_flag = amoeba_encountered }
					}
					capital_scope = {
						enable_special_project = {
							name = "INVESTIGATE_SPACE_AMOEBA"
							location = this
							owner = root.owner
						}
					}
					set_country_flag = amoeba_encountered
				}
			}
		}
	}
}

country_event = { #Adopted Amoeba Evolves
	id = distar.51
	title = "distar.51.name"
	desc = "distar.51.desc"
	picture = GFX_evt_friendly_amoeba
	show_sound = event_space_amoeba
	location = event_target:lost_amoeba_adult_fleet
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:lost_amoeba_fleet
	}

	immediate = {
		create_fleet = {
			name = "NAME_Adopted_Amoeba"
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_Adopted_Amoeba"
					design = "NAME_Large_Space_Organism_Teal"
					prefix = no
					upgradable = no
					effect = {
						save_event_target_as = lost_amoeba_ship
					}
				}
				set_location = {
					target = event_target:lost_amoeba_fleet
				}
				set_fleet_stance = passive
				set_fleet_flag = lost_amoeba_adult_fleet@root
				save_event_target_as = lost_amoeba_adult_fleet
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
		event_target:lost_amoeba_fleet = {
			delete_fleet = {
				target = this
				destroy_template = yes
			}
		}
		if = {
			limit = { exists = event_target:lost_amoeba_country }
			event_target:lost_amoeba_country = {
				destroy_country = yes
			}
		}
	}

	option = {
		name = "distar.51.a"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Bubbles"
			hidden_effect = {
				add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
				add_modifier = { modifier = "evolved_weapon_boost" days = -1 }
				add_modifier = { modifier = "evolved_firing_rate" days = -1 }
				add_modifier = { modifier = "evolved_evasion" days = -1 }
			}
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Bubbles"
			}
		}
	}
	option = {
		name = "distar.51.b"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Nyx"
			hidden_effect = {
				add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
				add_modifier = { modifier = "evolved_weapon_boost" days = -1 }
				add_modifier = { modifier = "evolved_firing_rate" days = -1 }
				add_modifier = { modifier = "evolved_evasion" days = -1 }
			}
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Nyx"
			}
		}
	}
	option = {
		name = "distar.51.c"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Renegade"
			hidden_effect = {
				add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
				add_modifier = { modifier = "evolved_weapon_boost" days = -1 }
				add_modifier = { modifier = "evolved_firing_rate" days = -1 }
				add_modifier = { modifier = "evolved_evasion" days = -1 }
			}
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Renegade"
			}
		}
	}
	option = {
		name = "distar.51.d"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Euka"
			hidden_effect = {
				add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
				add_modifier = { modifier = "evolved_weapon_boost" days = -1 }
				add_modifier = { modifier = "evolved_firing_rate" days = -1 }
				add_modifier = { modifier = "evolved_evasion" days = -1 }
			}
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Euka"
			}
		}
	}
	option = {
		name = "distar.51.e"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Cyto"
			hidden_effect = {
				add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
				add_modifier = { modifier = "evolved_weapon_boost" days = -1 }
				add_modifier = { modifier = "evolved_firing_rate" days = -1 }
				add_modifier = { modifier = "evolved_evasion" days = -1 }
			}
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Cyto"
			}
		}
	}
	option = {
		name = "distar.51.f"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Boomer"
			hidden_effect = {
				add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
				add_modifier = { modifier = "evolved_weapon_boost" days = -1 }
				add_modifier = { modifier = "evolved_firing_rate" days = -1 }
				add_modifier = { modifier = "evolved_evasion" days = -1 }
			}
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Boomer"
			}
		}
	}
	option = {
		name = "distar.51.g"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Blaze"
			hidden_effect = {
				add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
				add_modifier = { modifier = "evolved_weapon_boost" days = -1 }
				add_modifier = { modifier = "evolved_firing_rate" days = -1 }
				add_modifier = { modifier = "evolved_evasion" days = -1 }
			}
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Blaze"
			}
		}
	}
	option = {
		name = "distar.51.h"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Nova"
			hidden_effect = {
				add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
				add_modifier = { modifier = "evolved_weapon_boost" days = -1 }
				add_modifier = { modifier = "evolved_firing_rate" days = -1 }
				add_modifier = { modifier = "evolved_evasion" days = -1 }
			}
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Nova"
			}
		}
	}
	option = {
		name = "distar.51.more"
		hidden_effect = {
			country_event = { id = distar.55 }
		}
		event_target:lost_amoeba_adult_fleet = {
			hidden_effect = {
				add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
				add_modifier = { modifier = "evolved_weapon_boost" days = -1 }
				add_modifier = { modifier = "evolved_firing_rate" days = -1 }
				add_modifier = { modifier = "evolved_evasion" days = -1 }
			}
		}
	}
}

country_event = {
	id = distar.55
	title = "distar.55.name"
	desc = "distar.55.desc"
	picture = GFX_evt_friendly_amoeba
	show_sound = event_space_amoeba
	location = event_target:lost_amoeba_adult_fleet
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:lost_amoeba_adult_fleet
	}

	option = {
		name = "distar.55.a"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Blitz"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Blitz"
			}
		}
	}
	option = {
		name = "distar.55.b"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Zero"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Zero"
			}
		}
	}
	option = {
		name = "distar.55.c"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Deva"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Deva"
			}
		}
	}
	option = {
		name = "distar.55.d"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Kos"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Kos"
			}
		}
	}
	option = {
		name = "distar.55.e"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Amemba"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Amemba"
			}
		}
	}
	option = {
		name = "distar.55.f"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Beauregarde"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Beauregarde"
			}
		}
	}
	option = {
		name = "distar.55.g"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Bluey"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Bluey"
			}
		}
	}
	option = {
		name = "distar.55.h"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Zeke"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Zeke"
			}
		}
	}
	option = {
		name = "distar.51.more"
		hidden_effect = {
			country_event = { id = distar.56 }
		}
	}
}

country_event = {
	id = distar.56
	title = "distar.55.name"
	desc = "distar.56.desc"
	picture = GFX_evt_friendly_amoeba
	show_sound = event_space_amoeba
	location = event_target:lost_amoeba_adult_fleet
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:lost_amoeba_adult_fleet
	}

	option = {
		name = "distar.56.a"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Storm"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Storm"
			}
		}
	}
	option = {
		name = "distar.56.b"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Ghost"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Ghost"
			}
		}
	}
	option = {
		name = "distar.56.c"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Cygni"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Cygni"
			}
		}
	}
	option = {
		name = "distar.56.d"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Vesper"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Vesper"
			}
		}
	}
	option = {
		name = "distar.56.e"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Arda"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Arda"
			}
		}
	}
	option = {
		name = "distar.56.f"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Phaeton"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Phaeton"
			}
		}
	}
	option = {
		name = "distar.56.g"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Wraith"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Wraith"
			}
		}
	}
	option = {
		name = "distar.56.h"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Rokka"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Rokka"
			}
		}
	}
	option = {
		name = "distar.56.i"
		event_target:lost_amoeba_adult_fleet = {
			set_name = "NAME_Fluffy"
		}
		hidden_effect = {
			event_target:lost_amoeba_ship = {
				set_name = "NAME_Fluffy"
			}
		}
	}
}

country_event = { #Lost Amoeba leaves
	id = distar.52
	title = "distar.52.name"
	desc = "distar.52.desc"
	picture = GFX_evt_star_chart
	show_sound = event_space_amoeba
	location = event_target:solar_system_tar
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:lost_amoeba_fleet
		NOT = { has_special_project = DISSECTION_PROJECT }
	}

	immediate = {
		event_target:lost_amoeba_fleet = {
			solar_system = {
				save_event_target_as = solar_system_tar
			}
		}
		event_target:lost_amoeba_fleet = {
			delete_fleet = this
		}
		if = {
			limit = { exists = event_target:lost_amoeba_country }
			event_target:lost_amoeba_country = {
				destroy_country = yes
			}
		}
	}

	option = {
		name = INTERESTING
		IF = {
			limit = {
				NOR = {
					has_tech_option = tech_amoeba_strike_craft_1
					has_technology = tech_amoeba_strike_craft_1
				}
			}
			add_research_option = tech_amoeba_strike_craft_1
		}
		ELSE_IF = {
			limit = {
				has_tech_option = tech_amoeba_strike_craft_1
			}
			add_tech_progress = {
				tech = tech_amoeba_strike_craft_1
				progress = 0.80
			}
		}
		ELSE = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
	}
}

ship_event = { #Lost Amoeba Dissection completed
	id = distar.53
	title = "distar.53.name"
	desc = {
		trigger = {
			owner = { NOT = { has_technology = tech_regenerative_hull_tissue } }
		}
		text = "distar.53.desc.lacks_tech"
	}
	desc = {
		trigger = {
			owner = { has_technology = tech_regenerative_hull_tissue }
		}
		text = "distar.53.desc.has_tech"
	}
	picture = GFX_evt_society_research
	show_sound = event_space_amoeba
	location = fromfrom
	
	is_triggered_only = yes

	immediate = {
		solar_system = {
			random_fleet_in_system = {
				limit = { has_fleet_flag = lost_amoeba_fleet@root.owner }
				destroy_fleet = this
			}
		}
		if = {
			limit = { exists = event_target:lost_amoeba_country }
			event_target:lost_amoeba_country = {
				destroy_country = yes
			}
		}
	}

	option = {
		name = INTERESTING
		owner = {
			IF = {
				limit = {
					NOR = {
						has_tech_option = tech_regenerative_hull_tissue
						has_technology = tech_regenerative_hull_tissue
					}
				}
				add_research_option = tech_regenerative_hull_tissue
			}
			ELSE_IF = {
				limit = {
					has_tech_option = tech_regenerative_hull_tissue
					NOT = { has_technology = tech_regenerative_hull_tissue }
				}
				add_tech_progress = {
					tech = tech_regenerative_hull_tissue
					progress = 0.50
				}
			}
			ELSE = {
				add_monthly_resource_mult = {
					resource = society_research
					value = @tier2researchreward
					min = @tier2researchmin
					max = @tier2researchmax
				}
			}
		}
	}
}

country_event = { #Lost Amoeba escapes on_fail
	id = distar.54
	title = "distar.54.name"
	desc = "distar.54.desc"
	picture = GFX_evt_star_chart
	show_sound = event_space_amoeba
	location = event_target:solar_system_tar
	
	is_triggered_only = yes

	trigger = {
		exists = fromfrom
	}

	immediate = {
		fromfrom = {
			solar_system = {
				save_event_target_as = solar_system_tar
			}
		}
		fromfrom = { delete_fleet = this }
		if = {
			limit = { exists = event_target:lost_amoeba_country }
			event_target:lost_amoeba_country = {
				destroy_country = yes
			}
		}
	}

	option = {
		name = CURSES
	}
}

country_event = { #Discovering Scientist becomes depressed if Amoeba dies
	id = distar.57
	title = "distar.57.name"
	desc = "distar.57.desc"
	picture = GFX_evt_space_funeral
	show_sound = event_life_support_fail
	location = FromFrom
	
	is_triggered_only = yes

	trigger = {
		fromfrom.fleet = {
			OR = {
				has_fleet_flag = lost_amoeba_adult_fleet@root
				has_fleet_flag = lost_amoeba_centenarian_fleet@root
			}
		}
		exists = event_target:amoeba_finding_scientist
	}

	option = {
		name = "distar.57.a"
		event_target:amoeba_finding_scientist = {
			add_trait = leader_trait_substance_abuser
		}
	}
}


country_event = { #Upgrade if Amoeba survives 100 years
	id = distar.304
	title = "distar.304.name"
	desc = "distar.304.desc"
	picture = GFX_evt_friendly_amoeba
	show_sound = event_space_amoeba
	location = event_target:lost_amoeba_centenarian_fleet
	
	is_triggered_only = yes

	trigger = {
		any_owned_fleet = { #Since each empire can have one, we don't want a GET
			has_fleet_flag = lost_amoeba_adult_fleet@root
		}
	}

	immediate = {
		random_owned_fleet = {
			limit = {
				has_fleet_flag = lost_amoeba_adult_fleet@root
			}
			save_event_target_as = lost_amoeba_adult_fleet
		}
		create_fleet = {
			name = event_target:lost_amoeba_adult_fleet
			effect = {
				set_owner = root
				create_ship = {
					name = event_target:lost_amoeba_adult_fleet
					design = "NAME_Adopted_Amoeba_Centenarian"
					prefix = no
					upgradable = no
				}
				set_location = {
					target = event_target:lost_amoeba_adult_fleet
				}
				set_fleet_stance = passive

				add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
				add_modifier = { modifier = "evolved_weapon_boost_2" days = -1 }
				add_modifier = { modifier = "evolved_firing_rate" days = -1 }
				add_modifier = { modifier = "evolved_evasion" days = -1 }

				set_fleet_flag = lost_amoeba_centenarian_fleet@root
				save_event_target_as = lost_amoeba_centenarian_fleet
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
		event_target:lost_amoeba_adult_fleet = {
			delete_fleet = this
		}
	}

	option = {
		name = ASTOUNDING
		custom_tooltip = "distar.304.a.tooltip"
	}
}

ship_event = { #Ouroboros
	id = distar.60
	title = "distar.60.name"
	desc = "distar.60.desc"
	picture = GFX_evt_space_debris
	show_sound = event_sensor_ping
	location = event_target:kohtalo_first_fleet
	
	is_triggered_only = yes

	immediate = {
		create_ambient_object = {
			type = "kohtalo_object"
			location = from
		}
		last_created_ambient_object = {
			set_location = {
				target = from
				distance = 20
				angle = random
			}
			save_event_target_as = kohtalo_first_fleet
		}
		owner = {
			set_country_flag = got_ouroboros
			country_event = { id = story.5 days = 30 }
		}
		solar_system = { save_global_event_target_as = ouroboros_system }
		from = { set_planet_flag = ouroboros_pulsar_flag }
	}

	option = {
		name = UNFORTUNATE
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
		hidden_effect = { owner = { country_event = { id = distar.61 days = 360 } } }
	}
}

country_event = {
	id = distar.61
	title = "distar.61.name"
	desc = "distar.61.desc"
	picture = GFX_evt_ship_in_orbit_2
	show_sound = event_sensor_ping
	location = event_target:kohtalo_second_fleet
	
	is_triggered_only = yes

	immediate = {
		create_country = {
			name = "NAME_Kohtalo"
			type = faction
			flag = {
    		    icon = {
    		        category = "spherical"
    		        file = "flag_spherical_22.dds"
    		    }
    		    background = {
    		        category = "backgrounds"
    		        file = "circle.dds"
    		    }
    		    colors = {
    		        "indigo"
    		        "black"
    		        "null"
    		        "null"
    		    }
    		}
			effect = {
				set_faction_hostility = {
					target = root
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
				save_event_target_as = kohtalo_country
			}
		}
		random_planet_within_border = {
			limit = {
				is_star = yes
				solar_system = { NOT = { is_same_value = event_target:ouroboros_system } }
			}
			save_event_target_as = spawnpoint_tar
		}
		event_target:kohtalo_country = {
			create_species = {
				name = random
				class = MOL
				portrait = mol4
				namelist = "MOL1"
				traits = random
				effect = {
					save_event_target_as = kohtalo_species
				}
			}
			create_leader = {
				class = admiral
				species = event_target:kohtalo_species
				name = "NAME_The_Captain"
				skill = 2
				event_leader = yes
			}
			last_created_leader = {
				save_event_target_as = kohtalo_captain
			}
			create_fleet = {
				name = "NAME_Kohtalo"
				effect = {
					set_owner = prev
					create_ship = {
						name = "NAME_Kohtalo"
						design = "NAME_Starfang"
					}
					set_location = {
						target = event_target:spawnpoint_tar
						distance = 50
						angle = random
					}
					set_fleet_stance = passive
					assign_leader = event_target:kohtalo_captain
					save_event_target_as = kohtalo_second_fleet
				}
			}
		}
	}

	option = {
		name = ONSCREEN
		hidden_effect = { country_event = { id = distar.62 } }
	}
}

country_event = {
	id = distar.62
	title = "distar.62.name"
	desc = "distar.62.desc"
	location = event_target:kohtalo_second_fleet

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:kohtalo_captain
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.62.a"
		hidden_effect = { country_event = { id = distar.63 } }
	}
}

country_event = {
	id = distar.63
	title = "distar.63.name"
	desc = "distar.63.desc"
	location = event_target:kohtalo_second_fleet

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:kohtalo_captain
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.63.a"
		hidden_effect = { country_event = { id = distar.64 } }
	}
}

country_event = {
	id = distar.64
	title = "distar.64.name"
	desc = "distar.64.desc"
	location = event_target:kohtalo_second_fleet

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:kohtalo_captain
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.64.a"
		hidden_effect = { country_event = { id = distar.65 } }
	}
}

country_event = {
	id = distar.65
	title = "distar.65.name"
	desc = "distar.65.desc"
	location = event_target:kohtalo_second_fleet

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:kohtalo_captain
		room = ethic_spaceship_room
	}

	immediate = {
		event_target:ouroboros_system = {
			random_system_planet = {
				limit = { has_planet_flag = ouroboros_pulsar_flag }
				save_event_target_as = ouroboros_pulsar
			}
		}
	}

	option = {
		name = "distar.65.a"
		custom_tooltip = "distar.65.a.tooltip"
		hidden_effect = { country_event = { id = distar.66 } }
	}

	option = {
		name = "distar.65.b"
		custom_tooltip = "distar.65.b.tooltip"
		hidden_effect = {
			event_target:kohtalo_second_fleet = {
				delete_fleet = this
			}
			country_event = { id = distar.68 days = 360 }
		}
	}
}

country_event = {
	id = distar.66
	title = "distar.66.name"
	desc = "distar.66.desc"
	location = event_target:kohtalo_second_fleet

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:kohtalo_captain
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.66.a"
		hidden_effect = {
			event_target:kohtalo_second_fleet = {
				delete_fleet = this
			}
			country_event = { id = distar.67 days = 360 }
		}
	}
}

country_event = {
	id = distar.67
	title = "distar.67.name"
	desc = "distar.67.desc"
	picture = GFX_evt_sabotaged_ship
	show_sound = event_ship_explosion
	location = event_target:kohtalo_second_ambient
	
	is_triggered_only = yes

	immediate = {
		event_target:ouroboros_pulsar = {
			create_ambient_object = {
				type = "kohtalo_object"
				location = this
			}
			last_created_ambient_object = {
				set_location = {
					target = event_target:ouroboros_pulsar
					distance = 20
					angle = random
				}
				save_event_target_as = kohtalo_second_ambient
			}
		}
	}

	option = {
		name = OOPS
		event_target:ouroboros_pulsar = {
			add_deposit = d_physics_4
			add_deposit = d_physics_3
		}
	}

	after = {
		if = {
			limit = {
				exists = event_target:kohtalo_country
			}
			event_target:kohtalo_country = {
				destroy_country = yes
			}
		}
	}
}

country_event = {
	id = distar.68
	title = "distar.68.name"
	desc = "distar.68.desc"
	picture = GFX_evt_sabotaged_ship
	show_sound = event_ship_explosion
	location = event_target:kohtalo_second_ambient
	
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				exists = event_target:kohtalo_country
			}
			event_target:kohtalo_country = {
				destroy_country = yes
			}
		}
		create_ambient_object = {
			type = "kohtalo_object"
			location = event_target:ouroboros_pulsar
		}
		last_created_ambient_object = {
			set_location = {
				target = event_target:ouroboros_pulsar
				distance = 20
				angle = random
			}
			save_event_target_as = kohtalo_second_ambient
		}
	}

	option = {
		name = "distar.68.a"
		event_target:ouroboros_pulsar = {
			add_deposit = d_physics_4
			add_deposit = d_physics_3
		}
	}
}	

# Ruined Ringworld Clones
ship_event = {
	id = distar.70
	title = "distar.70.name"
	desc = "distar.70.desc"
	picture = GFX_evt_clones
	show_sound = event_laboratory_sound
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = { set_deposit = d_physics_3 }
	}

	option = {
		name = "distar.70.a"
		trigger = {
			owner = {
				#any_owned_planet = { free_housing > 1	}
				NOR = { #Disallow for non-DS Hiveminds and non-Civic'd MIs
					AND = {
						has_authority = auth_machine_intelligence
						NOR = {
							has_civic = civic_machine_terminator
							has_civic = civic_machine_assimilator
							has_civic = civic_machine_servitor
						}
					}
					AND = {
						has_authority = auth_hive_mind
						NOT = {
							has_civic = civic_hive_devouring_swarm
						}
					}
				}
			}
		}
		from = {
			enable_special_project = {
				name = "CRYO_CLONES_PROJECT"
				location = this
				owner = root.owner
			}
		}
		hidden_effect = {
			owner = { pop_lcluster_event = yes }
		}
	}

	option = {
		name = "distar.70.b"
		from = {
			add_modifier = { modifier = clones_in_cryo days = -1 }
			add_deposit = d_society_4
		}
		hidden_effect = {
			owner = { pop_lcluster_event = yes }
		}
	}

	option = {
		name = "distar.70.exter"
		custom_tooltip = "distar.70.exter.tooltip"
		exclusive_trigger = {
			owner = { has_civic = civic_machine_terminator }
		}
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier3influencereward
				min = @tier3influencemin
				max = @tier3influencemax
			}
			add_monthly_resource_mult = {
				resource = unity
				value = @tier1unityreward
				min = @tier1unitymin
				max = @tier1unitymax
			}
			hidden_effect = { pop_lcluster_event = yes }
		}
	}
	option = {
		name = "distar.70.fp"
		custom_tooltip = "distar.70.fp.tooltip"
		exclusive_trigger = {
			owner = { has_civic = civic_fanatic_purifiers }
		}
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier3influencereward
				min = @tier3influencemin
				max = @tier3influencemax
			}
			add_monthly_resource_mult = {
				resource = unity
				value = @tier1unityreward
				min = @tier1unitymin
				max = @tier1unitymax
			}
			hidden_effect = { pop_lcluster_event = yes }
		}
	}
	option = { #In the event of no free tiles (ignoring Terminators and Swarm)
		name = "distar.70.no_room"
		trigger = {
			owner = {
				NOR = {
					#any_owned_planet = { free_housing > 1	}
					has_civic = civic_hive_devouring_swarm
					has_civic = civic_machine_terminator
				}
			}
		}
		from = {
			add_modifier = { modifier = clones_in_cryo days = -1 }
			add_deposit = d_society_4
		}
		hidden_effect = {
			owner = { pop_lcluster_event = yes }
		}
	}
}

ship_event = {	# RETILE
	id = distar.71
	title = "distar.71.name"
	desc = "distar.71.desc"
	picture = GFX_evt_clones
	show_sound = event_laboratory_sound
	location = fromfrom
	
	is_triggered_only = yes

	immediate = {
		IF = {
			LIMIT = {
				NOR = {
					exists = event_target:cryonic_clones
					owner = { species_portrait = mam8 }
				}
			}
			create_species = {
				name = "NAME_Cryonic_Clone"
				plural = "NAME_Cryonic_Clones"
				class = "MAM"
				portrait = mam8
				namelist = "MAM2"
				traits = {
					trait = "trait_presapient_proles"
					trait = "trait_strong"
					trait = "trait_nerve_stapled"
					trait = "trait_pc_nuked_preference"
				}
				effect = {
					save_global_event_target_as = cryonic_clones
				}
			}
		}
		ELSE_IF = {
			LIMIT = {
				NOT = {
					exists = event_target:cryonic_clones
				}
				owner = { species_portrait = mam8 }
			}
			create_species = {
				name = "NAME_Cryonic_Clone"
				plural = "NAME_Cryonic_Clones"
				class = "REP"
				portrait = rep15
				namelist = "REP2"
				traits = {
					trait = "trait_presapient_proles"
					trait = "trait_strong"
					trait = "trait_nerve_stapled"
					trait = "trait_pc_nuked_preference"
				}
				effect = {
					save_global_event_target_as = cryonic_clones
				}
			}
		}
		owner = {
			random_owned_planet = {
				weights = {
					base = 1
					modifier = { 
						add = 5
						free_housing > 0
					}
					modifier = { 
						add = 10
						free_housing > 1
					}
				}
				save_event_target_as = pop_planet
			}
		}
	}

	option = { #Default, if you have free tiles
		name = "distar.71.pop.default"
		custom_tooltip = "distar.71.pop.tooltip"
		trigger = {
			owner = {
				NOR = {
					has_ethic = "ethic_xenophile"
					has_ethic = "ethic_fanatic_xenophile"
					has_ethic = "ethic_gestalt_consciousness"
					has_policy_flag = slavery_allowed
				}
				#any_owned_planet = {
				#	free_housing > 1
				#}
			}
		}
		hidden_effect = {
			owner = {
				random_owned_planet = {
					weights = {
						base = 1
						modifier = { 
							add = 5
							free_housing > 0
						}
						modifier = { 
							add = 10
							free_housing > 1
						}
					}
					create_pop = {
						species = event_target:cryonic_clones
					}
				}
			}
		}
	}

	option = {
		name = "distar.71.no_room"
		trigger = {
			owner = {
				NOT = {
					any_owned_planet = { free_housing > 1	} #You can say no room, but we all know you could have made space!
				}
			}
		}
		create_fleet = {
			name = "NAME_Cryonic_Clones_Colonizer"
			effect = {
				set_owner = root.owner
				create_ship = {
				    name = "NAME_Cryonic_Clones_Colonizer"
				    random_existing_design = colonizer
				    colonizer_species = event_target:cryonic_clones
				    prefix = no
				    upgradable = no
				}
				set_location = {
					target = root
					distance = 5
					angle = random
				}
			}
			settings = {
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
				spawn_debris = no
			}
		}
		hidden_effect = {
			owner = { set_country_flag = got_cryonic_clone_colonizer }
		}
	}

	option = { #Phile and free tiles
		name = "distar.71.pop.phile"
		custom_tooltip = "distar.71.pop.tooltip"
		trigger = {
			owner = {
				OR = {
					has_ethic = "ethic_xenophile"
					has_ethic = "ethic_fanatic_xenophile"
				}
				#any_owned_planet = {
				#	free_housing > 1
				#}
			}
		}
		hidden_effect = {
			owner = {
				random_owned_planet = {
					weights = {
						base = 1
						modifier = { 
							add = 5
							free_housing > 0
						}
						modifier = { 
							add = 10
							free_housing > 1
						}
					}
					create_pop = {
						species = event_target:cryonic_clones
					}
				}
			}
		}
	}

	option = { #Slaver and free tiles
		name = "distar.71.pop.slave"
		custom_tooltip = "distar.71.pop.tooltip"
		trigger = {
			owner = {
				has_policy_flag = slavery_allowed
				#any_owned_planet = {
				#	free_housing > 1
				#}
			}
		}
		hidden_effect = {
			owner = {
				random_owned_planet = {
					weights = {
						base = 1
						modifier = { 
							add = 5
							free_housing > 0
						}
						modifier = { 
							add = 10
							free_housing > 1
						}
					}
					create_pop = {
						species = event_target:cryonic_clones
					}
				}
			}
		}
	}

	option = { #Devouring Swarm with or without free tiles
		name = "distar.71.pop.swarm"
		exclusive_trigger = {
			owner = { has_civic = civic_hive_devouring_swarm }
		}
		owner = {
			#IF = {
			#	LIMIT = {
			#		any_owned_planet = {
			#			free_housing > 1
			#		}
			#	}
			#	custom_tooltip = "distar.71.pop.tooltip"
			#	hidden_effect = {
			#		random_owned_planet = {
			#			limit = { free_housing > 1 }
			#			while = {
			#				count = 2
			#				create_pop = {
			#					species = event_target:cryonic_clones
			#				}
			#   		}
			#	}
			#	}
			#}
			#ELSE = {
				custom_tooltip = "distar.71.swarm.alt.tooltip"
				add_monthly_resource_mult = {
					resource = food
	 				value = @tier4materialreward
	 				min = @tier4materialmin
	 				max = @tier4materialmax
				}
				add_monthly_resource_mult = {
					resource = unity
					value = @tier1unityreward
					min = @tier1unitymin
					max = @tier1unitymax
				}
			#}
		}
	}

	option = { #Servitor and free tiles
		name = "distar.71.pop.servi"
		custom_tooltip = "distar.71.pop.tooltip"
		trigger = {
			owner = {
				has_civic = civic_machine_servitor
				#any_owned_planet = {
				#	free_housing > 1
				#}
			}
		}
		hidden_effect = {
			owner = {
				random_owned_planet = {
					weights = {
						base = 1
						modifier = { 
							add = 5
							free_housing > 0
						}
						modifier = { 
							add = 10
							free_housing > 1
						}
					}
					create_pop = {
						species = event_target:cryonic_clones
					}
				}
			}
		}
	}

	option = { #Assimilator and free tiles
		name = "distar.71.pop.assim"
		custom_tooltip = "distar.71.pop.tooltip"
		trigger = {
			owner = {
				has_civic = civic_machine_assimilator
				#any_owned_planet = { free_housing > 1	}
			}
		}
		hidden_effect = {
			owner = {
				random_owned_planet = {
					weights = {
						base = 1
						modifier = { 
							add = 5
							free_housing > 0
						}
						modifier = { 
							add = 10
							free_housing > 1
						}
					}
					create_pop = {
						species = event_target:cryonic_clones
					}
				}
			}
		}
	}
}

planet_event = { #On colonizing the repaired Megastructure section		# RETILE
	id = distar.72
	title = "distar.72.name"
	desc = "distar.72.desc"
	picture = GFX_evt_clones
	show_sound = event_laboratory_sound
	location = root
	
	is_triggered_only = yes

	trigger = {
		solar_system = { #If we did not thaw out the clones earlier
			star = { has_modifier = clones_in_cryo }
		}
		is_planet_class = pc_ringworld_habitable
	}

	immediate = {
		solar_system = {
			star = {
				clear_deposits = yes
				remove_modifier = clones_in_cryo
			}
		}
		IF = {
			LIMIT = {
				NOR = {
					exists = event_target:cryonic_clones
					owner = { species_portrait = mam8 }
				}
			}
			create_species = {
				name = "NAME_Cryonic_Clone"
				plural = "NAME_Cryonic_Clones"
				class = "MAM"
				portrait = mam8
				namelist = "MAM2"
				traits = {
					trait = "trait_presapient_proles"
					trait = "trait_strong"
					trait = "trait_nerve_stapled"
					trait = "trait_pc_nuked_preference"
				}
				effect = {
					save_global_event_target_as = cryonic_clones
				}
			}
		}
		ELSE_IF = {
			LIMIT = {
				NOT = {
					exists = event_target:cryonic_clones
				}
				owner = { species_portrait = mam8 }
			}
			create_species = {
				name = "NAME_Cryonic_Clone"
				plural = "NAME_Cryonic_Clones"
				class = "REP"
				portrait = rep15
				namelist = "REP2"
				traits = {
					trait = "trait_presapient_proles"
					trait = "trait_strong"
					trait = "trait_nerve_stapled"
					trait = "trait_pc_nuked_preference"
				}
				effect = {
					save_global_event_target_as = cryonic_clones
				}
			}
		}
	}

	option = {
		name = "distar.72.a"
		trigger = {
			owner = {
				NOR = {
					has_civic = civic_machine_terminator
					has_civic = civic_fanatic_purifiers
				}
			}
		}
		add_deposit = d_cryonic_clones
	}

	option = {
		name = "distar.72.b"
		trigger = {
			owner = {
				NOR = {
					has_ethic = ethic_gestalt_consciousness
					has_civic = civic_fanatic_purifiers
				}
			}
		}
		hidden_effect = {
			create_pop = {
				species = event_target:cryonic_clones
			}
		}
	}

	option = {
		name = "distar.71.pop.assim"
		trigger = {
			owner = { has_civic = civic_machine_assimilator }
		}
		hidden_effect = {
			create_pop = {
				species = event_target:cryonic_clones
			}
		}
	}

	option = {
		name = "distar.72.b.servi"
		trigger = {
			owner = { has_civic = civic_machine_servitor }
		}
		hidden_effect = {
			create_pop = {
				species = event_target:cryonic_clones
			}
		}
	}

	option = {
		name = "distar.71.pop.swarm"
		trigger = {
			owner = { has_civic = civic_hive_devouring_swarm }
		}
		hidden_effect = {
			create_pop = {
				species = event_target:cryonic_clones
			}
		}
	}

	option = {
		name = "distar.72.c"
		trigger = {
			owner = {
				NOR = {
					has_civic = civic_machine_servitor
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_fanatic_egalitarian
				}
			}
		}
	}
}

planet_event = { #On colonizing planet with Cryonic Clones Colonizer
	id = distar.73
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		OR = {
			controller = { has_country_flag = got_cryonic_clone_colonizer }
			owner = { has_country_flag = got_cryonic_clone_colonizer }
		}
		this = {
			any_owned_pop = {
				is_same_species = event_target:cryonic_clones
			}
		}
	}

	immediate = {
		every_owned_pop = {
			limit = { is_same_species = event_target:cryonic_clones }
			kill_pop = yes
		}
		create_pop = {
			species = owner_main_species
		}
		create_pop = {
			species = event_target:cryonic_clones
		}
		owner = { remove_country_flag = got_cryonic_clone_colonizer }
	}
}

#Asteroid Geode
ship_event = {
	id = distar.75
	title = "distar.75.name"
	desc = "distar.75.desc"
	picture = GFX_evt_asteroid_field
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes
		 
	option = {
		name = EXCELLENT
		from = {
			add_rare_crystals = yes
		}
		hidden_effect = { ship_event = { id = distar.305 days = 1 } }
	}
}

#Dead God
ship_event = {
	id = distar.80
	title = "distar.80.name"
	desc = "distar.80.desc"
	picture = GFX_evt_unspeakable_horror
	show_sound = event_mystic_reveal
	location = from
	
	is_triggered_only = yes

	immediate = {
		solar_system = {
			random_system_planet = {
				limit = {
					exists = owner
					owner = { is_primitive = yes }
					has_moon = yes
					any_moon = { is_same_value = from }
				}
				save_event_target_as = primitive_planet
			}
		}
		from = {
			if = {
				limit = { has_deposit_for = shipclass_mining_station }
				clear_deposits = yes
			}
		}
	}

	option = {
		name = FASCINATING
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
		from = {
			add_deposit = d_society_3
			hidden_effect = {
				event_target:primitive_planet = {
					remove_modifier = dead_god_planet_hidden
					add_modifier = { modifier = dead_god_planet days = -1 }
				}
				add_modifier = { modifier = dead_god days = -1 }
			}
		}
	}
}

country_event = { #on_planet_attackers_win
	id = distar.81
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		fromfrom = {
			OR = {
				has_modifier = dead_god_planet
				has_modifier = dead_god_planet_hidden
			}
		}
		from = { is_primitive = yes }
	}

	immediate = {
		fromfrom = { save_event_target_as = dead_god_planet }
		from.species = {
			save_event_target_as = worshipper_species
		}
		country_event = { id = distar.82 days = 2 }
	}
}

country_event = { 
	id = distar.82
	title = "distar.82.name"
	desc = "distar.82.desc"
	picture = GFX_evt_alien_cavemen
	show_sound = event_mystic_reveal
	location = event_target:dead_god_planet
	
	is_triggered_only = yes

	option = {
		name = "distar.82.a"
		event_target:dead_god_planet = {
			every_owned_pop = {
				limit = { is_same_species = event_target:worshipper_species }
				add_modifier = { modifier = conviction days = 7200 }
			}
		}
	}

	option = {
		name = "distar.82.b"
	}

	option = {
		name = "distar.82.c"
		trigger = {
			OR = {
				has_civic = civic_hive_devouring_swarm
				has_policy_flag = purge_allowed
			}
		}
	}

	option = {
		name = "distar.82.d"
		trigger = {
			has_policy_flag = purge_displacement_only
		}
	}
}

#Electric Impulses
ship_event = {
	id = distar.85
	title = "distar.85.name"
	desc = "distar.85.desc"
	picture = GFX_evt_hive
	show_sound = event_ship_bridge
	location = from
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.1 days = 30 } }
		from = {
			if = {
				limit = { has_deposit_for = shipclass_mining_station }
				clear_deposits = yes
			}
		}
	}

	option = {
		name = FASCINATING
		trigger = {
			owner = {
				NOR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		from = {
			add_deposit = d_society_3
			hidden_effect = {
				add_modifier = { modifier = life_electric days = -1 }
			}
		}
		leader = { add_skill = 1 }
	}

	option = {
		name = "distar.234.phobe"
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		from = {
			add_deposit = d_society_3
			hidden_effect = {
				add_modifier = { modifier = life_electric days = -1 }
			}
		}
		leader = { add_skill = 1 }
	}
}

#Sagittarius B2
ship_event = {
	id = distar.90
	title = "distar.90.name"
	desc = "distar.90.desc"
	picture = GFX_evt_gas_giant
	show_sound = event_ship_bridge
	location = from
	
	is_triggered_only = yes

	trigger = {
		owner = { NOT = { has_authority = auth_machine_intelligence } }
	}

	option = {
		name = "distar.90.a"
	}

	option = {
		name = "distar.90.b"
		owner = {
			add_modifier = { modifier = rummy_nebula days = 3600 }
		}
	}
}

#Sagittarius B2 Machine Intelligence version
ship_event = {
	id = distar.91
	title = "distar.91.name"
	desc = "distar.91.desc"
	picture = GFX_evt_gas_giant
	show_sound = event_ship_bridge
	location = from
	
	is_triggered_only = yes

	trigger = {
		owner = { has_authority = auth_machine_intelligence }
	}

	immediate = {
		owner = {
			random_neighbor_country = {
				limit = {
 					is_country_type = default
					has_communications = prev
					NOR = {
						has_ethic = ethic_gestalt_consciousness
						is_at_war_with = prev
						is_country = prev
					}
				}
				save_event_target_as = rum_nation
			}
		}
	}

	option = {
		name = "distar.91.a"
		custom_tooltip = "distar.91.a.tooltip"
		hidden_effect = { 
			owner = { country_event = { id = distar.92 days = 30 } }
			owner = { country_event = { id = distar.93 days = 30 } }
		}
	}

	option = {
		name = "distar.91.b"
	}
}

country_event = {
	id = distar.92
	title = "distar.92.name"
	desc = "distar.92.desc"
	location = event_target:rum_nation

	diplomatic = yes
	
	is_triggered_only = yes

	trigger = {
		event_target:rum_nation = { NOT = { is_hostile_to = root } }
	}

	picture_event_data = {
		portrait = event_target:rum_nation
		planet_background = event_target:rum_nation
		graphical_culture = event_target:rum_nation
		city_level = event_target:rum_nation
		room = event_target:rum_nation.ruler
	}

	option = {
		name = distar.92.a
		add_resource = { influence = 100 }
		event_target:rum_nation = {
			add_modifier = { modifier = rummy_nebula days = 3600 }
			add_opinion_modifier = {
				who = root
				modifier = opinion_gave_space_rum
			}
		}
	}
}

country_event = {
	id = distar.93
	title = "distar.93.name"
	desc = "distar.93.desc"
	location = event_target:rum_nation

	diplomatic = yes
	
	is_triggered_only = yes

	trigger = {
		event_target:rum_nation = { is_hostile_to = root }
	}

	picture_event_data = {
		portrait = event_target:rum_nation
		planet_background = event_target:rum_nation
		graphical_culture = event_target:rum_nation
		city_level = event_target:rum_nation
		room = event_target:rum_nation.ruler
	}

	option = {
		name = distar.93.a
		event_target:rum_nation = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_space_rum_failed
			}
		}
	}
}

#Resonant Crystals
ship_event = {
	id = distar.95
	title = "distar.95.name"
	desc = "distar.95.desc"
	picture = GFX_evt_in_the_dark
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	option = {
		name = INTERESTING
		from = {
			add_modifier = { modifier = soothing_crystals days = -1 }
		}
	}
}

ship_event = { #GC version
	id = distar.100
	title = "distar.100.name"
	desc = "distar.100.desc"
	picture = GFX_evt_in_the_dark
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	option = {
		name = "distar.100.a"
		from = {
			add_modifier = { modifier = good_vibrations days = -1 }
		}
	}
}

ship_event = { #Exofungus
	id = distar.105
	title = "distar.105.name"
	desc = "distar.105.desc"
	picture = GFX_evt_alien_nature
	show_sound = event_alien_nature
	location = from
	
	is_triggered_only = yes

	option = {
		name = WORRYING
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
	}
}

ship_event = { #White Hell
	id = distar.110
	title = "distar.110.name"
	desc = "distar.110.desc"
	picture = GFX_evt_frozen
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = {
			if = {
				limit = { has_deposit_for = shipclass_mining_station }
				clear_deposits = yes
			}
		}
	}

	option = {
		name = CURIOUS
		from = {
			add_deposit = d_physics_3
		}
	}
}

ship_event = { #Heavy Metal Frost
	id = distar.115
	title = "distar.115.name"
	desc = "distar.115.desc"
	picture = GFX_evt_toxic
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = {
			if = {
				limit = { has_deposit_for = shipclass_research_station }
				clear_deposits = yes
			}
		}
	}

	option = {
		name = INTERESTING
		from = {
			add_deposit = d_minerals_3
		}
	}
}

ship_event = { #Watery Grave
	id = distar.120
	title = "distar.120.name"
	desc = "distar.120.desc"
	picture = GFX_evt_in_the_dark
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	option = {
		name = INTERESTING
		from = {
			add_modifier = { modifier = watery_grave days = -1 }
			add_deposit = d_flooded_mounds
		}
	}
}

ship_event = { #Vacuum Collapse
	id = distar.125
	title = "distar.125.name"
	desc = "distar.125.desc"
	picture = GFX_evt_ruined_system
	show_sound = event_scanner
	location = event_target:derelict_particle_accelerator
	
	is_triggered_only = yes

	option = {
		name = DISCONCERTING
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
		}
		leader = {
			IF = {
				limit = { has_trait = leader_trait_expertise_particles	}
				add_experience = 200
			}
			else = {
				add_trait = leader_trait_expertise_particles
			}
		}
	}
}

ship_event = { #Old Foes Gatekeeper
	id = distar.130
	hide_window = yes
	
	is_triggered_only = yes

	#fire_only_once = yes

	trigger = {
		NOT = { has_global_flag = pyorun_czyrni_surveyed }
		from = {
			OR = {
				has_planet_flag = pyorun_planet
				has_planet_flag = czyrni_planet
			}
		}
	}

	immediate = { #For narrative reasons, anomaly spawns for the second planet
		set_global_flag = pyorun_czyrni_surveyed
		from = {
			IF = {
				LIMIT = { has_planet_flag = pyorun_planet }
				solar_system = {
					random_system_planet = {
						limit = { has_planet_flag = czyrni_planet }
						add_anomaly = {
							category = DISTAR_FOES_CAT
						}
					}
				}	
			}
			ELSE_IF = {
				LIMIT = { has_planet_flag = czyrni_planet }
				solar_system = {
					random_system_planet = {
						limit = { has_planet_flag = pyorun_planet }
						add_anomaly = {
							category = DISTAR_FOES_CAT
						}
					}
				}
			}
			ELSE = {
				#Nothing
			}
		}
	}
}

ship_event = { #Old Foes
	id = distar.131
	title = "distar.131.name"
	desc = "distar.131.desc"
	picture = GFX_evt_alien_cavemen
	show_sound = event_alien_nature
	location = from
	
	is_triggered_only = yes

	immediate = {
		IF = {
			LIMIT = { from = { has_planet_flag = czyrni_planet } }
			solar_system = {
				random_system_planet = {
					limit = { has_planet_flag = pyorun_planet }
					save_event_target_as = other_planet
				}	
			}
		}
		ELSE = {
			solar_system = {
				random_system_planet = {
					limit = { has_planet_flag = czyrni_planet }
					save_event_target_as = other_planet
				}
			}
		}
	}

	option = {
		name = UNFORTUNATE
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}
}

fleet_event = { #Scrap bot!
	id = distar.135
	title = "distar.135.name"
	desc = "distar.135.desc"
	picture = GFX_evt_scavenger_bot
	show_sound = event_construction
	location = event_target:scavenger_bot_system
	
	is_triggered_only = yes

	trigger = {
		from = { has_star_flag = scavenger_bot_system }
		owner = {
			is_country_type = default
			NOT = { has_country_flag = encountered_scavenger_bot }
		}
		exists = event_target:scavenger_bot_fleet
		exists = event_target:scavenger_bot_country
	}

	immediate = {
		random_system = {
			limit = { has_star_flag = scavenger_bot_system }
			save_event_target_as = scavenger_bot_system
		}
		owner = {
			set_country_flag = encountered_scavenger_bot
			establish_communications_no_message = event_target:scavenger_bot_country
			country_event = { id = story.8 days = 15 }
		}
	}

	option = {
		name = DISCONCERTING
	}
}

country_event = {
	id = distar.136
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = event_target:scavenger_bot_country
		is_same_value = event_target:scavenger_bot_country
		exists = event_target:scavenger_bot_fleet
		from = {
			is_same_value = event_target:scavenger_bot_fleet
		}
	}

	immediate = {
		from.solar_system = {
			random_system_planet = {
				limit = {
					NOT = { is_same_value = root.from.orbit }
				}
				save_event_target_as = new_location
			}
		}
		from = {
			auto_move_to_planet = {
				target = event_target:new_location
				clear_auto_move_on_arrival = no
			}
		}
	}
}

country_event = { #Death of Scavenger Bot
	id = distar.137
	title = "distar.137.name"
	desc = "distar.137.desc"
	picture = GFX_evt_large_explosion
	show_sound = event_space_battle
	location = FromFromFrom
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:scavenger_bot_fleet
		FromFromFrom.fleet = {
			is_same_value = event_target:scavenger_bot_fleet
		}
		is_country_type = default
	}

	immediate = {
		set_country_flag = scrapper_killed # Achievement flag
	}

	option = {
		name = "distar.137.a"
		hidden_effect = {
			set_variable = { which = picked_tech value = 0 }
			if = {
				limit = {
					has_technology = tech_ship_armor_5
					has_technology = tech_shields_5
					has_technology = tech_mass_drivers_5
					has_technology = tech_missiles_5
					has_technology = tech_lasers_5
				}
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier5researchreward
					min = @tier5researchreward
					max = @tier5researchreward
				}
			}
			else = {
				while = {
					limit = {
						check_variable = {
							which = picked_tech
							value < 2
						}
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_ship_armor_5
							}
							give_technology = { tech = tech_ship_armor_5 }
							change_variable = { which = "picked_tech" value = 1 }
						}
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_shields_5
							}
							give_technology = { tech = tech_shields_5 }
							change_variable = { which = "picked_tech" value = 1 }
						}
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_mass_drivers_5
							}
							give_technology = { tech = tech_mass_drivers_5 }
							change_variable = { which = "picked_tech" value = 1 }
						}
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_missiles_5
							}
							give_technology = { tech = tech_missiles_5 }
							change_variable = { which = "picked_tech" value = 1 }
						}
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_lasers_5
							}
							give_technology = { tech = tech_lasers_5 }
							change_variable = { which = "picked_tech" value = 1 }
						}
					}
				}
			}
		}
 		give_technology = { tech = tech_nanite_repair_system }
 		custom_tooltip = distar.137.tooltip
	}

	option = {
		name = "distar.137.paci"
		trigger = {
			has_ethic = ethic_fanatic_pacifist
			has_ethic = ethic_pacifist
			has_ethic = ethic_fanatic_xenophile
			has_ethic = ethic_xenophile
		}
		hidden_effect = {
			set_variable = { which = picked_tech value = 0 }
			if = {
				limit = {
					has_technology = tech_ship_armor_5
					has_technology = tech_shields_5
					has_technology = tech_mass_drivers_5
					has_technology = tech_missiles_5
					has_technology = tech_lasers_5
				}
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier5researchreward
					min = @tier5researchreward
					max = @tier5researchreward
				}
			}
			else = {
				while = {
					limit = {
						check_variable = {
							which = picked_tech
							value < 2
						}
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_ship_armor_5
							}
							give_technology = { tech = tech_ship_armor_5 }
							change_variable = { which = "picked_tech" value = 1 }
							tooltip = {
								give_technology = { tech = tech_ship_armor_5 }
							}
						}
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_shields_5
							}
							give_technology = { tech = tech_shields_5 }
							change_variable = { which = "picked_tech" value = 1 }
							tooltip = {
								give_technology = { tech = tech_shields_5 }
							}
						}
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_mass_drivers_5
							}
							give_technology = { tech = tech_mass_drivers_5 }
							change_variable = { which = "picked_tech" value = 1 }
							tooltip = {
								give_technology = { tech = tech_mass_drivers_5 }
							}
						}
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_missiles_5
							}
							give_technology = { tech = tech_missiles_5 }
							change_variable = { which = "picked_tech" value = 1 }
							tooltip = {
								give_technology = { tech = tech_missiles_5 }
							}
						}
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_lasers_5
							}
							give_technology = { tech = tech_lasers_5 }
							change_variable = { which = "picked_tech" value = 1 }
							tooltip = {
								give_technology = { tech = tech_lasers_5 }
							}
						}
					}
				}
			}
		}
		give_technology = { tech = tech_nanite_repair_system }
	}
}

ship_event = {
	id = distar.140
	title = "distar.140.name"
	desc = "distar.140.desc"
	picture = GFX_evt_star_white
	show_sound = event_ship_bridge
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = {
			IF = {
				limit = { has_deposit_for = shipclass_mining_station }
				clear_deposits = yes
			}
		}
	}

	option = {
		name = FASCINATING
		from = {
			add_deposit = d_physics_4
		}
	}
}

ship_event = {
	id = distar.145
	title = "distar.145.name"
	desc = "distar.145.desc"
	picture = GFX_evt_molten
	show_sound = event_ship_bridge
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = {
			clear_deposits = yes
		}
		owner = { country_event = { id = story.1 days = 30 } }
	}

	option = {
		name = FASCINATING
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
		from = {
			add_exotic_gases = yes
		}
		hidden_effect = { ship_event = { id = distar.305 days = 1 } }
	}
}

ship_event = {
	id = distar.150
	title = "distar.150.name"
	desc = "distar.150.desc"
	picture = GFX_evt_in_the_dark
	show_sound = event_ship_bridge
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = {
			clear_deposits = yes
		}
		owner = { country_event = { id = story.1 days = 30 } }
	}

	option = {
		name = CURIOUS
		owner = {
			if = {
				limit = {
					has_tech_option = tech_mine_living_metal
				}
				add_tech_progress = {
					tech = tech_mine_living_metal
					progress = 0.25
				}
			}
			else = {
				add_research_option = tech_mine_living_metal
			}
		}
		from = {
			add_deposit = d_living_metal_deposit
		}
	}
}

ship_event = { #The Big Friendly Warform
	id = distar.155
	title = "distar.155.name"
	desc = "distar.155.desc"
	picture = GFX_evt_toxic
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	option = {
		trigger = {
			owner = { NOR = { has_policy_flag = ai_outlawed has_authority = auth_machine_intelligence } }
		}
		name = "distar.155.a"
		from = {
			enable_special_project = {
				name = "RECOVER_WARFORM_PROJECT"
				location = this
				owner = root.owner
			}
		}
	}
	option = {
		trigger = {
			owner = { NOR = { has_policy_flag = ai_outlawed has_authority = auth_machine_intelligence } }
		}
		name = "distar.155.b"
	}
	option = {
		trigger = {
			owner = { has_policy_flag = ai_outlawed }
		}
		name = "distar.155.c"
		custom_tooltip = "distar.155.c.tooltip"
	} 
	option = {
		trigger = {
			owner = { has_authority = auth_machine_intelligence }
		}
		name = "distar.155.machi"
		from = {
			enable_special_project = {
				name = "RECOVER_WARFORM_PROJECT"
				location = this
				owner = root.owner
			}
		}
	}
	option = {
		trigger = {
			owner = { has_authority = auth_machine_intelligence }
		}
		name = "distar.155.machi_2"
	}
}

ship_event = {
	id = distar.156
	title = "distar.156.name" 
	desc = {
		trigger = {
			owner = { NOT = { has_authority = auth_machine_intelligence } }
		}
		text = "distar.156.desc"
	}
	desc = {
		trigger = {
			owner = { has_authority = auth_machine_intelligence }
		}
		text = "distar.156.desc.machi"
	}
	picture = GFX_evt_space_debris
	show_sound = event_construction
	location = event_target:repaired_warform
	
	is_triggered_only = yes

	immediate = {
		save_event_target_as = research_ship

		create_country = {
			name = "NAME_S8751"
			type = faction
			auto_delete = yes
			flag = {
    		    icon = {
    		        category = "special"
    		        file = "unknown.dds"
    		    }
    		    background = {
    		        category = "backgrounds"
    		        file = "00_solid.dds"
    		    }
    		    colors = {
    		        "green"
    		        "green"
    		        "null"
    		        "null"
    		    }
    		}
    		effect = {
    			save_event_target_as = warform_country
    		}
    	}
    	event_target:warform_country = {
    		set_faction_hostility = {
				target = root.owner
				set_hostile = no
				set_neutral = no
				set_friendly = yes
			}
			IF = {
				LIMIT = { host_has_dlc = "Synthetic Dawn Story Pack" }
				create_species = {
					name = "NAME_S8751"
					class = ROBOT
					portrait = sd_rep_robot
					namelist = "AI"
					traits = {
						trait = trait_mechanical
						trait = random_traits
					}
					effect = {
						save_event_target_as = warform_species
					}
				}
			}
			ELSE = {
				create_species = {
					name = "NAME_S8751"
					class = ROBOT
					portrait = default_robot
					namelist = "AI"
					traits = {
						trait = trait_mechanical
						trait = random_traits
					}
					effect = {
						save_event_target_as = warform_species
					}
				}
			}
			create_leader = {
				class = admiral
				species = event_target:warform_species
				name = "NAME_S8751"
				skill = 3
				event_leader = yes
			}
			last_created_leader = {
				save_event_target_as = warform_leader
			}
			create_fleet = {
				name = "NAME_S8751"
				effect = {
					set_owner = prev
					create_ship = {
						name = "NAME_S8751"
						design = "NAME_S8751"
						prefix = no
						upgradable = no
					}
					set_location = {
						target = root
						distance = 10
						angle = random
					}
					set_fleet_stance = passive
					add_modifier = { modifier = "big_friendly_warform_power" days = -1 }
					assign_leader = event_target:warform_leader
					set_fleet_flag = repaired_warform
					save_event_target_as = repaired_warform
				}
				settings = {
					can_upgrade = yes
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
					spawn_debris = yes
				}
			}
		}
	}

	option = {
		name = ONSCREEN
		hidden_effect = {
			owner = {
				country_event = { id = distar.158 }
			}
		}
	}
}

country_event = { #on_fail
	id = distar.157
	title = "distar.157.name"
	desc = "distar.157.desc"
	picture = GFX_evt_toxic
	show_sound = event_scanner
	location = fromfrom

	is_triggered_only = yes

	option = {
		name = CURSES
	}

}

country_event = {
	id = distar.158
	title = "distar.158.name"
	desc = "distar.158.desc"
	location = event_target:repaired_warform

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:warform_leader
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.158.a"
		response_text = distar.158.a.response
		is_dialog_only = yes
	}

	option = {
		name = "distar.158.b"
		response_text = distar.158.b.response
		is_dialog_only = yes
	}

	option = {
		name = "distar.158.c"
		response_text = distar.158.c.response
		is_dialog_only = yes
	}

	option = {
		name = "distar.158.d"
		trigger = {
			NOT = { has_authority = auth_machine_intelligence }
		}
		hidden_effect = { country_event = { id = distar.159 } }
	}

	option = {
		name = "distar.158.d.machi"
		trigger = {
			has_authority = auth_machine_intelligence
		}
		hidden_effect = { country_event = { id = distar.159 } }
	}

}

country_event = {
	id = distar.159
	title = "distar.158.name"
	desc = "distar.159.desc"
	location = event_target:repaired_warform

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:warform_leader
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.159.a"
		trigger = {
			NOT = { has_authority = auth_machine_intelligence }
		}
		hidden_effect = { country_event = { id = distar.160 } }
	}
	option = {
		name = "distar.159.a.machi"
		trigger = {
			has_authority = auth_machine_intelligence
		}
		hidden_effect = { country_event = { id = distar.160 } }
	}
}

country_event = {
	id = distar.160
	title = "distar.158.name"
	desc = "distar.159.desc"
	location = event_target:repaired_warform

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:warform_leader
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.160.a"
		trigger = {
			NOT = { has_authority = auth_machine_intelligence }
		}
		hidden_effect = { country_event = { id = distar.161 } }
	}
	option = {
		name = "distar.160.a.machi"
		trigger = {
			has_authority = auth_machine_intelligence
		}
		hidden_effect = { country_event = { id = distar.161 } }
	}
}

country_event = {
	id = distar.161
	title = "distar.158.name"
	desc = "distar.161.desc"
	location = event_target:repaired_warform

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:warform_leader
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.161.a"
		trigger = {
			NOT = { has_authority = auth_machine_intelligence }
		}
		hidden_effect = { country_event = { id = distar.162 } }
	}
	option = {
		name = "distar.161.a.machi"
		trigger = {
			has_authority = auth_machine_intelligence
		}
		hidden_effect = { country_event = { id = distar.162 } }
	}
	option = {
		name = "distar.161.b"
		trigger = {
			NOT = { has_authority = auth_machine_intelligence }
		}
		hidden_effect = { country_event = { id = distar.164 } }
	}
}

country_event = {
	id = distar.162
	title = "distar.158.name"
	desc = "distar.162.desc"
	location = event_target:repaired_warform

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:warform_leader
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.162.a"
		trigger = {
			NOT = { has_authority = auth_machine_intelligence }
		}
		hidden_effect = { country_event = { id = distar.163 } }
	}
	option = {
		name = "distar.162.a.machi"
		trigger = {
			has_authority = auth_machine_intelligence
		}
		hidden_effect = { country_event = { id = distar.163 } }
	}
}

country_event = {
	id = distar.163
	title = "distar.158.name"
	desc = "distar.163.desc"
	location = event_target:repaired_warform

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:warform_leader
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.163.a"
		trigger = {
			NOT = { has_authority = auth_machine_intelligence }
		}
		hidden_effect = { country_event = { id = distar.164 } }
	}

	option = {
		name = "distar.163.a.machi"
		trigger = {
			has_authority = auth_machine_intelligence
		}
		hidden_effect = { country_event = { id = distar.164 } }
	}
}

country_event = {
	id = distar.164
	title = "distar.158.name"
	desc = "distar.164.desc"
	location = event_target:repaired_warform

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:warform_leader
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.164.a"
		trigger = {
			OR = {
				has_ethic = ethic_xenophile
				has_ethic = ethic_fanatic_xenophile
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_egalitarian
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_gestalt_consciousness
			}
		}
		hidden_effect = {
			clone_leader = {
				target = event_target:warform_leader
				class = admiral
				effect = {
					save_event_target_as = warform_leader
				}
			}
		}
		event_target:repaired_warform = {
			set_owner = root
			hidden_effect = { set_leader = event_target:warform_leader }
		}
	}

	option = {
		name = "distar.164.b"
		trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
				has_ethic = ethic_spiritualist
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_gestalt_consciousness
			}
		}
		hidden_effect = {
			clone_leader = {
				target = event_target:warform_leader
				class = admiral
				effect = {
					save_event_target_as = warform_leader
				}
			}
		}
		event_target:repaired_warform = {
			set_owner = root
			hidden_effect = { set_leader = event_target:warform_leader }
		}
	}

	option = {
		trigger = {
			NOT = { has_policy_flag = ai_full_rights }
		}
		name = "distar.164.c"
		hidden_effect = { country_event = { id = distar.165 } }
	}

	option = {
		exclusive_trigger = {
			has_authority = auth_machine_intelligence
		}
		name = "distar.164.machi"
		hidden_effect = {
			clone_leader = {
				target = event_target:warform_leader
				class = admiral
				effect = {
					save_event_target_as = warform_leader
				}
			}
			event_target:warform_leader = {
				modify_species = {
					species = this
					add_trait = trait_machine_unit
					add_traits_at_start_of_list = yes
				}
			}
		}
		event_target:repaired_warform = {
			set_owner = root
			hidden_effect = { set_leader = event_target:warform_leader }
		}
	}
}


country_event = {
	id = distar.165
	title = "distar.158.name"
	desc = "distar.165.desc"
	location = event_target:repaired_warform

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:warform_leader
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.165.a"
		hidden_effect = {
			clone_leader = {
				target = event_target:warform_leader
				class = admiral
				effect = {
					save_event_target_as = warform_leader
				}
			}
		}
		event_target:repaired_warform = {
			set_owner = root
			hidden_effect = { set_leader = event_target:warform_leader }
		}
	}

	option = {
		name = "distar.165.b"
		hidden_effect = { country_event = { id = distar.166 } }
	}
}

country_event = {
	id = distar.166
	title = "distar.158.name"
	desc = "distar.166.desc"
	location = event_target:repaired_warform

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:warform_leader
		room = ethic_spaceship_room
	}

	option = {
		name = OOPS
		hidden_effect = { 
			event_target:research_ship = {
				ship_event = { id = distar.167 }
			}
		}
	}
}

ship_event = {
	id = distar.167
	title = "distar.167.name"
	desc = "distar.167.desc"
	picture = GFX_evt_sabotaged_ship
	show_sound = event_scanner
	location = root
	
	is_triggered_only = yes

	immediate = {
		solar_system = {
			random_fleet_in_system = {
				LIMIT = { has_fleet_flag = repaired_warform }
				destroy_fleet = this
			}
		}
		if = {
			limit = { exists = event_target:warform_country }
			event_target:warform_country = {
				destroy_country = yes
			}
		}
	}

	option = {
		name = "distar.167.a"
		owner = {
			add_resource = { minerals = 300 }
		}
	}

	option = {
		name = "distar.167.b"
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
		}
	}
}

#Happy Little Brainslugs
ship_event = {
	id = distar.170
	title = "distar.170.name"
	desc = {
		trigger = {
			owner = {
				NOT = { has_authority = auth_machine_intelligence }
			}
		}
		text = "distar.170.desc"
	}
	desc = {
		trigger = {
			owner = {
				has_authority = auth_machine_intelligence
			}
		}
		text = "distar.170.desc.machi"
	}
	picture = GFX_evt_alien_nature
	show_sound = event_alien_nature
	location = from
	
	is_triggered_only = yes

	option = {
		trigger = {
			owner = {
				NOT = { has_authority = auth_machine_intelligence }
				any_owned_pop = {
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
				}
			}
		}
		name = "distar.170.a"
		from = {
			enable_special_project = {
				name = "BRAINSLUG_PROJECT"
				location = this
				owner = root.owner
			}
		}
	}

	option = {
		trigger = {
			owner = {
				NOT = { has_authority = auth_machine_intelligence }
			}
		}
		name = NOTIME
	}

	option = {
		trigger = {
			owner = {
				has_authority = auth_machine_intelligence
			}
		}
		name = "distar.170.machi"
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
		}
	}
}

ship_event = {
	id = distar.171
	title = "distar.171.name"
	desc = "distar.171.desc"
	picture = GFX_evt_society_research
	show_sound = event_alien_nature
	location = from
	
	is_triggered_only = yes

	immediate = {
		leader = {
			save_event_target_as = brainslug_scientist
		}
	}

	option = {
		name = "distar.171.a"
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
		}
	}

	option = {
		name = "distar.171.b"
		hidden_effect = {
			ship_event = { id = distar.172 days = 30 }
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
		}
	}
}

ship_event = {
	id = distar.172
	title = "distar.172.name"
	desc = "distar.172.desc"
	picture = GFX_evt_hive_mind
	show_sound = event_alien_nature
	location = root
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:brainslug_scientist
	}

	immediate = {
		leader = {
			add_trait = leader_trait_scientist_brainslug
		}
		owner = {
			set_country_flag = finished_brainslug_chain
		}
	}

	option = {
		trigger = {
			owner = {
				NOR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		name = "distar.172.a"
		owner = {
			while = {
				count = 3
				random_owned_pop = {
					limit = {
						is_sapient = yes
						species = {
							NOR = {
								has_trait = trait_cybernetic
								has_trait = trait_mechanical
								has_trait = trait_machine_unit
								is_species_class = ROBOT
							}
						}
					}
					modify_species = {
						species = this
						add_trait = trait_brainslug
						add_traits_at_start_of_list = yes
						hidden_effect = {
							set_citizenship_type = {
								country = root.owner
								type = citizenship_full
								cooldown = no
							}
						}
					}
				}
			}
			hidden_effect = {
				while = {
					count = 2
					random_owned_leader = {
						LIMIT = {
							leader_class = scientist
							species = {
								NOR = {
									has_trait = trait_cybernetic
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
									is_species_class = ROBOT
								}
							}
						}
						add_trait = leader_trait_scientist_brainslug
					}
				}
				random_owned_leader = {
					LIMIT = {
						leader_class = governor
						species = {
							NOR = {
								has_trait = trait_cybernetic
								has_trait = trait_mechanical
								has_trait = trait_machine_unit
								is_species_class = ROBOT
							}
						}
					}
					add_trait = leader_trait_governor_brainslug
				}
				country_event = { id = distar.174 } #Pool leaders get trait
				country_event = { id = distar.175 } #Unrest is generated
			}
		}
	}

	option = {
		trigger = { # at least one sluggable pop in xenophobe empire
			hidden_trigger = {
				owner = {
					OR = {
						has_ethic = ethic_xenophobe
						has_ethic = ethic_fanatic_xenophobe
					}
					any_owned_pop = {
						NOR = {
							has_ethic = ethic_xenophobe
							has_ethic = ethic_fanatic_xenophobe
						}
					}
				}
			}
		}
		name = "distar.172.a"
		owner = {
			while = { # slug *up to* three non-phobe pops
				count = 3
				random_owned_pop = {
					LIMIT = {
						NOR = {
							has_ethic = ethic_xenophobe
							has_ethic = ethic_fanatic_xenophobe
						}
						species = {
							NOR = {
								has_trait = trait_cybernetic
								has_trait = trait_mechanical
								has_trait = trait_machine_unit
								is_species_class = ROBOT
							}
						}
						is_sapient = yes
					}
					modify_species = {
						species = this
						add_trait = trait_brainslug
						add_traits_at_start_of_list = yes
						hidden_effect = {
							set_citizenship_type = {
								country = root.owner
								type = citizenship_full
								cooldown = no
							}
						}
					}
				}
			}
			hidden_effect = {
				country_event = { id = distar.174 } #Pool leaders get trait
				country_event = { id = distar.175 } #Unrest is generated
			}
		}
	}

	option = {
		name = "distar.172.b"
		custom_tooltip = "distar.172.b.tooltip"
	}
}

country_event = { #New leaders get Brainslug Trait
	id = distar.173
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		has_country_flag = finished_brainslug_chain
		from.species = {
			NOR = {
				has_trait = trait_cybernetic
				has_trait = trait_mechanical
				has_trait = trait_machine_unit
				is_species_class = ROBOT
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = {
					leader_class = general
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							is_species_class = ROBOT
						}
					}
				}
				random_list = {
					80 = {
						#Nothing
					}
					20 = {
						add_trait = leader_trait_general_brainslug
						add_ruler_trait = leader_trait_ruler_brainslug
					}
				}
				break = yes
			}
			if = {
				limit = {
					leader_class = admiral
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							is_species_class = ROBOT
						}
					}
				}
				random_list = {
					80 = {
						#Nothing
					}
					20 = {
						add_trait = leader_trait_admiral_brainslug
						add_ruler_trait = leader_trait_ruler_brainslug
					}
				}
				break = yes
			}
			if = {
				limit = {
					leader_class = governor
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							is_species_class = ROBOT
						}
					}
				}
				random_list = {
					80 = {
						#Nothing
					}
					20 = {
						add_trait = leader_trait_governor_brainslug
						add_ruler_trait = leader_trait_ruler_brainslug
					}
				}
				break = yes
			}
			if = {
				limit = {
					leader_class = scientist
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							is_species_class = ROBOT
						}
					}
				}
				random_list = {
					80 = {
						#Nothing
					}
					20 = {
						add_trait = leader_trait_scientist_brainslug
						add_ruler_trait = leader_trait_ruler_brainslug
					}
				}
				break = yes
			}
			if = {
				limit = {
					leader_class = ruler
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							is_species_class = ROBOT
						}
					}
				}
				random_list = {
					80 = {
						#Nothing
					}
					20 = {
						add_trait = leader_trait_ruler_brainslug
						add_ruler_trait = leader_trait_ruler_brainslug
					}
				}
				break = yes
			}
		}
	}
}

country_event = { #Pool leaders get Brainslug Trait
	id = distar.174
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		every_pool_leader = {
			if = {
				limit = {
					leader_class = general
					NOR = {
						has_trait = leader_trait_general_brainslug
						species = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							is_species_class = ROBOT
						}
					}
				}
				random_list = {
					80 = {
						#Nothing
					}
					20 = {
						add_trait = leader_trait_general_brainslug
						add_ruler_trait = leader_trait_ruler_brainslug
					}
				}
			}
			if = {
				limit = {
					leader_class = admiral
					NOR = {
						has_trait = leader_trait_admiral_brainslug
						species = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							is_species_class = ROBOT
						}
					}
				}
				random_list = {
					80 = {
						#Nothing
					}
					20 = {
						add_trait = leader_trait_admiral_brainslug
						add_ruler_trait = leader_trait_ruler_brainslug
					}
				}
			}
			if = {
				limit = {
					leader_class = governor
					NOR = {
						has_trait = leader_trait_governor_brainslug
						species = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							is_species_class = ROBOT
						}
					}
				}
				random_list = {
					80 = {
						#Nothing
					}
					20 = {
						add_trait = leader_trait_governor_brainslug
						add_ruler_trait = leader_trait_ruler_brainslug
					}
				}
			}
			if = {
				limit = {
					leader_class = scientist
					NOR = {
						has_trait = leader_trait_scientist_brainslug
						species = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							is_species_class = ROBOT
						}
					}
				}
				random_list = {
					80 = {
						#Nothing
					}
					20 = {
						add_trait = leader_trait_scientist_brainslug
						add_ruler_trait = leader_trait_ruler_brainslug
					}
				}
			}
			if = {
				limit = {
					leader_class = ruler
					NOR = {
						has_trait = leader_trait_ruler_brainslug
						species = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							is_species_class = ROBOT
						}
					}
				}
				random_list = {
					80 = {
						#Nothing
					}
					20 = {
						add_trait = leader_trait_ruler_brainslug
						add_ruler_trait = leader_trait_ruler_brainslug
					}
				}
			}
		}
	}
}


country_event = { #Cohabitants of Brainslugged pops generate initial Unrest
	id = distar.175
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		IF = {
			LIMIT = {
				NOR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
			every_owned_planet = {
				limit = {
					OR = {
						any_owned_pop = { has_trait = trait_brainslug }
						leader = {
							has_trait = leader_trait_governor_brainslug
						}
					}
				}
				add_modifier = { modifier = brainslug_woes days = 7300 }
			}
		}
		ELSE = { #Xenophobes result in higher unrest
			every_owned_planet = {
				limit = {
					OR = {
						any_owned_pop = { has_trait = trait_brainslug }
						leader = {
							has_trait = leader_trait_governor_brainslug
						}
					}
				}
				add_modifier = { modifier = brainslug_woes_phobe days = 7300 }
			}
		}
	}
}

ship_event = { #Thirsty Rocks
	id = distar.180
	title = "distar.180.name"
	desc = "distar.180.desc"
	picture = GFX_evt_warm_barren
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = {
			if = {
				limit = { has_deposit_for = shipclass_research_station }
				clear_deposits = yes
			}
		}
	}

	option = {
		name = INTERESTING
		from = {
			add_deposit = d_minerals_4
		}
	}
}

ship_event = { #Venus Flytrap Megaflora
	id = distar.185
	title = "distar.185.name"
	desc = "distar.185.desc"
	picture = GFX_evt_aggressive_flora
	show_sound = event_alien_nature
	location = from
	
	is_triggered_only = yes

	option = {
		name = DISCONCERTING
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
	}
}

ship_event = {
	id = distar.190
	title = "distar.190.name"
	desc = {
		trigger = {
			owner = {
				NOT = { has_authority = auth_machine_intelligence }
			}
		}
		text = "distar.190.desc"
	}
	desc = {
		trigger = {
			owner = {
				has_authority = auth_machine_intelligence
			}
		}
		text = "distar.190.desc.machi"
	}
	picture = GFX_evt_ocean
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		leader = {
			save_global_event_target_as = living_planet_scientist
		}
		from = {
			save_event_target_as = living_planet_tar
		}
	}

	option = {
		name = distar.190.a
		trigger = {
			owner = {
				NOT = { has_authority = auth_machine_intelligence }
			}
		}
		owner = {
			begin_event_chain = {
				event_chain = "living_planet_chain"
				target = root.owner
			}
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			hidden_effect = {
				set_country_flag = living_planet_started
				create_point_of_interest = {
					id = living_sea.1
					name = "living_sea_poi"
					desc = living_sea_poi_desc
					event_chain = living_planet_chain
					location = from
				}
			}
		}
	}

	option = {
		trigger = {
			owner = {
				NOT = { has_authority = auth_machine_intelligence }
			}
		}
		name = NOTIME
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
	}

	option = {
		trigger = {
			owner = {
				has_authority = auth_machine_intelligence
			}
		}
		name = CURIOUS
	}
}

country_event = { #On enacting Study The Sea Decision
	id = distar.191
	title = "distar.191.name"
	desc = {
		trigger = {
			exists = event_target:living_planet_scientist
		}
		text = "distar.191.desc.alive"
	}
	desc = {
		trigger = {
			NOT = { exists = event_target:living_planet_scientist }
		}
		text = "distar.191.desc.crew"
	}
	picture = GFX_evt_ocean
	show_sound = event_scanner
	location = event_target:living_planet_tar
	
	is_triggered_only = yes

	trigger = {
		has_country_flag = living_planet_started
		has_event_chain = "living_planet_chain"
	}

	immediate = {
		random_planet_within_border = {
			limit = { has_modifier = living_sea }
			save_event_target_as = living_planet_tar
		}
		end_event_chain = "living_planet_chain"
	}

	option = {
		name = "distar.191.a"
		hidden_effect = {
			country_event = { id = distar.192 days = 180 random = 30 } #Scientist is alive
			country_event = { id = distar.193 days = 3650 } #Scientist is dead
		}
	}
}

country_event = { #Scientist is alive
	id = distar.192
	title = "distar.192.name"
	desc = {
		trigger = {
			event_target:living_planet_scientist = {
				OR = {
					gender = male
					gender = female
				}
			}
		}
		text = "distar.192.desc"
	}
	desc = {
		trigger = {
			event_target:living_planet_scientist = {
				NOR = {
					gender = male
					gender = female
				}
			}
		}
		text = "distar.192.desc.neuter"
	}
	picture = GFX_evt_ship_in_orbit
	show_sound = event_radio_chatter
	location = event_target:living_planet_tar

	is_triggered_only = yes

	trigger = {
		exists = event_target:living_planet_scientist
		event_target:living_planet_tar = {
			has_modifier = pm_study_the_sea
			has_modifier = living_sea
		}
	}

	immediate = {
		set_country_flag = strange_calling_fired
	}

	option = {
		name = "distar.192.a"
		custom_tooltip = "distar.192.a.tooltip"
		hidden_effect = {
			event_target:living_planet_scientist = {
				exile_leader_as = exiled_living_planet_scientist
			}
			country_event = { id = distar.194 days = 360 random = 60 }
		}
	}

	option = {
		name = "distar.192.b"
		custom_tooltip = "distar.192.b.tooltip"
		hidden_effect = {
			country_event = { id = distar.195 days = 90 random = 10 }
		}
	}

	option = {
		name = "distar.192.c"
		custom_tooltip = "distar.192.c.tooltip"
		hidden_effect = {
			event_target:living_planet_scientist = {
				kill_leader = { type = scientist show_notification = no }
			}
			remove_country_flag = strange_calling_fired
		}
	}
}

country_event = { #Scientist dies
	id = distar.193
	title = "distar.193.name"
	desc = "distar.193.desc"
	picture = GFX_evt_ship_in_orbit
	show_sound = event_radio_chatter
	location = event_target:living_planet_tar

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = strange_calling_fired }
		NOT = { exists = event_target:living_planet_scientist }
		event_target:living_planet_tar = {
			has_modifier = pm_study_the_sea
			has_modifier = living_sea
		}
	}

	immediate = {
		set_country_flag = completed_living_sea
	}

	option = {
		name = INCREDIBLE
		if = {
 		    limit = { NOT = { has_technology = tech_psionic_theory } }
 		    give_technology = { tech = tech_psionic_theory }
 		}
 		else_if = {
 		    limit = { NOT = { has_technology = tech_telepathy } }
 		    give_technology = { tech = tech_telepathy }
 		}
 		else_if = {
 			limit = { NOT = { has_technology = tech_precognition_interface } }
 		    give_technology = { tech = tech_precognition_interface }
 		}
 		else = {
 			add_monthly_resource_mult = {
			resource = society_research
			value = @tier4researchreward
			min = @tier4researchmin
			max = @tier4researchmax
			}
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
 		}
 		hidden_effect = {
 			event_target:living_planet_tar = {
 				remove_modifier = pm_study_the_sea
 			}
 		}
	}
}

country_event = {
	id = distar.194
	title = "distar.194.name"
	desc = "distar.194.desc"
	picture = GFX_evt_ocean
	show_sound = event_mystic_reveal
	location = event_target:living_planet_tar

	is_triggered_only = yes

	trigger = {
		event_target:living_planet_tar = {
			has_modifier = pm_study_the_sea
			has_modifier = living_sea
		}
	}

	immediate = {
		set_country_flag = completed_living_sea
	}

	option = {
		name = FASCINATING
		if = {
 		    limit = { NOT = { has_technology = tech_psionic_theory } }
 		    give_technology = { tech = tech_psionic_theory }
 		}
 		else_if = {
 		    limit = { NOT = { has_technology = tech_telepathy } }
 		    give_technology = { tech = tech_telepathy }
 		}
 		else_if = {
 			limit = { NOT = { has_technology = tech_precognition_interface } }
 		    give_technology = { tech = tech_precognition_interface }
 		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier3researchreward
			min = @tier3researchmin
			max = @tier3researchmax
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
		hidden_effect = {
 			event_target:living_planet_tar = {
 				remove_modifier = pm_study_the_sea
 			}
 		}
	}
}

country_event = {
	id = distar.195
	title = "distar.195.name"
	desc = "distar.195.desc"
	location = event_target:living_planet_tar

	diplomatic = yes
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:living_planet_scientist
		event_target:living_planet_tar = { has_modifier = living_sea }
	}

	picture_event_data = {
		portrait = event_target:living_planet_scientist
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.195.a"
		hidden_effect = {
			event_target:living_planet_scientist = {
				exile_leader_as = exiled_living_planet_scientist
			}
			country_event = { id = distar.196 days = 10 }
		}
	}
}

country_event = {
	id = distar.196
	title = "distar.196.name"
	desc = "distar.196.desc"
	picture = GFX_evt_atmospheric_entry
	show_sound = event_ship_explosion
	location = event_target:living_planet_tar
 
	is_triggered_only = yes

	trigger = {
		event_target:living_planet_tar = { has_modifier = living_sea }
	}

	option = {
		name = CURSES
		event_target:living_planet_scientist = {
			kill_leader = { type = scientist show_notification = yes }
		}
		hidden_effect = {
			remove_country_flag = strange_calling_fired
		}
	}
}

# living planet port from ecumenopolis
country_event = {
	id = distar.201
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			has_event_chain = "living_planet_chain"
			has_country_flag = completed_living_sea
		}
		any_planet_within_border = {
			has_planet_flag = living_planet
			OR = {
				has_modifier = "living_sea"
				has_modifier = "pm_study_the_sea"
			}
		}
	}

	immediate = {
		random_planet_within_border = {
			limit = { has_planet_flag = living_planet }
			planet_event = { id = distar.197 }
		}
	}
}

planet_event = { #If you terraform the planet to a non-seabearing class before completing chain
	id = distar.197
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_planet_flag = living_planet
		#from = {
		#	has_event_chain = "living_planet_chain"
		#	NOT = { has_country_flag = completed_living_sea }
		#}
		OR = {
			has_modifier = "living_sea"
			has_modifier = "pm_study_the_sea"
		}
		# should now remove modifiers even if terraformed after chain completion
		OR = {
			is_planet_class = pc_desert
			is_planet_class = pc_arid
			is_planet_class = pc_savannah
			is_planet_class = pc_tropical
			is_planet_class = pc_alpine
			is_planet_class = pc_tundra
			is_planet_class = pc_arctic
			is_planet_class = pc_city
			is_planet_class = pc_relic
			is_planet_class = pc_ai
		}
	}

	immediate = {
		if = {
			limit = { has_modifier = "living_sea" }
			remove_modifier = "living_sea"
		}
		if = {
			limit = { has_modifier = "pm_study_the_sea" }
			remove_modifier = "pm_study_the_sea"
		}
		from = {
			if = {
				limit = { has_event_chain = "living_planet_chain" }
				end_event_chain = "living_planet_chain"
			}
			if = {
				limit = { has_country_flag = strange_calling_fired }
				remove_country_flag = strange_calling_fired
			}
			country_event = { id = distar.198 }
		}
	}
}

country_event = { #Separated from .197 in case you haven't colonized the planet (controller vs owner)
	id = distar.198
	title = "distar.198.name"
	desc = "distar.198.desc"
	picture = GFX_evt_ship_in_orbit
	show_sound = event_scanner
	location = from

	is_triggered_only = yes

	option = {
		name = CURSES
		tooltip = {
			end_event_chain = "living_planet_chain"
		}
	}
}

country_event = { #Tiyanki Matriarch patrols
	id = distar.210
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = event_target:elderly_tiyanki_country
		is_same_value = event_target:elderly_tiyanki_country
		from = {
			is_same_value = event_target:elderly_tiyanki_fleet
		}
	}

	immediate = {
		from.solar_system = {
			random_system_planet = {
				limit = {
					NOT = { is_same_value = root.from.orbit }
				}
				save_event_target_as = new_location
			}
		}
		from = {
			auto_move_to_planet = {
				target = event_target:new_location
				clear_auto_move_on_arrival = no
			}
		}
	}
}


fleet_event = { #Tiyanki Matriarch
	id = distar.211
	title = "distar.211.name"
	desc = {
		trigger = {
			owner = { has_country_flag = tiyanki_encountered }
		}
		text = "distar.211.desc"
	}
	desc = {
		trigger = {
			owner = { NOT = { has_country_flag = tiyanki_encountered } }
		}
		text = "distar.211.desc.first_enc"
	}
	picture = GFX_evt_ancient_tiyanki
	show_sound = event_space_whale
	location = event_target:elderly_tiyanki_system
	
	is_triggered_only = yes

	trigger = {
		from = { has_star_flag = elderly_tiyanki_system }
		owner = {
			is_country_type = default
			NOT = { has_country_flag = encountered_elderly_tiyanki }
		}
		exists = event_target:elderly_tiyanki_fleet
		exists = event_target:elderly_tiyanki_country
	}

	immediate = {
		random_system = {
			limit = { has_star_flag = elderly_tiyanki_system }
			save_event_target_as = elderly_tiyanki_system
		}
		owner = {
			set_country_flag = encountered_elderly_tiyanki
			capital_scope = { save_event_target_as = pc_home }
			establish_communications_no_message = event_target:elderly_tiyanki_country
			country_event = { id = story.8 days = 15 }
		}
	}

	option = {
		name = INCREDIBLE
		hidden_effect = {
			owner = {
				IF = {
					limit = {
						NOT = { has_country_flag = tiyanki_encountered }
					}
					enable_special_project = {
						name = "INVESTIGATE_TIYANKI"
						location = event_target:pc_home
						owner = root.owner
					}
					set_country_flag = tiyanki_encountered
				}
			}
		}
	}
}

country_event = { #Death of the Matriarch
	id = distar.212
	title = "distar.212.name"
	desc = "distar.212.desc"
	picture = GFX_evt_ancient_tiyanki
	show_sound = event_space_whale
	location = event_target:dead_matriarch
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:elderly_tiyanki_fleet
		FromFromFrom.fleet = {
			is_same_value = event_target:elderly_tiyanki_fleet
		}
		is_country_type = default
	}
	
	immediate = {
		set_country_flag = tiyanki_killed # Achievement flag
		create_ambient_object = {
			type = "elderly_tiyanki_dead_object"
		}
		last_created_ambient_object = {
			set_location = {
				target = FROMFROMFROM
				distance = 0
				angle = random
			}
			save_event_target_as = dead_matriarch
		}
	}

	option = {
		name = "distar.212.a"
		hidden_effect = {
			country_event = { id = distar.213 }
		}
	}
}

country_event = {
	id = distar.213
	title = "distar.213.name"
	desc = "distar.213.desc"
	picture = GFX_evt_ancient_tiyanki
	show_sound = event_space_whale
	location = event_target:dead_matriarch
	
	is_triggered_only = yes

	option = {
		name = BATTLESTATIONS
		hidden_effect = {
			country_event = { id = distar.214 }
		}
	}
}

country_event = {
	id = distar.214
	title = "distar.214.name"
	desc = "distar.214.desc"
	picture = GFX_evt_fleet_good
	show_sound = event_mystic_reveal
	location = event_target:ahab_fleet
	
	is_triggered_only = yes

	immediate = {
		create_country = {
			name = "NAME_Reth_Unddol"
			type = faction
			auto_delete = yes
			flag = {
    		    icon = {
    		        category = "special"
    		        file = "unknown.dds"
    		    }
    		    background = {
    		        category = "backgrounds"
    		        file = "00_solid.dds"
    		    }
    		    colors = {
    		        "red"
    		        "red"
    		        "null"
    		        "null"
    		    }
    		}
    		effect = {
    			save_event_target_as = reth_country
    		}
    	}
    	event_target:reth_country = { 
    		set_faction_hostility = {
				target = root.owner
				set_hostile = no
				set_neutral = no
				set_friendly = yes
			}
			IF = {
				LIMIT = { host_has_dlc = "Humanoids Species Pack" }
				create_species = {
					name = "NAME_Unknown"
					class = HUM
					portrait = humanoid_hp_12
					namelist = "PRT1"
					traits = random
					effect = {
						save_event_target_as = captain_species
					}
				}
			}
			ELSE = {
				create_species = {
					name = "NAME_Unknown"
					class = MAM
					portrait = mam14
					namelist = "PRT1"
					traits = random
					effect = {
						save_event_target_as = captain_species
					}
				}
			}
			create_leader = {
				class = admiral
				species = event_target:captain_species
				name = "NAME_Reth_Unddol"
				skill = 5
				gender = male
				event_leader = no
			}
			last_created_leader = {
				add_trait = leader_trait_admiral_hells_heart
				save_event_target_as = captain_reth
			}
			create_fleet = {
				name = "NAME_AH4B"
				effect = {
					set_owner = prev
					create_ship = {
						name = "NAME_AH4B"
						design = "NAME_AH4B"
						prefix = no
						upgradable = yes
					}
					set_location = {
						target = event_target:dead_matriarch
						distance = 2
						angle = random
					}
					set_fleet_stance = passive
					add_modifier = { modifier = "ahab_power" days = -1 }
					assign_leader = event_target:captain_reth
					save_event_target_as = ahab_fleet
				}
				settings = {
					can_upgrade = yes
					can_change_composition = no
					can_change_leader = yes
					uses_naval_capacity = no
					spawn_debris = no
				}
			}
		}
	}

	option = {
		name = ONSCREEN
		hidden_effect = {
			country_event = { id = distar.215 }
		}
	}
}

country_event = {
	id = distar.215
	title = "distar.215.name"
	desc = "distar.215.desc"
	location = event_target:ahab_fleet

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:captain_reth
		room = ethic_spaceship_room
	}

	option = {
		name = distar.215.a
		trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		event_target:ahab_fleet = {
			set_owner = root
			hidden_effect = { set_leader = event_target:captain_reth }
		}
	}

	option = {
		name = distar.215.b
		hidden_effect = {
			clone_leader = {
				target = event_target:captain_reth
				class = admiral
			}
		}
		event_target:ahab_fleet = {
			destroy_fleet = this
		}
		add_resource = { minerals = 1500 }
	}

	option = {
		name = distar.215.c
		event_target:ahab_fleet = {
			set_owner = root
		}
		hidden_effect = {
			country_event = { id = distar.217 }
		}
	}

	option = {
		name = distar.215.a.gesta
		trigger = {
			has_ethic = ethic_gestalt_consciousness
		}
		event_target:ahab_fleet = {
			set_owner = root
			hidden_effect = { set_leader = event_target:captain_reth }
		}
	}

	option = {
		name = distar.215.a.exter
		exclusive_trigger = {
			has_civic = civic_machine_terminator
		}
		hidden_effect = {
			country_event = { id = distar.216 }
		}
	}

	option = {
		name = distar.215.a.swarm
		exclusive_trigger = {
			has_civic = civic_hive_devouring_swarm
		}
		hidden_effect = {
			country_event = { id = distar.216 }
		}
	}

	option = {
		name = distar.215.a.fp
		exclusive_trigger = {
			has_civic = civic_fanatic_purifiers
		}
		hidden_effect = {
			country_event = { id = distar.216 }
		}
	}
}

country_event = {
	id = distar.216
	title = "distar.215.name"
	desc = "distar.216.desc"
	location = event_target:ahab_fleet

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:captain_reth
		room = ethic_spaceship_room
	}

	option = {
		name = TASTY
		exclusive_trigger = {
			has_civic = civic_hive_devouring_swarm
		}
		event_target:ahab_fleet = {
			set_owner = root
			kill_leader = {
				type = admiral show_notification = no
			}
		}
		add_monthly_resource_mult = {
			resource = unity
			value = @tier3researchreward
			min = @tier3researchmin
			max = @tier3researchmax
		}
	}

	option = {
		name = "distar.216.a.exter"
		exclusive_trigger = {
			has_civic = civic_machine_terminator
		}
		event_target:ahab_fleet = {
			set_owner = root
			kill_leader = {
				type = admiral show_notification = no
			}
		}
		add_monthly_resource_mult = {
			resource = unity
			value = @tier3researchreward
			min = @tier3researchmin
			max = @tier3researchmax
		}
	}

	option = {
		name = SCUM
		exclusive_trigger = {
			has_civic = civic_fanatic_purifiers
		}
		event_target:ahab_fleet = {
			set_owner = root
			kill_leader = {
				type = admiral show_notification = no
			}
		}
		add_monthly_resource_mult = {
			resource = unity
			value = @tier3researchreward
			min = @tier3researchmin
			max = @tier3researchmax
		}
	}
}

country_event = {
	id = distar.217
	title = "distar.215.name"
	desc = "distar.217.desc"
	location = event_target:ahab_fleet

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:captain_reth
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.217.a"
		event_target:ahab_fleet = {
			set_owner = root
			hidden_effect = {
				kill_leader = { type = admiral show_notification = no }
			}
		}
	}
}

#The Zone
ship_event = {
	id = distar.220
	title = "distar.220.name"
	desc = {
		trigger = {
			owner = {
				NOT = { has_authority = auth_machine_intelligence }
			}
		}
		text = "distar.220.desc"
	}
	desc = {
		trigger = {
			owner = {
				has_authority = auth_machine_intelligence
			}
		}
		text = "distar.220.desc.machi"
	}
	picture = GFX_evt_alien_ruins
	show_sound = event_ghost_town
	location = from
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.5 days = 30 } }
	}

	option = {
		name = FASCINATING
		custom_tooltip = "distar.220.a.tooltip"
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
			add_monthly_resource_mult = {
				resource = unity
				value = @tier1unityreward
				min = @tier1unitymin
				max = @tier1unitymax
			}
			hidden_effect = { pop_lcluster_event = yes }
		}
	}
}

#Junk Ball Asteroid
ship_event = {
	id = distar.225
	title = "distar.225.name"
	desc = "distar.225.desc"
	picture = GFX_evt_asteroid_field
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = { clear_deposits = yes }
		owner = { country_event = { id = story.5 days = 30 } }
	}

	option = {
		name = "distar.225.a"
		from = {
			add_alloys = yes
		}
		if = {
			limit = { has_ancrel = yes }			
			custom_tooltip = minor_artifacts_found
			owner = { add_resource = { minor_artifacts = 1 } }
		}
		hidden_effect = {
			owner = { pop_lcluster_event = yes }
			ship_event = { id = distar.305 days = 1 }
		}
	}
}

fleet_event = { #Junkheap Ratlings 
	id = distar.230
	title = "distar.230.name"
	desc = "distar.230.desc"
	picture = GFX_evt_junkheap
	show_sound = event_scanner
	location = root
	
	is_triggered_only = yes

	trigger = {
		from = { has_star_flag = ratling_system }
		owner = {
			is_country_type = default
			NOT = { has_country_flag = discovered_ratlings }
		}
		NOR = {
			exists = event_target:ratling_pre_space_country
			exists = event_target:ratling_country
		}
	}

	immediate = {
		owner = {
			set_country_flag = discovered_ratlings #Every player that enters the system gets this flag
			country_event = { id = story.5 days = 30 }
			random_country = {
				limit = { is_country_type = global_event }
				country_event = { id = distar.232 days = 9000 random = 3600 } 
			}
		}
		from = {
			random_system_planet = {
				limit = { has_planet_flag = ratling_planet }
				save_event_target_as = ratling_planet_tar #Used for loc for this event only
			}
		}
		event_target:ratling_capital = {
			add_anomaly = {
				category = DISTAR_RAT_CAT
			}
		}
	}

	option = {
		name = CURIOUS
	}

	option = {
		name = SCUM
		exclusive_trigger = {
			owner = {
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
	}

	option = {
		name = "distar.230.exter"
		exclusive_trigger = {
			owner = {
				has_civic = civic_machine_terminator
			}
		}
	}
}

ship_event = { #Found the Capital
	id = distar.231
	title = "distar.231.name"
	desc = "distar.231.desc"
	picture = GFX_evt_junkheap
	show_sound = event_ghost_town
	location = from
	
	is_triggered_only = yes

	option = {
		name = UNFORTUNATE
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
			hidden_effect = { pop_lcluster_event = yes }
		}
	}

	option = {
		name = "distar.231.phobe"
		exclusive_trigger = {
			owner = {
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
					has_civic = civic_machine_terminator
				}
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
			hidden_effect = { pop_lcluster_event = yes }
		}
	}
}

country_event = { #Spawn Ratlings #Root = Global Event Country
	id = distar.232
	hide_window = yes

	is_triggered_only = yes

	fire_only_once = yes

	trigger = {
		NOT = {
			has_country_flag = spawned_pre_space_ratlings
		}
		any_system = {
			has_star_flag = ratling_system
			any_system_planet = {
				has_planet_flag = ratling_planet
				NOT = { is_planet_class = "pc_broken" }
			}
		}
	}

	immediate = {
		IF = { #If another empire claimed Ratling capital, or it's shattered
			LIMIT = {
				event_target:ratling_capital = {
					OR = {
						is_colony = yes
						is_under_colonization = yes
						exists = space_owner
						is_planet_class = "pc_broken"
						is_planet_class = "pc_shattered"
					}
				}
			}
		}
		create_species = {
			name = "NAME_Ketling"
			plural = "NAME_Ketlings"
			class = MAM
			portrait = "mam_rat"
			homeworld = event_target:ratling_capital
			namelist = "REP4"
			traits = {
				trait = "trait_pc_nuked_preference"
				trait = "trait_psionic"
				trait = "trait_repugnant"
				trait = "trait_slow_breeders"
				trait = "trait_thrifty"
				trait = "trait_deviants"
				trait = "trait_fleeting"
			}
			effect = {
				save_global_event_target_as = ratling_species
			}
		}
		create_country = {
			name = "NAME_Ketlings"
			ethos = {
				ethic = ethic_materialist
				ethic = ethic_egalitarian
				ethic = ethic_pacifist
			}
			authority = auth_oligarchic
			civics = {
				civic = civic_functional_architecture
				civic = civic_mining_guilds
			}
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_12.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = {
					"light_green"
					"yellow"
					"null"
					"null"
				}
			}
			species = event_target:ratling_species
			type = ratlings
			ignore_initial_colony_error = yes
		}
		last_created_country = {
			save_global_event_target_as = ratling_pre_space_country
		}
		every_system = {
			limit = {
				has_star_flag = ratling_system
				NOT = { exists = space_owner }
			}
			every_system_planet = {
				limit = {
					has_planet_flag = ratling_planet
					is_colony = no
					is_under_colonization = no
					NOT = { is_planet_class = "pc_broken" }
					NOT = { is_planet_class = "pc_shattered" }
				}
				set_owner = event_target:ratling_pre_space_country
				add_building = building_junkheap
				while = {
					count = 10
					create_pop = {
						species = event_target:ratling_species
					}					
				}
				while = {
					count = 4
					create_army = {
						owner = event_target:ratling_pre_space_country
						species = event_target:ratling_species
						type = "ketling_army"
					}
				}
				set_planet_entity = {
					picture = pc_nuked
				}
				set_planet_flag = changed_planetview_image
				switch = { #Planets get renamed in the create_colony effect, we want to maintain names
					trigger = is_same_value
					event_target:ratling_capital = {
						set_name = "NAME_Ruinous_Core"
					}
					event_target:ratling_planet_2_tar = {
						set_name = "NAME_Lost_Encampment"
					}
					event_target:ratling_planet_3_tar = {
						set_name = "NAME_Silent_Colony"
					}
					event_target:ratling_planet_4_tar = {
						set_name = "NAME_Decayed_Hub"
					}
					event_target:ratling_planet_5_tar = {
						set_name = "NAME_Crumbling_Borough"
					}
					event_target:ratling_planet_6_tar = {
						set_name = "NAME_Fallen_Outpost"
					}
				}
			}
		}
		set_country_flag = spawned_pre_space_ratlings

		every_country = { #Fire notif event
			limit = { has_country_flag = discovered_ratlings }
			country_event = { id = distar.233 days = 1 }
		}
		every_playable_country = {
			establish_communications_no_message = event_target:ratling_pre_space_country
			establish_contact = { who = this location = this.capital_scope }
		}
	}
}


country_event = { #Alert that the pre-space Ketlings have emerged
	id = distar.233
	title = "distar.233.name"
	desc = "distar.233.desc"
	picture = GFX_evt_junkheap
	show_sound = event_radio_chatter 
	location = event_target:notif_planet
	
	is_triggered_only = yes

	trigger = {
		any_system = {
			has_star_flag = ratling_system
			root = {
				intel_level = {
					level > none
					system = prev
				}
			}
			any_system_planet = {
				exists = owner
				owner = {
					is_same_value = event_target:ratling_pre_space_country
				}
			}
		}
	}

	immediate = {
		random_country = {
			limit = { is_country_type = global_event }
			country_event = { id = distar.325 days = 9000 random = 3600 }
		}
		IF = {
			LIMIT = {
				root = {
					intel_level = {
						level > none
						system = event_target:ratling_capital.system
					}
				}
			}
			event_target:ratling_capital = {
				save_event_target_as = notif_planet
			}
		}
		ELSE = {
			random_system = {
				limit = {
					has_star_flag = ratling_system 
					root = {
						intel_level = {
							level > none
							system = prev
						}
					}
					any_system_planet = {
						has_planet_flag = ratling_planet
						any_owned_pop = {
							is_same_species = event_target:ratling_species
						}
					}
				}
				random_system_planet = {
					limit = {
						has_planet_flag = ratling_planet
						any_owned_pop = {
							is_same_species = event_target:ratling_species
						}
					}
					save_event_target_as = notif_planet
				}
			}
		}
		IF = {
			LIMIT = {
				exists = event_target:ratling_planet_2_tar
				event_target:ratling_planet_2_tar = {
					NOT = { is_same_value = event_target:ratling_capital }
					any_pop = { is_same_species = event_target:ratling_species }
				}
			}
			event_target:ratling_planet_2_tar = {
				save_event_target_as = ratling_planet_2
			}
		}
		IF = {
			LIMIT = {
				exists = event_target:ratling_planet_3_tar
				event_target:ratling_planet_3_tar = {
					NOT = { is_same_value = event_target:ratling_capital }
					any_pop = { is_same_species = event_target:ratling_species }
				}
			}
			event_target:ratling_planet_3_tar = {
				save_event_target_as = ratling_planet_3
			}
		}
		IF = {
			LIMIT = {
				exists = event_target:ratling_planet_4_tar
				event_target:ratling_planet_4_tar = {
					NOT = { is_same_value = event_target:ratling_capital }
					any_pop = { is_same_species = event_target:ratling_species }
				}
			}
			event_target:ratling_planet_4_tar = {
				save_event_target_as = ratling_planet_4
			}
		}
		IF = {
			LIMIT = {
				exists = event_target:ratling_planet_5_tar
				event_target:ratling_planet_5_tar = {
					NOT = { is_same_value = event_target:ratling_capital }
					any_pop = { is_same_species = event_target:ratling_species }
				}
			}
			event_target:ratling_planet_5_tar = {
				save_event_target_as = ratling_planet_5
			}
		}
		IF = {
			LIMIT = {
				exists = event_target:ratling_planet_6_tar
				event_target:ratling_planet_6_tar = {
					NOT = { is_same_value = event_target:ratling_capital }
					any_pop = { is_same_species = event_target:ratling_species }
				}
			}
			event_target:ratling_planet_6_tar = {
				save_event_target_as = ratling_planet_6
			}
		}
	}

	option = {
		name = REMARKABLE
		begin_event_chain = {
			event_chain = ketling_study_chain
			target = root
		}
		hidden_effect = {
			event_target:ratling_capital = {
				enable_special_project = {
					name = "KETLING_PROJECT_1"
					location = this
					owner = root
				}
			}
			IF = {
				limit = { exists = event_target:ratling_planet_2 }
				event_target:ratling_planet_2 = {
					enable_special_project = {
						name = "KETLING_PROJECT_2"
						location = this
						owner = root
					}
				}
			}
			IF = {
				limit = { exists = event_target:ratling_planet_3 }
				event_target:ratling_planet_3 = {
					enable_special_project = {
						name = "KETLING_PROJECT_3"
						location = this
						owner = root
					}
				}
			}
			IF = {
				limit = { exists = event_target:ratling_planet_4 }
				event_target:ratling_planet_4 = {
					enable_special_project = {
						name = "KETLING_PROJECT_4"
						location = this
						owner = root
					}
				}
			}
			IF = {
				limit = { exists = event_target:ratling_planet_5 }
				event_target:ratling_planet_5 = {
					enable_special_project = {
						name = "KETLING_PROJECT_5"
						location = this
						owner = root
					}
				}
			}
			IF = {
				limit = { exists = event_target:ratling_planet_6 }
				event_target:ratling_planet_6 = {
					enable_special_project = {
						name = "KETLING_PROJECT_6"
						location = this
						owner = root
					}
				}
			}
		}
	}

	option = {
		name = "distar.233.phobe"
		exclusive_trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
				has_civic = civic_machine_terminator
			}
		}
		event_target:ratling_capital = {
			begin_event_chain = {
				event_chain = "ketling_study_chain"
				target = root
			}
			hidden_effect = {
				enable_special_project = {
					name = "KETLING_PROJECT_1"
 					location = this
 					owner = root
				}

				IF = {
					limit = { exists = event_target:ratling_planet_2 }
					event_target:ratling_planet_2 = {
						enable_special_project = {
							name = "KETLING_PROJECT_2"
							location = this
							owner = root
						}
					}
				}
				IF = {
					limit = { exists = event_target:ratling_planet_3 }
					event_target:ratling_planet_3 = {
						enable_special_project = {
							name = "KETLING_PROJECT_3"
							location = this
							owner = root
						}
					}
				}
				IF = {
					limit = { exists = event_target:ratling_planet_4 }
					event_target:ratling_planet_4 = {
						enable_special_project = {
							name = "KETLING_PROJECT_4"
							location = this
							owner = root
						}
					}
				}
				IF = {
					limit = { exists = event_target:ratling_planet_5 }
					event_target:ratling_planet_5 = {
						enable_special_project = {
							name = "KETLING_PROJECT_5"
							location = this
							owner = root
						}
					}
				}
				IF = {
					limit = { exists = event_target:ratling_planet_6 }
					event_target:ratling_planet_6 = {
						enable_special_project = {
							name = "KETLING_PROJECT_6"
							location = this
							owner = root
						}
					}
				}
			}
		}
	} 
}

ship_event = { #Origin of the Ketlings Special Project success
	id = distar.234
	title = "distar.234.name"
	desc = {
		text = "distar.234.desc"
	}
	desc = {
		exclusive_trigger = {
			exists = event_target:ratling_country
		}
		text = "distar.234.desc.spacefaring"
	}
	picture = GFX_evt_junkheap
	show_sound = event_ghost_town
	location = fromfrom
	
	is_triggered_only = yes

	immediate = {
		owner = {
			set_country_flag = researched_ketlings
		}
	}

	option = {
		name = FASCINATING
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
			end_event_chain = "ketling_study_chain"
		}
	}

	option = {
		name = "distar.234.phobe"
		exclusive_trigger = {
			owner = {
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
					has_civic = civic_machine_terminator
				}
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
			end_event_chain = "ketling_study_chain"
		}
	}

	after = {
		hidden_effect = {
			IF = {
				limit = {
					exists = event_target:ratling_country
					owner = {
						NOT = { has_communications = event_target:ratling_country }
					}
				}
				root.owner = {
					establish_communications = event_target:ratling_country
					establish_contact = {
						who = event_target:ratling_country
						location = from.solar_system
					}
				}
			}
		}
	}
}

country_event = { #Switch owner on ground invasion successful to prevent endless occupation
	id = distar.235
	title = "distar.235.name"
	desc = {
		trigger = {
			any_system = {
				has_star_flag = ratling_system
				any_system_planet = {
					has_planet_flag = ratling_planet
					NOT = { is_same_value = fromfrom }
					any_pop = { is_same_species = event_target:ratling_species }
				}
			}
		}
		text = "distar.235.desc"
	}
	desc = {
		trigger = {
			NOT = {
				any_system = {
					has_star_flag = ratling_system
					any_system_planet = {
						has_planet_flag = ratling_planet
						NOT = { is_same_value = fromfrom }
						any_pop = { is_same_species = event_target:ratling_species }
					}
				}
			}
		}
		text = "distar.235.desc.none_left"
	}
	desc = {
		trigger = {
			has_civic = civic_machine_assimilator
			any_system = {
				has_star_flag = ratling_system
				any_system_planet = {
					has_planet_flag = ratling_planet
					NOT = { is_same_value = fromfrom }
					any_pop = { is_same_species = event_target:ratling_species }
				}
			}
		}
		text = "distar.235.desc.assim"
	}
	desc = {
		trigger = {
			has_civic = civic_machine_assimilator
			NOT = {
				any_system = {
					has_star_flag = ratling_system
					any_system_planet = {
						has_planet_flag = ratling_planet
						NOT = { is_same_value = fromfrom }
						any_pop = { is_same_species = event_target:ratling_species }
					}
				}
			}
		}
		text = "distar.235.desc.none_left.assim"
	}
	picture = GFX_evt_city_ruins
	show_sound = event_ground_battle
	location = fromfrom
	
	is_triggered_only = yes

	trigger = {
		from = { is_country_type = ratlings }
		fromfrom = {
			has_planet_flag = ratling_planet
		}
	}

	immediate = {
		set_country_flag = subdued_ratling_planet
		fromfrom = {
			set_owner = root
			every_owned_pop = {
				limit = {
					is_same_species = event_target:ratling_species
				}
				add_modifier = {
					modifier = culture_shock_early_space_age
					years = 5
				}
			}
		}
	}

	option = {
		name = EXCELLENT
		exclusive_trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
				has_civic = civic_machine_terminator
				has_civic = civic_machine_assimilator
			}
		}
	}

	option = {
		name = UNFORTUNATE
		exclusive_trigger = {
			OR = {
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_pacifist
			}
		}
	}

	option = {
		name = OK
	}
}

country_event = { #Bounce to make sure we do not spawn Ratlings during ongoing planetary invasion etc, otherwise things break #Root = Global Event Country 
	id = distar.325
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				exists = event_target:ratling_pre_space_country
				any_system = {
					has_star_flag = ratling_system
					NOT = { #At least one Ratling system does not have ongoing starbase construction
						any_ship_in_system = {
							is_ship_size = constructor
							is_constructing = starbase
						}
			 		}
			 		any_system_planet = {
						has_planet_flag = ratling_planet
						exists = owner
						owner = {
							is_same_value = event_target:ratling_pre_space_country
						}
						NOR = { #At least one planet in such a system is not under assault
							has_orbital_bombardment = yes
							has_ground_combat = yes
						}
					}
			 	}
			}
			country_event = { id = distar.236 }
		}
		else_if = {
			limit = {
				exists = event_target:ratling_pre_space_country
				any_system = {
			 		has_star_flag = ratling_system
			 		any_system_planet = {
						has_planet_flag = ratling_planet
						exists = owner
						owner = {
							is_same_value = event_target:ratling_pre_space_country
						}
					}
			 	}
			}
			country_event = { id = distar.325 days = 60 } #Try to check again later as long as we have a valid Ratling planet
		}
	}
}

country_event = { #Create Full Ratling Empire #Root = Global Event Country
	id = distar.236
	hide_window = yes

	is_triggered_only = yes

	fire_only_once = yes 

	trigger = {
		NOT = {
			has_country_flag = spawned_ratling_country
		}
		exists = event_target:ratling_pre_space_country
		any_system = {
			has_star_flag = ratling_system
			NOT = { #At least one Ratling system does not have ongoing starbase construction
				any_ship_in_system = {
					is_ship_size = constructor
					is_constructing = starbase
				}
			}
			any_system_planet = {
				has_planet_flag = ratling_planet
				exists = owner
				owner = {
					is_same_value = event_target:ratling_pre_space_country
				}
				NOR = {
					has_orbital_bombardment = yes
					has_ground_combat = yes
					is_planet_class = "pc_broken"
				}
			}
		}
	}

	immediate = {
		every_country = {
			limit = { has_country_flag = discovered_ratlings }
			country_event = { id = distar.237 days = 1 }
		}
		#Create the proper country
		create_country = {
			name = "NAME_Ketling_Multitude"
			ethos = {
				ethic = ethic_materialist
				ethic = ethic_egalitarian
				ethic = ethic_pacifist
			}
			authority = auth_oligarchic
			civics = {
				civic = civic_functional_architecture
				civic = civic_mining_guilds
			}
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_12.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = {
					"light_green"
					"yellow"
					"null"
					"null"
				}
			}
			species = event_target:ratling_species
			ignore_initial_colony_error = yes
			type = default
		}
		last_created_country = {
			set_graphical_culture = mammalian_01
			save_global_event_target_as = ratling_country
		}

		##Prepare the planets
		every_system = {
			limit = {
				has_star_flag = ratling_system
				NOT = { exists = owner }
			}
			every_system_planet = {
				limit = {
					has_planet_flag = ratling_planet
					AND = {
						exists = owner
						owner = {
							is_same_value = event_target:ratling_pre_space_country
						}
					}
					NOR = {
						has_orbital_bombardment = yes
						has_ground_combat = yes
						is_planet_class = "pc_broken"
					}
				}
				set_owner = event_target:ratling_country
				remove_building = building_junkheap
				clear_blockers = yes
				remove_all_armies = yes
				while = {
					count = 25
					create_pop = {
						species = event_target:ratling_species
					}					
				}
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_farming
				add_district = district_farming
				add_district = district_farming
				add_district = district_mining
				add_district = district_mining
				add_district = district_mining
				add_district = district_generator
				add_district = district_generator
				add_district = district_generator
				add_building = building_capital
				add_building = building_research_lab_1
				add_building = building_foundry_1
				add_building = building_factory_1
				add_building = building_commercial_zone
				add_building = building_food_processing_facility
				add_building = building_energy_grid
			}

			##Build Starbases
			create_starbase = {
				size = starbase_starhold
				owner = event_target:ratling_country
				module = shipyard
				building = fleet_hangar
				effect = {
					set_starbase_module = {
						slot = 1
						module = anchorage
					}
					set_starbase_module = {
						slot = 2
						module = anchorage
					}
					set_starbase_module = {
						slot = 3
						module = trade_terminal
					}
				}
			}
		}

		##Destroy old country
		event_target:ratling_pre_space_country = {
			every_owned_pop = { #In case any pops are left behind
				kill_pop = yes
			}
			destroy_country = yes
		}

		#So we don't get "orphaned" pops with no job categories in case of non-Ketling system owners
		every_system = {
			limit = {
				has_star_flag = ratling_system
				OR = {
					NOT = { exists = owner }
					AND = {
						exists = owner
						NOT = {
							owner = { is_same_value = event_target:ratling_country }
						}
					}
				}
			}
			every_system_planet = {
				limit = {
					has_planet_flag = ratling_planet
					any_pop = {
						is_same_species = event_target:ratling_species
						NOT = { exists = owner }
					}
				}
				every_pop = {
					limit = {
						is_same_species = event_target:ratling_species
						NOT = { exists = owner }
					}
					kill_pop = yes
				}
			}
		}

		#Create a Capital
		IF = { #If the old capital belongs to Ratlings, use it
			limit = {
				exists = event_target:ratling_capital
				event_target:ratling_capital = {
					exists = owner
					owner = {
						is_same_value = event_target:ratling_country
					}
				}
			}
			event_target:ratling_capital = {
				set_capital = yes
			}
		}
		ELSE = { #Otherwise, make a new Capital
			random_system = {
				limit = { has_star_flag = ratling_system }
				random_system_planet = {
					limit = {
						has_planet_flag = ratling_planet
						exists = owner
						owner = {
							is_same_value = event_target:ratling_country
						}
						planet_size > 12
						NOT = { is_planet_class = "pc_broken" }
					}
					save_global_event_target_as = ratling_capital
					set_capital = yes
				}
			}
		}

		event_target:ratling_country = {
			##Copy technology
			IF = {
				LIMIT = {
					any_neighbor_country = {
						exists = this
						is_country_type = default
					}
				}
				random_neighbor_country = {
					limit = { is_country_type = default }
					save_event_target_as = tech_country
				}
				copy_techs_from = {
					target = event_target:tech_country
					except = {
						# Horizon Signal
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
					}
				}
			}
			ELSE_IF = {
				LIMIT = {
					any_country = {
						is_ai = no
					}
				}
				random_country = {
					limit = { is_ai = no }
					save_event_target_as = tech_country
				}
				copy_techs_from = {
					target = event_target:tech_country
					except = {
						# Horizon Signal
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
					}
				}
			}
			ELSE = {
				random_country = {
					limit = { is_country_type = default	}
					save_event_target_as = tech_country
				}
				copy_techs_from = {
					target = event_target:tech_country
					except = {
						# Horizon Signal
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
					}
				}
			}
			##Add some new technologies
			inverted_switch = {
				trigger = has_technology
				tech_power_plant_4 = { give_technology = { tech = tech_power_plant_4 } }
				tech_mining_3 = { give_technology = { tech = tech_mining_3 } }
				tech_starbase_4 = { give_technology = { tech = tech_starbase_4 } }
				tech_nano_vitality_crops = { give_technology = { tech = tech_nano_vitality_crops } }
				tech_power_hub_1 = { give_technology = { tech = tech_power_hub_1 } }
				tech_food_processing_1 = { give_technology = { tech = tech_food_processing_1 } }
			}

			##Add resources
			add_resource = { minerals = 7000 }
			add_resource = { energy = 7000 }
			add_resource = { food = 3000 }
			add_resource = { consumer_goods = 3000 }
			add_resource = { alloys = 2000 }
			add_resource = { influence = 1000 }
			add_resource = { unity = 27000 }

			event_target:ratling_country = {
				##Create Mining Stations
				every_planet_within_border = {
					limit = {
						has_deposit_for = shipclass_mining_station
					}
					create_mining_station = { owner = event_target:ratling_country }
				}
				##Create fleets
				create_fleet = {
					effect = {
						set_owner = event_target:ratling_country
						while = {
							count = 5
							create_ship = {
								name = random
								random_existing_design = corvette
								graphical_culture = "reptilian_01"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = random
								random_existing_design = destroyer
								graphical_culture = "reptilian_01"
							}
						}
						while = {
							count = 2
							create_ship = {
								name = random
								random_existing_design = cruiser
								graphical_culture = "reptilian_01"
							}
						}
						set_location = {
							target = event_target:ratling_capital
							distance = 10
							angle = random
						}			
					}
				}
				create_fleet = {
					effect = {
						set_owner = event_target:ratling_country
						create_ship = {
							name = random
							random_existing_design = constructor
							graphical_culture = "reptilian_01"
						}
						set_location = {
							target = event_target:ratling_capital
							distance = 10
							angle = random
						}
					}
				}
				create_fleet = {
					effect = {
						set_owner = event_target:ratling_country
						create_ship = {
							name = random
							random_existing_design = science
							graphical_culture = "reptilian_01"
						}
						set_location = {
							target = event_target:ratling_capital
							distance = 10
							angle = random
						}
					}
				}
			}

			##Add leaders
			while = {
				count = 4
				create_leader = {
					class = scientist
					species = event_target:ratling_species
					name = random
					skill = 3
				}
			}
			while = {
				count = 1
				create_leader = {
					class = admiral
					species = event_target:ratling_species
					name = random
					skill = 3
				}
			}
			create_leader = {
				class = governor
				species = event_target:ratling_species
				name = random
				skill = 3
			}
		}

		set_country_flag = spawned_ratling_country
	}
}

country_event = { #Alert that the Ketling default empire has been created
	id = distar.237
	title = "distar.237.name"
	desc = "distar.237.desc"
	picture = GFX_evt_news_room
	show_sound = event_cityscape 
	location = event_target:sensor_ratling_system

	is_triggered_only = yes

	trigger = {
		any_system = {
			exists = owner
			owner = {
				is_same_value =	event_target:ratling_country
			}
			root = {
				intel_level = {
					level > none
					system = prev
				}
			}
		}
	}

	immediate = {
		#Get a target system we have sensors into
		IF = {
			limit = { #Done this way bc intel_level isn't accepting a chained dotscope target...
				event_target:ratling_country.capital_scope.solar_system = {
					root = {
						intel_level = {
							level > none
							system = prev
						}
					}
				}
			}
			event_target:ratling_country.capital_scope.solar_system = {
				save_event_target_as = sensor_ratling_system
			}
		}
		ELSE_IF = {
			limit = {
				any_system = {
					exists = owner
					owner = {
						is_same_value =	event_target:ratling_country
					}
					root = {
						intel_level = {
							level > none
							system = prev
						}
					}
				}
			}
			random_system = {
				limit = {
					exists = owner
					owner = {
						is_same_value =	event_target:ratling_country
					}
					root = {
						intel_level = {
							level > none
							system = prev
						}
					}
				}
				save_event_target_as = sensor_ratling_system
			}
		}
		ELSE = { #Nothing
		}
	}

	option = {
		name = INTERESTING
	}

	option = {
		name = "distar.234.phobe"
		exclusive_trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
				has_civic = civic_machine_terminator
			}
		}
		hidden_effect = {
			#Auto-establish comms if we researched Ketlings
			IF = {
				LIMIT = {
					has_country_flag = researched_ketlings
				}
				establish_communications = event_target:ratling_country
				establish_contact = { who = root location = event_target:sensor_ratling_system }
			}
		}
	}

	option = {
		name = MARVELOUS
		exclusive_trigger = {
			OR = {
				has_ethic = ethic_xenophile
				has_ethic = ethic_fanatic_xenophile
				has_civic = civic_machine_servitor
			}
		}
		hidden_effect = {
			#Auto-establish comms if we researched Ketlings
			IF = {
				LIMIT = {
					has_country_flag = researched_ketlings
				}
				establish_communications = event_target:ratling_country
				establish_contact = { who = root location = event_target:sensor_ratling_system }
			}
		}
	}

	option = {
		name = TASTY
		exclusive_trigger = {
			has_civic = civic_hive_devouring_swarm
		}
		hidden_effect = {
			#Auto-establish comms if we researched Ketlings
			IF = {
				LIMIT = {
					has_country_flag = researched_ketlings
				}
				establish_communications = event_target:ratling_country
				establish_contact = { who = root location = event_target:sensor_ratling_system }
			}
		}
	}
}

country_event = { #Adds CBs and opinion mods on Communications Established (action.11)
	id = distar.238
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = {
			any_system_within_border = {
				has_star_flag = ratling_system
			}
		}
		exists = event_target:ratling_country
		event_target:contact_empire = {
			is_same_value = event_target:ratling_country
		}
	}

	immediate = {
		every_system = {
			limit = {
				has_star_flag = ratling_system
				owner = { is_same_value = from }
			}
			add_claims = {
				who = event_target:ratling_country
				num_of_claims = 1
				show_notification = yes
			}
			event_target:ratling_country = {
				add_opinion_modifier = {
					who = from
					modifier = opinion_ratling_system_stolen
				}
			}
		}
	}
}

country_event = { #Adds CBs and opinion mods on Communications Established (action.13)
	id = distar.239
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = {
			any_system_within_border = {
				has_star_flag = ratling_system
			}
		}
		exists = event_target:ratling_country
		event_target:contact_empire = {
			is_same_value = event_target:ratling_country
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					event_target:ratling_country = {
						has_opinion_modifier = {
							who = from
							modifier = opinion_ratling_system_stolen
						}
					}
				}
			}
			every_system = {
				limit = {
					has_star_flag = ratling_system
					owner = { is_same_value = from }
				}
				add_claims = {
					who = event_target:ratling_country
					num_of_claims = 1
					show_notification = yes
				}
				event_target:ratling_country = {
					add_opinion_modifier = {
						who = from
						modifier = opinion_ratling_system_stolen
					}
				}
			}
		}
	}
}

#Sealed Entry System
fleet_event = {
	id = distar.240
	title = "distar.240.name"
	desc = "distar.240.desc"
	picture = GFX_evt_wormhole
	show_sound = event_radio_chatter
	location = from
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			NOR = {
				has_country_flag = encountered_sealed_system
				has_country_flag = entered_sealed_system
			}
		}
		FROM = { has_star_flag = sealed_entry_system }
	}
	
	immediate = {
		owner = {
			set_country_flag = encountered_sealed_system
			add_seen_bypass_type = wormhole
		}
		if = {
			limit = { exists = event_target:shroud_country }
			event_target:shroud_country = {
				establish_communications_no_message = root.owner
			}
		}
	}	
	
	option = {
		name = "distar.240.a"
	}
}

fleet_event = { #Entering Sealed System
	id = distar.242
	title = "distar.242.name"
	desc = {
		trigger = {
			owner = { has_country_flag = encountered_sealed_system }
			owner.species = {
				NOR = { has_trait = trait_latent_psionic has_trait = trait_psionic }
			}
		}
		text = "distar.242.desc"
	}
	desc = {
		trigger = {
			owner = { has_country_flag = encountered_sealed_system }
			owner.species = {
				OR = { has_trait = trait_latent_psionic has_trait = trait_psionic }
			}
		}
		text = "distar.242.desc.psi"
	}
	desc = {
		trigger = {
			owner = {
				NOT = {
					has_country_flag = encountered_sealed_system
				}
			}
		}
		text = "distar.242.desc.jump"
	}
	picture = GFX_evt_surreal_visions
	show_sound = event_space_cloud
	location = root
	
	is_triggered_only = yes
	
	trigger = {
		FROM = { has_star_flag = sealed_system }
		owner = {
			NOT = { has_country_flag = entered_sealed_system }
		}
		exists = event_target:sealed_psionic_entity
	}
	
	immediate = {
		owner = {
			set_country_flag = entered_sealed_system
		}
		solar_system = {
			random_system_planet = {
				limit = {
					has_anomaly = yes
					is_planet_class = pc_gaia
				}
				save_event_target_as = tanker_planet
			}
		}
	}	
	
	option = {
		name = BATTLESTATIONS
	}
}

country_event = { #Death of the Sealed System Psionic Entity
	id = distar.243
	title = "distar.243.name"
	desc = "distar.243.desc"
	picture = GFX_evt_surreal_visions
	show_sound = event_space_cloud
	location = fromfrom
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:sealed_psionic_entity
		FromFromFrom.fleet = {
			is_same_value = event_target:sealed_psionic_entity
		}
		is_country_type = default
	}

	option = {
		name = EXCELLENT
	}
}

ship_event = { #Sealed System Anomaly Reward
	id = distar.244
	title = "distar.244.name"
	desc = {
		trigger = {
			owner = { NOT = { has_authority = auth_machine_intelligence } }
		}
		text = "distar.244.desc"
	}
	desc = {
		trigger = {
			owner = { has_authority = auth_machine_intelligence }
		}
		text = "distar.244.desc.machi"
	}
	picture = GFX_evt_derelict_interior
	show_sound = event_laboratory_sound
	location = FROM
	
	is_triggered_only = yes

	option = {
		name = FASCINATING
		owner = {
			add_research_option = tech_neuroregeneration
	 		add_tech_progress = {
				tech = tech_neuroregeneration
	  			progress = 0.30
	 		}
		}
	}

	option = {
		exclusive_trigger = {
			owner = { has_authority = auth_machine_intelligence }
		}
		name = CURIOUS
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier5researchreward
				min = @tier5researchmin
				max = @tier5researchmax
			}
		}
	}
}

ship_event = {
	id = distar.245
	title = "distar.245.name"
	desc = "distar.245.desc"
	picture = GFX_evt_space_debris
	show_sound = event_scanner
	location = event_target:droppod_tar
	
	is_triggered_only = yes

	immediate = {
		IF = {
			LIMIT = { host_has_dlc = "Synthetic Dawn Story Pack" }
			create_species = {
				name = "NAME_Caretaker"
				class = ROBOT
				portrait = "sd_mam_robot"
				namelist = "AI"
				traits = {
					trait = trait_machine_unit
					trait = trait_robot_enhanced_memory
					trait = trait_robot_emotion_emulators
				}
				effect = {
					save_event_target_as = caretaker_species
				}
			}
		}
		ELSE = {
			create_species = {
				name = "NAME_Caretaker"
				class = ROBOT
				portrait = "default_robot"
				namelist = "AI"
				traits = random
				effect = {
					save_event_target_as = caretaker_species
				}
			}
		}
		owner = {
			create_saved_leader = {
				creator = this
				key = caretaker_leader
				event_leader = no
				class = governor
				species = event_target:caretaker_species
				name = "NAME_Caretaker"
				skill = 4
				traits = {
					trait = leader_trait_analytical
					trait = leader_trait_ai_aided_design
				}
				gender = indeterminable
				set_age = 709
				effect = {
					save_event_target_as = caretaker_leader_tar
				}
			}
		}
	}

	option = {
		name = ONSCREEN
		hidden_effect = {
			owner = { country_event = { id = distar.246 } }
		}
	}
	option = {
		name = NOTIME
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier1influencereward
				min = @tier1influencemin
				max = @tier1influencemax
			}
		}
	}
}

country_event = {
	id = distar.246
	title = "distar.246.name"
	desc = "distar.246.desc"
	location = event_target:droppod_tar

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:caretaker_leader_tar
		room = ethic_spaceship_room
	}

	option = {	#Accept the leader
		name = "distar.246.a"
		trigger = {
			NOR = {
				has_authority = auth_machine_intelligence
				has_policy_flag = ai_outlawed
				has_civic = civic_fanatic_purifiers
			}
		}
		custom_tooltip = "distar.246.a.tooltip"
		activate_saved_leader = {
			add_to_owned = yes
			key = caretaker_leader
		}
		hidden_effect = {
			country_event = { id = distar.249 }
		}
	}

	option = {	#Examine the leader
		name = "distar.246.b"
		trigger = {
			NOR = {
				has_authority = auth_machine_intelligence
				has_policy_flag = ai_outlawed
			}
		}
		custom_tooltip = "distar.246.b.tooltip"
		tooltip = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
		hidden_effect = {
			country_event = { id = distar.247 }
		}
		default_hide_option = yes
	}

	option = { #Ignore the leader
		name = "distar.246.c"
		trigger = {
			has_policy_flag = ai_outlawed
		}
		tooltip = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier1unityreward
				min = @tier1unitymin
				max = @tier1unitymax
			}
		}
		default_hide_option = yes
	}

	option = { #Destroy the leader
		name = "distar.246.d"
		trigger = {
			NOR = {
				has_policy_flag = ai_full_rights
				has_authority = auth_machine_intelligence
			}
		}
		tooltip = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier1influencereward
				min = @tier1influencemin
				max = @tier1influencemax
			}
		}
		hidden_effect = {
			country_event = { id = distar.248 }
		}
	}

	option = {	#Accept the leader (MI)
		trigger = {
			has_authority = auth_machine_intelligence
		}
		name = "distar.246.machi"
		custom_tooltip = "distar.246.a.tooltip"
		activate_saved_leader = {
			add_to_owned = yes
			key = caretaker_leader
		}
		hidden_effect = {
			event_target:droppod_tar = {
				destroy_ambient_object = this
			}
		}
	}

	option = {	#Repurpose the leader (MI)
		trigger = {
			has_authority = auth_machine_intelligence
		}
		name = "distar.246.machi.b"
		custom_tooltip = "distar.246.b.tooltip"
		tooltip = {
			add_resource = { minerals = 100 }
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
		hidden_effect = {
			country_event = { id = distar.248 }
		}
	}
}

country_event = { #Examining the leader
	id = distar.247
	title = "distar.247.name"
	desc = "distar.247.desc"
	location = event_target:droppod_tar

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:caretaker_leader_tar
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.247.a"
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
	}
}

country_event = { #Destroying the leader
	id = distar.248
	title = "distar.248.name"
	desc = {
		trigger = { has_authority = auth_machine_intelligence }
		text = "distar.248.desc.machi"
	}
	desc = {
		trigger = { NOT = { has_authority = auth_machine_intelligence } }
		text = "distar.248.desc"
	}
	location = event_target:droppod_tar

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:caretaker_leader_tar
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.248.machi"
		exclusive_trigger = {
			has_authority = auth_machine_intelligence
		}
		add_resource = { minerals = 100 }
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
		hidden_effect = {
			event_target:droppod_tar = {
				destroy_ambient_object = this
			}
		}
	}

	option = {
		name = "distar.248.a"
		add_monthly_resource_mult = {
			resource = influence
			value = @tier1influencereward
			min = @tier1influencemin
			max = @tier1influencemax
		}
		hidden_effect = {
			event_target:droppod_tar = {
				destroy_ambient_object = this
			}
		}
	}
}

country_event = {
	id = distar.249
	title = "distar.246.name"
	desc = "distar.249.desc"
	location = event_target:droppod_tar

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:caretaker_leader_tar
		room = ethic_spaceship_room
	}

	option = {
		name = "distar.249.a"
	}

	option = {
		exclusive_trigger = {
			has_authority = auth_machine_intelligence
		}
		name = "distar.249.a.machi"
	}
}

ship_event = { #Phaseshifting Planet
	id = distar.250
	title = "distar.250.name"
	desc = "distar.250.desc"
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_shrouded
			}
		}
		picture = GFX_evt_shrouded
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_gaia
			}
		}
		picture = GFX_evt_gaia
	}
	show_sound = event_mystic_reveal_light
	location = from
	
	is_triggered_only = yes

	immediate = {
		owner = {
			set_country_flag = surveyed_phaseshift_planet
		}
		from = {
			IF = {
				limit = {
					NOT = { has_modifier = phaseshifted }
				}
				add_modifier = { modifier = phaseshifted days = -1 }
			}
		}
	}

	option = {
		name = "distar.250.a"
		hidden_effect = {
			from = {
				set_name = "NAME_The_Veil"
			}
			ship_event = { id = distar.251 days = 1 }
		} 
	}
}

ship_event = {
	id = distar.251
	title = "distar.251.name"
	desc = {
		trigger = {
			event_target:phaseshift_planet = {
				is_planet_class = pc_gaia #Inverted check bc pc_change in immediate actually runs after
			}
		}
		text = "distar.251.desc.shroud"
	}
	desc = {
		trigger = {
			event_target:phaseshift_planet = {
				is_planet_class = pc_shrouded #Inverted check bc pc_change in immediate actually runs after
			}
		}
		text = "distar.251.desc.gaia"
	}
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = event_target:phaseshift_planet
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:phaseshift_planet
	}

	immediate = {
		event_target:phaseshift_planet = {
			IF = {
				limit = { is_planet_class = pc_shrouded }
				change_pc = pc_gaia
				clear_deposits = yes
				add_deposit = d_active_volcano
				add_deposit = d_mountain_range
				add_deposit = d_tempestous_mountain
				add_deposit = d_underwater_vent
				add_deposit = d_buzzing_plains
				add_deposit = d_submerged_ore_veins
				add_deposit = d_submerged_ore_veins
				add_deposit = d_lush_jungle
				add_deposit = d_natural_farmland
				add_deposit = d_natural_farmland
				add_deposit = d_alien_pets_deposit
				add_deposit = d_teeming_reef
			}
			ELSE_IF = {
				limit = { is_planet_class = pc_gaia }
				change_pc = pc_shrouded
				clear_deposits = yes
			}
		}
	}

	option = {
		name = INCREDIBLE
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}
}

ship_event = { #If we own the system, and the planet is still shifting when researching the anomaly
	id = distar.302
	title = "distar.250.name"
	desc = {
		trigger = {
			owner = {
				has_special_project = PHASESHIFT_PROJECT
			}
		}
		text = "distar.302.desc"
	}
	desc = {
		trigger = {
			owner = {
				NOT = { has_special_project = PHASESHIFT_PROJECT }
			}
		}
		text = "distar.302.desc.noproj"
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_shrouded
			}
		}
		picture = GFX_evt_shrouded
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_gaia
			}
		}
		picture = GFX_evt_gaia
	}
	show_sound = event_mystic_reveal_light
	location = from
	
	is_triggered_only = yes

	immediate = {
		owner = {
			set_country_flag = surveyed_phaseshift_planet
		}
	}

	option = {
		name = FASCINATING
		hidden_effect = {
			from = {
				set_name = "NAME_The_Veil"
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}
}

ship_event = { #If the planet has already been locked into a Gaia World
	id = distar.303
	title = "distar.250.name"
	desc = "distar.303.desc"
	picture = GFX_evt_gaia
	show_sound = event_mystic_reveal_light
	location = from
	
	is_triggered_only = yes

	immediate = {
		owner = {
			set_country_flag = surveyed_phaseshift_planet
		}
	}

	option = {
		name = INTERESTING
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
		hidden_effect = {
			from = {
				set_name = "NAME_The_Veil"
			}
		} 
	}
}

event = { #Gamestart for Recursive Phaseshift
	id = distar.252
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:phaseshift_planet
		event_target:phaseshift_planet = {
			has_planet_flag = phaseshifting_active
		}
	}

	immediate = {
		event_target:phaseshift_planet = {
			planet_event = { id = distar.257 }
		}
	}
}

ship_event = { #A country completes the Special Project to Phase-Lock
	id = distar.253
	title = "distar.253.name"
	desc = "distar.253.desc"
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = event_target:phaseshift_planet
	
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		custom_tooltip = "distar.253.a.tooltip"
		hidden_effect = {
			event_target:phaseshift_planet = {
				IF = {
					limit = { NOT = { is_planet_class = pc_gaia } }
					change_pc = pc_gaia
					clear_deposits = yes
					add_deposit = d_active_volcano
					add_deposit = d_mountain_range
					add_deposit = d_tempestous_mountain
					add_deposit = d_underwater_vent
					add_deposit = d_buzzing_plains
					add_deposit = d_submerged_ore_veins
					add_deposit = d_submerged_ore_veins
					add_deposit = d_lush_jungle
					add_deposit = d_natural_farmland
					add_deposit = d_natural_farmland
					add_deposit = d_alien_pets_deposit
					add_deposit = d_teeming_reef
				}
				remove_planet_flag = phaseshifting_active
				remove_modifier = phaseshifted
				if = {
					limit = { has_mining_station = yes }
					random_mining_station = { dismantle = yes }
				}
				if = {
					limit = { has_research_station = yes }
					random_research_station = { dismantle = yes }
				}
			}
			every_country = { #Just in case
				limit = {
					has_special_project = PHASESHIFT_PROJECT
					NOT = {
						is_same_value = root.owner
					}
				}
				abort_special_project = { type = PHASESHIFT_PROJECT }
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}
}

ship_event = { #Special Project Gatekeeper (on_starbase_transfer, on_building_starbase_outpost)
	id = distar.254
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = solar_system
		solar_system = {
			has_star_flag = phaseshift_system
		}
		owner = {
			NOT = {
				has_special_project = PHASESHIFT_PROJECT
			}
		}
		event_target:phaseshift_planet = {
			has_planet_flag = phaseshifting_active
		}
	}

	immediate = {
		owner = {
			country_event = { id = distar.255 days = 1 }
		}
		every_country = {
			limit = {
				has_special_project = PHASESHIFT_PROJECT
				NOT = {
					is_same_value = root.owner
				}
			}
			abort_special_project = { type = PHASESHIFT_PROJECT }
		}
	}
}

country_event = { #Grants Special Project to Phase-Lock Planet
	id = distar.255
	title = "distar.255.name"
	desc = {
		trigger = {
			has_country_flag = surveyed_phaseshift_planet
		}
		text = "distar.255.desc"
	}
	desc = {
		trigger = {
			NOT = { has_country_flag = surveyed_phaseshift_planet }
		}
		text = "distar.255.desc.first"
	}
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = event_target:phaseshift_planet

	is_triggered_only = yes

	trigger = {
		NOT = { #Don't grant temporary wartime occupiers the Special Project
			is_at_war_with = from
		}
	}

	option = {
		name = "distar.255.a"
		event_target:phaseshift_planet = {
			enable_special_project = {
				name = "PHASESHIFT_PROJECT"
				location = this
				owner = root
			}
		}
	}

	option = {
		name = "distar.255.b"
		add_monthly_resource_mult = {
			resource = influence
			value = @tier2influencereward
			min = @tier2influencemin
			max = @tier2influencemax
		}
	}
}

ship_event = { #on_survey Gatekeeper
	id = distar.256
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:phaseshift_planet
		from = {
			is_same_value = event_target:phaseshift_planet
			has_planet_flag = phaseshifting_active
		}
	}

	immediate = {
		if = { #If this is the first time the planet is being surveyed, add anomaly
			limit = {
				from = {
					NOT = { has_planet_flag = phaseshift_planet_surveyed }
				}
			}
			from = {
				add_anomaly = {
					category = DISTAR_PHASE_CAT
				}
				set_planet_flag = phaseshift_planet_surveyed
			}
		}
		else = { #else run notif event instead
			ship_event = { id = distar.258 days = 1 }
		}
	}
}

ship_event = {
	id = distar.258
	title = "distar.256.name"
	desc = "distar.256.desc"
	picture = GFX_evt_shrouded
	show_sound = event_mystic_reveal_light
	location = event_target:phaseshift_planet
	
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = surveyed_phaseshift_planet
			}
		}
	}

	immediate = {
		owner = {
			set_country_flag = surveyed_phaseshift_planet
		}
		from = {
			IF = {
				limit = {
					NOT = { has_modifier = phaseshifted }
				}
				add_modifier = { modifier = phaseshifted days = -1 }
			}
		}
	}

	option = {
		name = INCREDIBLE
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}
}

planet_event = { #Recursive Phaseshift
	id = distar.257
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		has_planet_flag = phaseshifting_active
	}

	immediate = {
		IF = {
			limit = { is_planet_class = pc_gaia }
			change_pc = pc_shrouded
			clear_deposits = yes
			IF = {
				limit = {
					NOT = { has_modifier = phaseshifted }
				}
				add_modifier = { modifier = phaseshifted days = -1 }
			}
		}
		ELSE_IF = {
			limit = { is_planet_class = pc_shrouded }
			change_pc = pc_gaia
			clear_deposits = yes
			add_deposit = d_active_volcano
			add_deposit = d_mountain_range
			add_deposit = d_tempestous_mountain
			add_deposit = d_underwater_vent
			add_deposit = d_buzzing_plains
			add_deposit = d_submerged_ore_veins
			add_deposit = d_submerged_ore_veins
			add_deposit = d_lush_jungle
			add_deposit = d_natural_farmland
			add_deposit = d_natural_farmland
			add_deposit = d_alien_pets_deposit
			add_deposit = d_teeming_reef

			IF = {
				limit = {
					NOT = { has_modifier = phaseshifted }
				}
				add_modifier = { modifier = phaseshifted days = -1 }
			}
		}
		ELSE_IF = {
			limit = { is_planet_class = pc_broken }
			remove_planet_flag = phaseshifting_active
		}
		ELSE = {
			change_pc = pc_shrouded
			clear_deposits = yes
			IF = {
				limit = {
					NOT = { has_modifier = phaseshifted }
				}
				add_modifier = { modifier = phaseshifted days = -1 }
			}
		}
		planet_event = { id = distar.257 days = 90 }
	}
}

#Funlent Blue is Mushroom Dudes			# RETILE
planet_event = { #on_spawn
	id = distar.260
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		set_planet_flag = funlent_planet
		add_deposit = d_city_ruins
		#Create the funlent species
		create_species = {
			name = random
			class = PRE_FUN
			portrait = fun11
			namelist = "FUN4"
			homeworld = root
			sapient = no
			traits = {
				trait = trait_presapient_docile_livestock
			}
			effect = {
				save_global_event_target_as = livestock_species
			}
		}
		while = {
			count = 2
			create_pop = {
				species = event_target:livestock_species
			}
	    }
	}
}

ship_event = {
	id = distar.261
	title = "distar.261.name"
	desc = "distar.261.desc"
	picture = GFX_evt_animal_wildlife
	show_sound = event_alien_nature
	location = from
	
	is_triggered_only = yes

	option = {
		name = "distar.234.phobe"
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}

	option = {
		name = INTERESTING
		exclusive_trigger = {
			owner = {
				OR = {
					has_ethic = ethic_fanatic_authoritarian
					has_civic = civic_slaver_guilds
				}
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}

	option = {
		name = TASTY
		exclusive_trigger = {
			owner = {
				has_civic = civic_hive_devouring_swarm
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}

	option = {
		name = "distar.261.a.servi"
		exclusive_trigger = {
			owner = {
				has_civic = civic_machine_servitor
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}

	option = {
		name = "distar.261.a.assim"
		exclusive_trigger = {
			owner = {
				has_civic = civic_machine_assimilator
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}

	option = {
		name = "distar.261.a.exter"
		exclusive_trigger = {
			owner = {
				has_civic = civic_machine_terminator
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
	}

	option = {
		name = SCUM
		exclusive_trigger = {
			owner = {
				has_civic = civic_fanatic_purifiers
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
	}
}

planet_event = {
	id = distar.262
	title = "distar.262.name"
	desc = "distar.262.desc"
	picture = GFX_evt_animal_wildlife
	show_sound = event_alien_nature
	location = root
	
	is_triggered_only = yes

	trigger = {
		has_planet_flag = funlent_planet
		any_pop = {
			is_same_species = event_target:livestock_species
		}
		owner = {
			NOT = {
				has_authority = auth_machine_intelligence
			}
		}
	}

	option = {
		name = "distar.262.a"
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier2influencereward
				min = @tier2influencemin
				max = @tier2influencemax
			}
		}
	}

	option = {
		allow = { owner = { resource_stockpile_compare = { resource = energy value >= 300 } } }
		name = "distar.262.b"
		custom_tooltip = "distar.262.b.tooltip.2"
		owner = { add_resource = { energy = -300 } }
		add_deposit = d_processing_pens
		hidden_effect = {
			while = {
				limit = {
					any_pop = {
						is_same_species = event_target:livestock_species
					}
				}
				random_pop = {
					limit = {
						is_same_species = event_target:livestock_species
					}
					kill_pop = yes
				}
			}
		}
	}
}

#Sonified Signal
ship_event = {
	id = distar.265
	title = "distar.265.name"
	desc = "distar.265.desc"
	picture = GFX_evt_satellite_in_orbit
	show_sound = event_alien_signal
	location = from
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.5 days = 30 } }
	}

	option = {
		name = CURIOUS
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
			hidden_effect = {
				pop_lcluster_event = yes
				set_country_flag = lcluster_clue_sonic
			}
		}
	}
	option = {
		exclusive_trigger = {
			owner = {
				has_civic = civic_fanatic_purifiers
			}
		}
		name = DISCONCERTING
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
			hidden_effect = {
				pop_lcluster_event = yes
				set_country_flag = lcluster_clue_sonic
			}
		}
	}
}

#Puzzle Box
ship_event = {
	id = distar.270
	title = "distar.270.name"
	desc = "distar.270.desc"
	picture = GFX_evt_ship_in_orbit_2
	show_sound = event_default
	location = from
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.5 days = 30 } }
	}

	option = {
		name = "discovery.270.a"
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			generate_lcluster_clue = yes
		}
	}

	option = {
		exclusive_trigger = {
			owner = {
				OR = {
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
				}
			}
		}
		name = DISCONCERTING
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			generate_lcluster_clue = yes
		}
	}
}

#Peaceful Nanite Village
ship_event = {
	id = distar.275
	title = "distar.275.name"
	desc = {
		trigger = {
			owner = {
				num_communications > 0
			}
		}
		text = "distar.275.desc.comms"
	}
	desc = {
		trigger = {
			owner = {
				num_communications < 1
			}
		}
		text = "distar.275.desc.nocomms"
	}
	picture = GFX_evt_dead_city
	show_sound = event_default
	location = from
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.5 days = 30 } }
	}

	option = {
		name = INCREDIBLE
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			generate_lcluster_clue = yes
		}
	}

	option = {
		name = DISCONCERTING
		exclusive_trigger = {
			owner = {
				OR = {
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
				}
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			generate_lcluster_clue = yes
		}
	}
}

#Nanosands
ship_event = {
	id = distar.280
	title = "distar.280.name"
	desc = "distar.280.desc"
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_desert
			}
		}
		picture = GFX_evt_desert
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_gaia
			}
		}
		picture = GFX_evt_gaia
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_barren
			}
		}
		picture = GFX_evt_warm_barren
	}
	show_sound = event_default
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = {
			if = {
				limit = { is_planet_class = pc_barren }
				clear_deposits = yes
			}
		}
		owner = { country_event = { id = story.5 days = 30 } }
	}

	option = {
		name = ASTOUNDING
		from = {
			IF = {
				limit = { habitable_planet = yes }
				add_deposit = d_nanosands
			}
			ELSE = {
				add_deposit = d_minerals_4
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			generate_lcluster_clue = yes
		}
	}

	option = {
		exclusive_trigger = {
			owner = {
				OR = {
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
				}
			} 
		}
		name = DISCONCERTING
		from = {
			IF = {
				limit = { habitable_planet = yes }
				add_deposit = d_nanosands
			}
			ELSE = {
				add_deposit = d_minerals_4
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			generate_lcluster_clue = yes
		}
	}
}

#Gatebuilder Medical Facility
ship_event = {
	id = distar.285
	title = "distar.285.name"
	desc = "distar.285.desc"
	picture = GFX_evt_gas_giant
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = { clear_deposits = yes }
		owner = { country_event = { id = story.5 days = 30 } }
	}

	option = {
		name = INCREDIBLE
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			generate_lcluster_clue = yes
		}
		from = {
			add_deposit = d_exotic_gases_2
		}
	}
}

### GAME_START EVENTS
### Create Sealed System
event = {
	id = distar.290
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_distar = yes
	}

	immediate = {
		set_spawn_system_batch = begin
		no_scope = {
			# makes system positions originate from galactic core
			#set_spawn_system_batch = begin
			# batch-processes the spawn_system effects between "begin" and "end",
			# so caches are recalculated only once rather than for every system spawned

			#Spawn Sealed System Entry System
			random_system = {
				limit = {
					NOR = {
						is_fe_cluster = yes
						has_star_flag = empire_cluster
					}
				}
				spawn_system = {
					min_distance >= 20
					max_distance <= 50
					initializer = "distar_sealed_1_1"
				}
			}
			#Spawn Sealed System
			event_target:sealed_entry_system = {
				spawn_system = {
					min_distance >= 20
					max_distance <= 30
					max_jumps = 30
					initializer = "distar_sealed_1_2"
				}
			}
			#Isolate Sealed System
			if = {
				limit = { exists = event_target:sealed_system }
				event_target:sealed_system = {
					isolate_system = yes
					#Create Shroud Country
					if = {
						limit = { NOT = { exists = event_target:shroud_country } }
						create_country = {
							name = "NAME_Creatures_of_the_Shroud"
							type = shroud_spirits
							flag = {
								icon = {
									category = "special"
									file = "the_shroud.dds"
								}
								background= {
									category = "backgrounds"
									file = "00_solid.dds"
								}
								colors = {
									"dark_purple"
									"black"
									"null"
									"null"
								}
							}
						}
						last_created_country = {
							save_global_event_target_as = shroud_country
						}
					}
					#Create Miniboss
					create_fleet = {
						name = "NAME_Psionic_Entity"
						settings = {
							spawn_debris = no
							is_boss = yes
						}
						effect = {
							set_owner = event_target:shroud_country
							create_ship = {
								name = "NAME_Psionic_Entity"
								design = "NAME_Corrupted_Avatar"
							}
							set_location = {
								target = prev.star
								distance = 100
								angle = random
							}
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = return_point
							set_aggro_range = 2000
							save_global_event_target_as = sealed_psionic_entity
						}
					}
				}
			}
		}
		set_spawn_system_batch = end
		
		#Spawn Special Wormholes
		event_target:sealed_entry_system = {
			event_target:sealed_system = {
				prev = { # done this way to ensure we don't spawn "orphan wormholes (wormholes that aren't linked to anything)
					spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = no
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = no
					orbit_angle = 270
				}
				link_wormholes = prev
			}
		}
	}
}

### GAME_START
### Ensure Hyperlanes actually connect the three Ratling Systems
event = {
	id = distar.295
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_distar = yes
		host_has_dlc = "Utopia"
		any_system = {
			has_star_flag = ratling_home_system
		}
		any_system = {
			has_star_flag = ratling_system
			NOT = { has_star_flag = ratling_home_system }
		}
	}

	immediate = {
		set_spawn_system_batch = begin
		random_system = {
			limit = { has_star_flag = ratling_home_system }
			while = {
				limit = {
					any_system = {
						has_star_flag = ratling_system
						NOT = { has_hyperlane_to = prev }
					}
				}
				random_system = {
					limit = {
						has_star_flag = ratling_system
						NOT = { has_hyperlane_to = prev }
					}
					add_hyperlane = { from = this to = prev }
				}
			}
		}
		set_spawn_system_batch = end
	}
}

planet_event = { #Changing Ratling planetview image back to nuked on colonization
	id = distar.300
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_planet_flag = ratling_planet
		is_planet_class = pc_nuked
		NOT = { has_planet_flag = changed_planetview_image }
	}

	immediate = {
		set_planet_entity = {
			picture = pc_nuked
		}
		set_planet_flag = changed_planetview_image
	}
}

event = {
	id = distar.301
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = event_target:ratling_pre_space_country
		any_playable_country = {
			NOR = {
				has_communications = event_target:ratling_pre_space_country
				is_same_value = event_target:ratling_pre_space_country
			}
		}
	}

	immediate = {
		random_playable_country = {
			limit = {
				NOR = {
					has_communications = event_target:ratling_pre_space_country
					is_same_value = event_target:ratling_pre_space_country
				}
			}
			establish_communications_no_message = event_target:ratling_pre_space_country
			establish_contact = { who = this location = this.capital_scope }
		}
	}
}

ship_event = { #Duplicated action.94 for SRs that are created by events, not on system init
	id = distar.305
	title = distar.305.name
	desc = {
		trigger = {
			success_text = {
				text =					         distar.305.volatile_motes
				hidden:fromfrom = { has_resource = { type = volatile_motes amount > 0 } }
			}
			success_text = {
				text =						     distar.305.exotic_gases
				hidden:fromfrom = { has_resource = { type = exotic_gases amount > 0 } }
			}
			success_text = {
				text =						     distar.305.rare_crystals
				hidden:fromfrom = { has_resource = { type = rare_crystals amount > 0 } }
			}
			success_text = {
				text =						     distar.305.living_metal
				hidden:fromfrom = { has_resource = { type = sr_living_metal amount > 0 } }
			}
			success_text = {
				text =					         distar.305.zro
				hidden:fromfrom = { has_resource = { type = sr_zro amount > 0 } }
			}
			success_text = {
				text =					         distar.305.dark_matter
				hidden:fromfrom = { has_resource = { type = sr_dark_matter amount > 0 } }
			}
			success_text = {
				text = action.92.has_tech
				OR = {
					AND = {
						hidden:fromfrom = { has_resource = { type = volatile_motes amount > 0 } }
						hidden:owner = { has_technology = tech_volatile_motes }
					}
					AND = {
						hidden:fromfrom = { has_resource = { type = exotic_gases amount > 0 } }
						hidden:owner = { has_technology = tech_exotic_gases }
					}
					AND = {
						hidden:fromfrom = { has_resource = { type = rare_crystals amount > 0 } }
						hidden:owner = { has_technology = tech_rare_crystals }
					}
					AND = {
						hidden:fromfrom = { has_resource = { type = sr_living_metal amount > 0 } }
						hidden:owner = { has_technology = tech_mine_living_metal }
					}
					AND = {
						hidden:fromfrom = { has_resource = { type = sr_zro amount > 0 } }
						hidden:owner = { has_technology = tech_mine_zro }
					}
					AND = {
						hidden:fromfrom = { has_resource = { type = sr_dark_matter amount > 0 } }
						hidden:owner = { has_technology = tech_mine_dark_matter }
					}
				}
			}
			success_text = {
				text = action.92.no_tech
				# same trigger as above
				NOR = {
					AND = {
						hidden:fromfrom = { has_resource = { type = volatile_motes amount > 0 } }
						hidden:owner = { has_technology = tech_volatile_motes }
					}
					AND = {
						hidden:fromfrom = { has_resource = { type = exotic_gases amount > 0 } }
						hidden:owner = { has_technology = tech_exotic_gases }
					}
					AND = {
						hidden:fromfrom = { has_resource = { type = rare_crystals amount > 0 } }
						hidden:owner = { has_technology = tech_rare_crystals }
					}
					AND = {
						hidden:fromfrom = { has_resource = { type = sr_living_metal amount > 0 } }
						hidden:owner = { has_technology = tech_mine_living_metal }
					}
					AND = {
						hidden:fromfrom = { has_resource = { type = sr_zro amount > 0 } }
						hidden:owner = { has_technology = tech_mine_zro }
					}
					AND = {
						hidden:fromfrom = { has_resource = { type = sr_dark_matter amount > 0 } }
						hidden:owner = { has_technology = tech_mine_dark_matter }
					}
				}
			}
		}
	}
	picture = GFX_evt_surreal_visions
	show_sound = event_default
	location = fromfrom

	is_triggered_only = yes

	trigger = {
		fromfrom = { # basically a pre-trigger
			has_strategic_resource = yes
			has_anomaly = no
		}
		owner = {
			OR = {
				AND = {
					root.fromfrom = {
						has_resource = {
							amount > 0
									type = volatile_motes
						}
					}
					NOT = {
						has_country_flag = volatile_motes_found
					}
				}
				AND = {
					root.fromfrom = {
						has_resource = {
							amount > 0
									type = exotic_gases
						}
					}
					NOT = {
						has_country_flag = exotic_gases_found
					}
				}
				AND = {
					root.fromfrom = {
						has_resource = {
							amount > 0
									type = rare_crystals
						}
					}
					NOT = {
						has_country_flag = rare_crystals_found
					}
				}
				AND = {
					root.fromfrom = {
						has_resource = {
							amount > 0
									type = sr_living_metal
						}
					}
					NOT = {
						has_country_flag = living_metal_found
					}
				}
				AND = {
					root.fromfrom = {
						has_resource = {
							amount > 0
									type = sr_zro
						}
					}
					NOT = {
						has_country_flag = zro_found
					}
				}
				AND = {
					root.fromfrom = {
						has_resource = {
							amount > 0
									type = sr_dark_matter
						}
					}
					NOT = {
						has_country_flag = dark_matter_found
					}
				}
			}
		}
	}

	immediate = {
		fromfrom = {
			if = {
				limit = { has_resource = { type = volatile_motes amount > 0 } }
				root.owner = { set_country_flag = volatile_motes_found }
			}
			else_if = {
				limit = { has_resource = { type = exotic_gases amount > 0 } }
				root.owner = { set_country_flag = exotic_gases_found }
			}
			else_if = {
				limit = { has_resource = { type = rare_crystals amount > 0 } }
				root.owner = { set_country_flag = rare_crystals_found }
			}
			else_if = {
				limit = { has_resource = { type = sr_living_metal amount > 0 } }
				root.owner = { set_country_flag =    living_metal_found }
			}
			else_if = {
				limit = { has_resource = { type = sr_zro amount > 0 } }
				root.owner = { set_country_flag =    zro_found }
			}
			else_if = {
				limit = { has_resource = { type = sr_dark_matter amount > 0 } }
				root.owner = { set_country_flag =    dark_matter_found }
			}
		}
	}

	option = {
		name = OK
		fromfrom = {
			hidden_effect = {
				if = {
					limit = { has_resource = { type = volatile_motes amount > 0 } }
					custom_tooltip = action.92.volatile_motes.tooltip
				}
				else_if = {
					limit = { has_resource = { type = exotic_gases amount > 0 } }
					custom_tooltip = action.92.exotic_gases.tooltip
				}
				else_if = {
					limit = { has_resource = { type = rare_crystals amount > 0 } }
					custom_tooltip = action.92.rare_crystals.tooltip
				}
				else_if = {
					limit = { has_resource = { type = sr_living_metal amount > 0 } }
					custom_tooltip = action.92.living_metal.tooltip
				}
				else_if = {
					limit = { has_resource = { type = sr_zro amount > 0 } }
					custom_tooltip = action.92.zro.tooltip
				}
				else_if = {
					limit = { has_resource = { type = sr_dark_matter amount > 0 } }
					custom_tooltip = action.92.dark_matter.tooltip
				}
			}
		}
	}
}


country_event = { #Atomic Clock follow-up: Selection
	id = distar.310
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		random_list = {
			0 = {
				modifier = {
					add = 1
					FROMFROM.solar_system = {
						any_system_planet = {
							habitable_planet = no
							has_anomaly = no
							planet_size > 8
							planet_size < 25
							NOT = { is_planet_class = "pc_broken" }
							is_star = no
						}
					}
				}
				country_event = { id = distar.311 } #System planet is terraformed
			}
			0 = {
				modifier = {
					add = 1
					FROMFROM.solar_system = {
						has_access_fleet = root
					}
				}
				country_event = { id = distar.315 } #Useable Gray Goo ship is built
			}
			1 = { country_event = { id = distar.320 } } #Unmanned research facilities built (Phys + Eng)
			0 = {
				modifier = {
					add = 1
					FROMFROM.solar_system = {
						any_system_planet = {
							has_anomaly = no
							exists = owner
							owner = {
								is_primitive = yes
							}
							NOT = { is_planet_class = pc_ringworld_habitable }
						}
					}
				}
				country_event = { id = distar.330 } #Primitive planet is nuked
			}
			0 = {
				modifier = {
					add = 1
					FROMFROM.solar_system = {
						any_system_planet = {
							habitable_planet = yes
							is_colony = no
							is_under_colonization = no
							has_anomaly = no
						}
					}
				}
				country_event = { id = distar.335 } #Habitable planet is nuked
			}
		}
	}
}

country_event = { #Atomic Clock follow-up: A system planet is terraformed
	id = distar.311
	title = distar.311.name
	desc = distar.311.desc
	picture = GFX_evt_clocks
	show_sound = event_activating_unknown_technology
	location = FROMFROMFROM

	is_triggered_only = yes

	immediate = {
		FROMFROMFROM.solar_system = {
			random_system_planet = {
				limit = {
					habitable_planet = no
					has_anomaly = no
					planet_size > 8
					planet_size < 25
					NOT = { is_planet_class = "pc_broken" }
					is_star = no
				}
				save_event_target_as = atomic_clock_planet
			}
		}
	}

	option = {
		name = "distar.311.a"
		hidden_effect = { country_event = { id = distar.312 days = 30 } }
	}

	option = {
		trigger = {
			event_target:atomic_clock_planet.solar_system = {
				any_ship_in_system = {
					owner = { is_same_value = root }
					OR = {
						is_ship_class = shipclass_military_station
						is_ship_class = shipclass_military
					}
				}
			}
		}
		name = "distar.311.b"
		custom_tooltip = "distar.311.b.tooltip"
		add_monthly_resource_mult = {
			resource = influence
			value = @tier1influencereward
			min = @tier1influencemin
			max = @tier1influencemax
		}
		hidden_effect = { country_event = { id = distar.313 days = 10 } } #They gray goo the planet
	}
}

country_event = { #A system planet is terraformed
	id = distar.312
	title = distar.312.name
	desc = distar.312.desc
	picture = GFX_evt_gray_gooed_planet
	show_sound = event_mystic_reveal
	location = event_target:atomic_clock_planet

	is_triggered_only = yes

	option = {
		name = INCREDIBLE
		event_target:atomic_clock_planet = {
			change_pc = pc_gaia
			hidden_effect = { reroll_planet = yes }
			add_modifier = { modifier = mineral_rich days = -1 }
			hidden_effect = {
				switch = {
					trigger = has_modifier
					mineral_poor = { remove_modifier = mineral_poor }
					ultra_rich = { remove_modifier = ultra_rich }
					titanic_life = { remove_modifier = titanic_life }
					dangerous_wildlife = { remove_modifier = dangerous_wildlife }

				}
				every_deposit = {
					limit = { is_deposit_type = d_dangerous_wildlife_blocker }
					clear_blocker = yes
				}
			}
		}
		generate_lcluster_clue = yes
	}
}

country_event = { #A system planet is gray gooed
	id = distar.313
	title = distar.313.name
	desc = distar.313.desc
	picture = GFX_evt_gray_goo
	show_sound = event_mystic_reveal
	location = event_target:atomic_clock_planet

	is_triggered_only = yes

	immediate = {
		event_target:atomic_clock_planet = {
			if = {
				limit = { has_deposit_for = shipclass_mining_station }
				clear_deposits = yes
			}
			if = {
				limit = { has_mining_station = yes }
				random_mining_station = { dismantle = yes }
				create_research_station = { owner = root }
			}
		}
	}

	option = {
		name = DISCONCERTING
		event_target:atomic_clock_planet = {
			change_pc = pc_gray_goo
			set_deposit = d_engineering_4
		}
		generate_lcluster_clue = yes
	}
}

country_event = { #A useable Gray Goo Ship is built
	id = distar.315
	title = distar.315.name
	desc = distar.315.desc
	picture = GFX_evt_mining_station
	show_sound = event_mystic_reveal
	location = event_target:nanite_ship_fleet

	is_triggered_only = yes

	immediate = {
		create_country = {
			name = "NAME_Nanite_Ship"
			type = faction
			auto_delete = yes
			flag = {
				icon = {
    		        category = "special"
    		        file = "unknown.dds"
    		    }
    		    background = {
    		        category = "backgrounds"
    		        file = "00_solid.dds"
    		    }
    		    colors = {
    		        "dark_grey"
    		        "dark_grey"
    		        "null"
    		        "null"
    		    }
			}
			effect = {
				set_faction_hostility = {
					target = root
					set_hostile = no
					set_neutral = yes
					set_friendly = no
				}
				create_fleet = {
					name = "NAME_Nanite_Interdictor"
					effect = {
						set_owner = prev
						create_ship = {
							name = random
							design = "NAME_Nanite_Interdictor"
							prefix = no
							upgradable = no
						}
						set_location = {
							target = FROMFROMFROM
							distance = 2
							angle = random
						}
						set_fleet_stance = passive
						save_event_target_as = nanite_ship_fleet
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = yes
						can_change_leader = yes
						uses_naval_capacity = yes
						spawn_debris = no
					}
				}
				save_event_target_as = nanite_ship_country
			}
		}
	}

	option = {
		name = INCREDIBLE
		event_target:nanite_ship_fleet = {
			set_owner = root
		}
		generate_lcluster_clue = yes
		hidden_effect = {
			event_target:nanite_ship_country = {
				destroy_country = yes
			}
		}
	}

	option = {
		name = SCRAPIT
		event_target:nanite_ship_fleet = {
			delete_fleet = this
		}
		add_resource = { minerals = 1500 }
		generate_lcluster_clue = yes
		hidden_effect = {
			event_target:nanite_ship_country = {
				destroy_country = yes
			}
		}
	}
}


country_event = { #An unmanned computer network is built
	id = distar.320
	title = distar.320.name
	desc = distar.320.desc
	picture = GFX_evt_ancient_alien_temple
	show_sound = event_mystic_reveal
	location = FROMFROMFROM

	is_triggered_only = yes

	immediate = {
		FROMFROMFROM = {
			if = {
				limit = { has_deposit_for = shipclass_mining_station }
				clear_deposits = yes
			}
			if = {
				limit = { has_mining_station = yes }
				random_mining_station = { dismantle = yes }
				create_research_station = { owner = root }
			}
		}
	}

	option = {
		name = INCREDIBLE
		FROMFROMFROM = {
			add_modifier = { modifier = nanite_network days = -1 }
			add_deposit = d_engineering_10
		}
	}
}

country_event = { #A primitive planet is nuked
	id = distar.330
	title = distar.330.name
	desc = distar.330.desc
	picture = GFX_evt_exploding_planet
	show_sound = event_mystic_reveal
	location = event_target:nuked_primitive_planet

	is_triggered_only = yes

	immediate = {
		FROMFROMFROM.solar_system = {
			random_system_planet = {
				limit = {
					exists = owner
					owner = {
						is_primitive = yes
					}
					has_anomaly = no
				}
				owner = { save_event_target_as = nuked_primitives }
				save_event_target_as = nuked_primitive_planet
				nuke_primitives_toxic_effect = yes
				if = {
					limit = { has_observation_outpost = yes }
					observation_outpost = {
						dismantle = yes
					}
				}
			}
		}
	}
	option = {
		name = REMARKABLE
		exclusive_trigger = {
			OR = {
				has_ai_personality = exterminators
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
		}
	}
	option = {
		name = UNFORTUNATE
	}
	option = {
		name = distar.330.a.phile
		exclusive_trigger = {
			OR = {
				has_ethic = ethic_xenophile
				has_ethic = ethic_fanatic_xenophile
			}
		}
	}
}
country_event = { #A habitable planet is nuked
	id = distar.335
	title = distar.335.name
	desc = distar.335.desc
	picture = GFX_evt_exploding_planet
	show_sound = event_mystic_reveal
	location = event_target:nuked_planet

	is_triggered_only = yes

	immediate = {
		FROMFROMFROM.solar_system = {
			random_system_planet = {
				limit = {
					has_anomaly = no
					habitable_planet = yes
					is_colony = no
					is_under_colonization = no
				}
				save_event_target_as = nuked_planet
				change_pc = pc_toxic
				reset_planet = yes
			}
		}
	}

	option = {
		name = UNFORTUNATE
	}
}

#################################
#
# Anomaly Events
# by Miranda van den Brink
# anomaly.1000 - 2999
#
#################################

# ROOT = ship scope
# FROM = planet scope

##### VECTHAR ZAVONIA CHAIN ######

# Discovering the Vechtar Zavonia Generation Ship
ship_event = {
	id = distar.1000
	title = "distar.1000.name"
	desc = "distar.1000.desc"
	picture = GFX_evt_ship_in_orbit
	show_sound = event_ship_bridge
	location = FROM
	trackable = yes
	
	is_triggered_only = yes

	trigger = {
		owner = {
			NOR = {
				has_authority = auth_machine_intelligence
				has_ethic = ethic_gestalt_consciousness
				any_country = {
					has_country_flag = vechtar_zavonia_chain
				}
			}
		}
	}
	immediate = {
		owner = {
			country_event = { id = story.5 days = 30 }
			set_country_flag = vechtar_zavonia_chain
		}
		leader = {
			save_global_event_target_as = vechtar_zavonia_leader_name
		}
	}

	option = {
		name = distar.1000.a
		from = {
			enable_special_project = {
				name = "GENERATION_SHIP"
				location = from
				owner = root.owner
			}
		}
	}

	option = {
		name = distar.1000.b
		owner = { add_resource = { influence = 50 } }
	}
}

# Project Followup
country_event = {
	id = distar.1001
	title = "distar.1001.name"
	desc = "distar.1001.desc"
	picture = GFX_evt_ship_in_orbit
	show_sound = event_ship_bridge
	location = event_target:utopian_planet
	
	is_triggered_only = yes

	immediate = {
		#random_planet = {
		#	limit = {
		#		#is_colonizable = no
		#		has_owner = no
		#		#is_colony = no
		#		#uninhabitable_regular_planet = yes
		#		is_planet_class = pc_nuked
		#		has_anomaly = no
		#	}
		#	save_global_event_target_as = utopian_planet
		#}
		save_global_event_target_as = country_that_discovered_mardak_vol
		event_target:vechtar_zavonia_leader_name = {
			add_trait = leader_trait_maniacal
		}
	}

	option = {
		tooltip = {
			event_target:vechtar_zavonia_leader_name = {
				add_trait = leader_trait_maniacal
			}
		}
		name = distar.1001.a
		hidden_effect = {
			closest_system = {
				spawn_system = {
					min_distance >= 29
					max_distance <= 31
					# 45
					min_orientation_angle = 24
					max_orientation_angle = 66
					initializer = vechtar_zavonia_system
				}
			}
		}
		begin_event_chain = {
			event_chain = "generation_ship_chain"
			target = this
		}
		hidden_effect = {
			random_system = {
				limit = {
					has_owner = no
					NOT = {
						any_ship_in_system = {
							owner = { 
								is_hostile = root 
							} 
						}
					}
				}
			}
			create_point_of_interest = {
				id = hidden_planet
				name = "hidden_planet_poi"
				desc = hidden_planet_desc
				event_chain = generation_ship_chain
				location = event_target:utopian_planet
			}
		}
	}

	option = {
		tooltip = {
			event_target:vechtar_zavonia_leader_name = {
				add_trait = leader_trait_maniacal
			}
		}
		add_resource = { influence = 50 }
		name = distar.1001.b
	}
}
# Triggers on entering paradise planet system
fleet_event = {
	id = distar.1002
	title = "distar.1002.name"
	desc = "distar.1002.desc"
	picture = GFX_evt_cold_barren
	show_sound = event_ship_bridge
	location = event_target:utopian_planet
	trackable = yes
	
	is_triggered_only = yes

	trigger = {
		owner = {
			has_event_chain = generation_ship_chain
			NOT = {
				has_country_flag = discovered_hidden_planet
			}
		}
		exists = event_target:utopian_planet
		event_target:utopian_planet = {
			NOT = { has_planet_flag = triggered_vol_transmission }
		}
		solar_system = {
			any_system_planet = {
				is_same_value = event_target:utopian_planet
			}
		}
	}

	immediate = {
		owner = {
			set_country_flag = discovered_hidden_planet
			remove_point_of_interest = hidden_planet_poi
			add_event_chain_counter = {
				event_chain = "generation_ship_chain"
				counter = "planet_found"
				amount = 1
			}
		}
	}  

	option = {
		name = distar.1002.a
		owner = {
			enable_special_project = {
				name = "HIDDEN_PLANET"
				location = event_target:utopian_planet
				owner = root.owner
			}
		}
	}

	option = {
		name = distar.1002.b
		owner = {
			end_event_chain = "generation_ship_chain"
			add_resource = { influence = 50 }
		}
	}
}

# Project followup: Uncovering the paradise planet (Mardak Vol)			# RETILE
country_event = {
	id = distar.1003
	title = "distar.1003.name"
	desc = "distar.1003.desc"
	picture = GFX_evt_alien_cavemen
	show_sound = event_mystic_reveal
	location = event_target:utopian_planet
	
	is_triggered_only = yes

	immediate = {
		end_event_chain = "generation_ship_chain"
		event_target:utopian_planet = {
			surveyed = {
 				set_surveyed = yes
  				surveyor = root
  			}
			change_pc = pc_gaia
			set_planet_size = 25
			set_name = "NAME_Paridayda"
			clear_planet_modifiers = yes
			add_modifier = {
				modifier = paradise_planet
			}
			add_deposit = d_underwater_vent
			add_deposit = d_tempestous_mountain
			add_deposit = d_ore_rich_caverns
			add_deposit = d_ore_rich_caverns
			add_deposit = d_submerged_ore_veins
			add_deposit = d_lush_jungle
			add_deposit = d_teeming_reef
			add_deposit = d_black_soil
			add_deposit = d_dust_caverns
			add_deposit = d_crystal_forest
			add_deposit = d_active_volcano

			random_list = {
				33 = { add_deposit = d_frozen_gas_lake }
				33 = { add_deposit = d_prosperous_mesa }
				33 = { add_deposit = d_fertile_lands }
			}
			random_list = {
				33 = { add_deposit = d_dust_desert }
				33 = { add_deposit = d_bubbling_swamp }
				33 = { add_deposit = d_crystal_reef }
			}

			create_species = {
				name = "Mardak Vol"
				class = FUN
				portrait = fun4
				traits = {
					#ideal_planet_class = "pc_continental"
					trait = random_traits
				}
				homeworld = this
			}
			create_country = {
				name = random
				authority = random
				civics = {
					civic = civic_secret_of_fire
					civic = civic_the_wheel
				}
				species = last_created
				ethos = random

				flag = {
					icon = {
						category = "special"
						file = "primitive.dds"
					}
					background= {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors = {
						"turquoise"
						"green"
						"null"
						"null"
					}
				}
				type = primitive
				effect = {
					set_country_flag = stone_age
					set_primitive_age = stone_age
					save_event_target_as = mardak_vol_country
					set_graphical_culture = preindustrial_01
					species = {
						save_global_event_target_as = mardak_vol_species
					}
				}
			}

			set_owner = last_created_country
			set_capital = yes
			every_deposit = {
				limit = { is_deposit_type = d_dangerous_wildlife_blocker }
				clear_blocker = yes
			}
			while = {
				count = 1
				create_pop = {
					species = last_created
				}					
			}
			add_building = building_crude_huts
			add_building = building_crude_huts
		}
		establish_communications_no_message = event_target:mardak_vol_country
		if = {
			limit = {
				event_target:utopian_planet = {
					solar_system = {
						exists = owner
						owner = {
							NOT = {
								is_same_value = root
							}
						}
					}
				}
			}
			event_target:utopian_planet = {
				solar_system = {
					owner = {
						country_event = { id =  distar.1004 days = 10 }
					}
				}
			}
		}
		event_target:utopian_planet = {
			planet_event = { id = distar.1010 days = 20 } # Triggers Vol's return
		}
	}

	option = {
		name = distar.1003.a
	}

	option = {
		name = distar.1003.b
	}
}

# Notifying potential planet owners that their tomb world is actually a gaia world
country_event = {
	id = distar.1004
	title = "distar.1004.name"
	desc = "distar.1004.desc"
	picture = GFX_evt_alien_cavemen
	show_sound = event_mystic_reveal
	location = event_target:utopian_planet

	is_triggered_only = yes

	immediate = {
		establish_communications_no_message = event_target:mardak_vol_country
		event_target:utopian_planet = { save_event_target_as = primitive_planet }
		country_event = { id = story.6 days = 10 }
	}

	option = {
		name = distar.1004.a
	}
}
# Triggers continuation of event chain upon building a starbase
ship_event = {
	id = distar.1007
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:utopian_planet
		exists = event_target:mardak_vol_species
		event_target:utopian_planet = {
			NOT = { has_planet_flag = triggered_vol_transmission }
			any_owned_pop = {
				species = { is_same_value = event_target:mardak_vol_species }
			}
		}
		FROM = {
			solar_system = {
				any_system_planet = {
					is_same_value = event_target:utopian_planet
				}
			}
		}
	}

	immediate = {
		random_planet = {
			limit = {
				is_same_value = event_target:utopian_planet
			}
			planet_event = { id = distar.1010 days = 20 } # Triggers Vol's return
		}
	}
}
######## ADDS CONTINUATION OF EVENT CHAIN
# Triggers Vol return event for planet owner
planet_event = {
	id = distar.1010
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		solar_system = {
			exists = owner
		}
		any_owned_pop = {
			species = { is_same_value = event_target:mardak_vol_species }
		}
		NOT = { has_planet_flag = triggered_vol_transmission }
	}
	
	immediate = {
		solar_system = {
			owner = {
				country_event = { id = distar.1005 }
				save_event_target_as = country_that_owns_mardak_vol_planet
			}
		}
		set_planet_flag = triggered_vol_transmission
	}
}

# The Vol have discovered Mardak on your planets
country_event = {
	id = distar.1005
	title = "distar.1005.name"
	# country that discovered mardak vol own the planet
	desc = {
		trigger = {
			exists = event_target:country_that_discovered_mardak_vol
			is_same_value = event_target:country_that_discovered_mardak_vol
		}
		text = distar.1005.desc_a
	}
	# the planet is still owned by the country that owned it when the primitives were first discovered
	desc = {
		trigger = {
			NAND = {
				exists = event_target:country_that_discovered_mardak_vol
				is_same_value = event_target:country_that_discovered_mardak_vol
			}
		}

		text = distar.1005.desc_b
	}
	
	picture = GFX_evt_star_chart
	show_sound = event_radio_chatter
	location = event_target:utopian_planet

	is_triggered_only = yes

	trigger = {
		#exists = event_target:country_that_discovered_mardak_vol
		#is_same_value = event_target:country_that_discovered_mardak_vol
		event_target:utopian_planet = {
			solar_system = {
				exists = owner
			}	
			any_pop = {
				is_same_species = event_target:mardak_vol_species
			}
		}
	}

	immediate = {
		create_species = {
			name = "Vol"
			class = MAM
			portrait = mam5
			traits = {
				trait = random_traits
			}
			effect = {
				save_global_event_target_as = vol
			}
		}
		create_country = {
			name = "NAME_mardak_vol_haters"
			type = vol
			authority = auth_democratic
			civics = {
				civic = civic_fanatic_purifiers
				civic = civic_cutthroat_politics
			}
			ethos = {
				ethic = ethic_fanatic_xenophobe
				ethic = ethic_militarist
			}
			flag = {
				icon = {
					category = "domination"
					file = "domination_14.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = {
					"black"
					"black"
					"black"
					"black"
				}
			}
			species = event_target:vol
			effect = {
				save_global_event_target_as = mardak_vol_haters_country
				set_country_flag = mardak_vol_haters_country
				every_country = {
					establish_communications_no_message = event_target:mardak_vol_haters_country
				}
			}
		}
		event_target:mardak_vol_haters_country = {
			set_policy = {
				policy = orbital_bombardment
				option = orbital_bombardment_armageddon
				cooldown = no
			}
			create_leader = {
				class = ruler
				species = event_target:vol
				name = random
				skill = 5
			}
			set_leader = last_created_leader
		}
	}

	option = {
		name = ONSCREEN
		hidden_effect = {
			country_event = { id = distar.1006 }
		}
	}
}

## Vol - Transmission
country_event = {
	id = distar.1006
	title = "TRANSMISSION"
	desc = "distar.1006.desc"
	
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:mardak_vol_haters_country
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = distar.1006.a
		hidden_effect = {
		country_event = { id = distar.1008 }
		}
	}

	option = {
		name = distar.1006.b
		hidden_effect = {
			country_event = { id = distar.1009 }
			country_event = { id = distar.1011 days = 60 random = 20 }
			#country_event = { id = distar.1011 days = 5 }
		}
	}

	option = {
		name = distar.1006.c
		trigger = {
			is_species_class = FUN
		}
		hidden_effect = {
			country_event = { id = distar.1009 }
			country_event = { id = distar.1011 days = 60 random = 20 }
		}
	}
}
# Vol cleanse planet
country_event = {
	id = distar.1008
	title = "TRANSMISSION"
	desc = "distar.1008.desc"
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:mardak_vol_haters_country
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				exists = event_target:mardak_vol_country
			}
			event_target:mardak_vol_country = {
				destroy_country = yes
			}
		}
		if = {
			limit = {
				event_target:utopian_planet = {
					has_observation_outpost = yes
				}
			}
			event_target:utopian_planet = {
				observation_outpost = {
					dismantle = yes
				}
			}
		}
		if = {
			limit = {
				any_planet_within_border = {
					any_pop = {
						is_same_species = event_target:mardak_vol_species
					}
				}
			}
			every_planet_within_border = {
				limit = {
					any_pop = {
						is_same_species = event_target:mardak_vol_species
					}
				}
				every_owned_pop = {
					limit = { is_same_species = event_target:mardak_vol_species }
					kill_pop = yes
				}
				add_deposit = d_fungoid_extermination
			}
		}
	}

	option = {
		name = distar.1008.a
	}

	option = {
		name = distar.1008.b
		country_event = {
			id = distar.1013
		}
	}
}

country_event = {
	id = distar.1013
	title = "TRANSMISSION"
	desc = "distar.1013.desc"
	
	diplomatic = yes
	
	picture_event_data = {
		room = no_video_feed_room
	}
	
	is_triggered_only = yes

	option = {
		name = distar.1013.a
	}
}

country_event = {
	id = distar.1009
	title = "TRANSMISSION"
	desc = "distar.1009.desc"
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:mardak_vol_haters_country
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes

	option = {
		name = distar.1009.a
	}
}
## Vol attack
country_event = {
	id = distar.1011
	title = "distar.1011.name"
	desc = "distar.1011.desc"
	picture = GFX_evt_federation_fleet
	show_sound = event_red_alert
	location = event_target:mardak_vol_haters_fleet

	is_triggered_only = yes
	trigger = {
		event_target:utopian_planet = {
			solar_system = {
				exists = owner
			}	
			any_pop = {
				is_same_species = event_target:mardak_vol_species
			}
		}
	}

	immediate = {
		event_target:mardak_vol_haters_country = {
			create_leader = {
				class = admiral
				species = event_target:vol
				name = random
				skill = 4
				leader_age_min = 45
				leader_age_max = 60
				traits = {
					trait = leader_trait_unyielding
					trait = random_trait
				}
				effect = {
					save_event_target_as = mardak_vol_haters_leader
				}
			}
		}
		create_fleet = {
			name = "NAME_mardak_vol_haters_fleet"
			settings = {
				spawn_debris = no
				uses_naval_capacity = no
			}
			effect = {
				set_fleet_flag = vol_exterminators
				set_owner = event_target:mardak_vol_haters_country
				set_fleet_bombardment_stance = armageddon
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_corvette"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_corvette"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_corvette"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_corvette"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_corvette"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_corvette"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_corvette"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_corvette"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_corvette"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_corvette"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_destroyer"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_destroyer"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_destroyer"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_destroyer"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_destroyer"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_destroyer"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_destroyer"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_cruiser"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_cruiser"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_cruiser"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_cruiser"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_cruiser"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_cruiser"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_cruiser"
					graphical_culture = "mammalian_01"
				}
				create_ship = {
					name = "Mardak Purger"
					design = "NAME_mardak_vol_haters_cruiser"
					graphical_culture = "mammalian_01"
				}
				set_location = {
					target = event_target:utopian_planet
					distance = 200
					angle = 150
				}
				set_fleet_formation = {
					position = { x = -10.0	y = 8.5		} #11
					position = { x = -1.6	y = 15.0	} #10
					position = { x = 14.0	y = -3.0	} #9
					position = { x = 1.3	y = -11.0	} #8
					position = { x = -10.5	y = 1.0		} #7
					position = { x = 3.0	y = 8.0		} #6
					position = { x = -4.3	y = -7.0	} #5
					position = { x = 8.0	y = 9.0		} #4
					position = { x = -4.0	y = 7.3		} #3 
					position = { x = 7.5	y = -10.5	} #2
					position = { x = 0.0	y = 0.0		} #1
				}
				set_fleet_stance = passive
				set_aggro_range_measure_from = self
				set_aggro_range = 1
				save_global_event_target_as = mardak_vol_haters_fleet
				auto_move_to_planet = {
					target = event_target:utopian_planet
					clear_auto_move_on_arrival = no
				}
				set_leader = event_target:mardak_vol_haters_leader
			}
		}
	}
	option = {
		name = distar.1011.a
	}
}
# On Completion of Vol Orbital Bombardment of Paridayda the mardak vol country is destroyed
planet_event = {
	id = distar.1015
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:utopian_planet
		is_same_value = event_target:utopian_planet
	}
	
	immediate = {
		remove_modifier = paradise_planet
		add_deposit = d_fungoid_extermination
		add_deposit = d_fungoid_extermination
		add_deposit = d_fungoid_extermination
		add_deposit = d_fungoid_extermination
		closest_system = {
			min_steps = 1
			random_system_planet = {
				save_event_target_as = new_target
			}
		}
		solar_system = {
			random_fleet_in_system = {
				limit = {
					has_fleet_flag = vol_exterminators
				}
				auto_move_to_planet = {
					target = event_target:new_target
					clear_auto_move_on_arrival = no
				}
				set_fleet_flag = mardak_vol_purgers_die # Flags the ship for destruction now that their mission is done
			}
		}
		if = {
			limit = {
				has_observation_outpost = yes
			}
			observation_outpost = {
				dismantle = yes
			}
		}
		if = {
			limit = {
				any_pop = {
					is_same_species = event_target:mardak_vol_species
				}
			}
			owner = {
				every_planet_within_border = {
					limit = {
						any_pop = {
							is_same_species = event_target:mardak_vol_species
						}
					}
					every_owned_pop = {
						limit = { is_same_species = event_target:mardak_vol_species }
						kill_pop = yes
					}
					add_deposit = d_fungoid_extermination
				}
			}
		}
		solar_system = {
			owner = {
				country_event = { id = distar.1016 days = 1 }
			}
		}
	}
}

# Notification to planet owner/ system owner when paridayda is destroyed
country_event = {
	id = distar.1016
	title = "distar.1016.name"
	desc = "distar.1016.desc"
	picture = GFX_evt_burning_settlement
	show_sound = event_celebration
	location = event_target:utopian_planet

	is_triggered_only = yes

	option = {
		name = distar.1016.a
	}
}

country_event = {
	id = distar.1017
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = {
			has_fleet_flag = vol_exterminators
			has_fleet_flag = mardak_vol_purgers_die
		}
	}

	immediate = {
		from = {
			delete_fleet = this
			create_ambient_object = {
				location = this
				type = horror_spawn_object
			}
		}
		event_target:mardak_vol_haters_country = {
			destroy_country = yes
		}
	}
}


# Notification on colonizing Paridayda
planet_event = {
	id = distar.1014
	title = "distar.1014.name"
	desc = "distar.1014.desc"
	picture = GFX_evt_gaia
	show_sound = event_celebration
	location = event_target:utopian_planet

	is_triggered_only = yes

	trigger = {
		exists = event_target:utopian_planet
		is_same_value  = event_target:utopian_planet
		owner = {
			is_same_value = event_target:country_that_discovered_mardak_vol
		}
	}

	immediate = {
		owner = {
			add_modifier = {
				modifier = in_paradise
				days = 3600
			}
		}
	}
	option = {
		name = distar.1014.a
		tooltip = {
			owner = {
				add_modifier = {
					modifier = in_paradise
					days = 3600
				}
			}
		}
	}
	option = {
		name = distar.1014.b
		tooltip = {
			owner = {
				add_modifier = {
					modifier = in_paradise
					days = 3600
				}
			}
		}
	}
}

##### STAR LIFTING ######
ship_event = {
	id = distar.1020
	title = "distar.1020.name"
	desc = "distar.1020.desc"
	picture = GFX_evt_star_pulsar
	show_sound = event_laboratory_sound
	location = FROM
	trackable = yes
	
	is_triggered_only = yes

	immediate = {
		Owner = {
			country_event = { id = story.5 days = 30 }
			set_country_flag = star_lifting
		}
		from = { save_event_target_as = star_lifting_star }
		leader = {
			save_event_target_as = star_lifting_leader
		}
		save_event_target_as = star_lifting_ship
	}

	option = {
		name = distar.1020.a
		from = {
			enable_special_project = {
				name = "STAR_LIFTING"
				location = from
				owner = root.owner
			}
			hidden_effect = {
				set_planet_flag = star_lifting_star@root.owner
			}
		}
	}

	option = {
		name = distar.1020.c
		trigger = {
			owner = {
				OR = {
					NOT = { has_technology = tech_lasers_1 }
					NOT = { has_technology = tech_lasers_2 }
					NOT = { has_technology = tech_lasers_3 }
					NOT = { has_technology = tech_lasers_4 }
					NOT = { has_technology = tech_lasers_5 }
				}
			}
		}
		From = {
			enable_special_project = {
				name = "STAR_LIFTING_WEAPONS"
				location = from
				owner = root.owner
			}
		}
	}

	option = {
		name = distar.1020.b
	}
}
# Followup Platform
country_event = {
	id = distar.1021
	title = "distar.1021.name"
	desc = "distar.1021.desc"
	picture = GFX_evt_star_pulsar
	show_sound = event_laboratory_sound
	location = fromfrom
	
	is_triggered_only = yes

	immediate = {
		event_target:broken_star_lifting_platform = {
			destroy_ambient_object = this
		}
		fromfrom = {
			create_ambient_object = {
				type = star_lifting_platform
			}
			last_created_ambient_object = {
				set_location = {
					target = prev
					distance = 20
				}
			}
			clear_deposits = yes
		}
	}

	option = {
		fromfrom = {
			add_deposit = d_energy_6
		}
		name = distar.1021.a
	}

	option = {
		trigger = {
			NOT = {
				is_species_class = MOL
			}
		}
		fromfrom = {
 			add_deposit = d_energy_6
		}
		name = distar.1021.b
	}
}

# Followup Weapons
country_event = {
	id = distar.1022
	title = "distar.1022.name"
	desc = {
		text = "distar.1022.desc.a"
		trigger = {
			OR = {
				NOT = { has_technology = tech_lasers_1 }
				NOT = { has_technology = tech_lasers_2 }
				NOT = { has_technology = tech_lasers_3 }
				NOT = { has_technology = tech_lasers_4 }
				NOT = { has_technology = tech_lasers_5 }
			}
		}
	}
	desc = {
		text = "distar.1022.desc.b"
		trigger = {
			AND = {
				has_technology = tech_lasers_1
				has_technology = tech_lasers_2
				has_technology = tech_lasers_3
				has_technology = tech_lasers_4
				has_technology = tech_lasers_5
			}
		}
	}
	picture = GFX_evt_engineering_research
	show_sound = event_laboratory_sound
	location = fromfrom

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				AND = {
					has_technology = tech_lasers_1
					has_technology = tech_lasers_2
					has_technology = tech_lasers_3
					has_technology = tech_lasers_4
					has_technology = tech_lasers_5
				}
			}
			event_target:broken_star_lifting_platform = {
				destroy_ambient_object = this
			}
		}
	}

	option = {
		name = distar.1022.a
		trigger = {
			OR = {
				NOT = { has_technology = tech_lasers_1 }
				NOT = { has_technology = tech_lasers_2 }
				NOT = { has_technology = tech_lasers_3 }
				NOT = { has_technology = tech_lasers_4 }
				NOT = { has_technology = tech_lasers_5 }
			}
		}
		if = {
			limit = {
				NOT = {
					has_technology = tech_lasers_1
				}
			}
			add_research_option = tech_lasers_1
			add_tech_progress = {
				tech = tech_lasers_1
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_lasers_1
				NOT = { has_technology = tech_lasers_2 }
			}
			add_research_option = tech_lasers_2
			add_tech_progress = {
				tech = tech_lasers_2
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_lasers_2
				NOT = { has_technology = tech_lasers_3 }
			}
			add_research_option = tech_lasers_3
			add_tech_progress = {
				tech = tech_lasers_3
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_lasers_3
				NOT = { has_technology = tech_lasers_4 }
			}
			add_research_option = tech_lasers_4
			add_tech_progress = {
				tech = tech_lasers_4
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_lasers_4
				NOT = { has_technology = tech_lasers_5 }
			}
			add_research_option = tech_lasers_5
			add_tech_progress = {
				tech = tech_lasers_5
				progress = 0.2
			}
		}
	}

	option = {
		name = distar.1022.b
		trigger = {
			AND = {
				has_technology = tech_lasers_1
				has_technology = tech_lasers_2
				has_technology = tech_lasers_3
				has_technology = tech_lasers_4
				has_technology = tech_lasers_5
			}
		}
		event_target:star_lifting_star = {
			add_deposit = d_physics_2
		}
	}
	option = {
		name = distar.1022.c
		trigger = {
			has_technology = tech_lasers_1
			has_technology = tech_lasers_2
			has_technology = tech_lasers_3
			has_technology = tech_lasers_4
			has_technology = tech_lasers_5
			NOT = {
				is_species_class = MOL
			}
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		event_target:star_lifting_star = {
			add_deposit = d_physics_2
		}
	}
}

##### ABANDONED OBSERVATION OUTPOST ######
ship_event = {
	id = distar.1030
	title = "distar.1030.name"
	desc = "distar.1030.desc"
	picture = GFX_evt_city_ruins
	show_sound = event_alien_signal
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = {
			country_event = { id = story.5 days = 30 }
		}
	}

	option = {
		name = distar.1030.a
		From = {
			enable_special_project = {
				name ="BIG_RIP"
				location = from
				owner = root.owner
			}
		}
	}
	option = {
		name = distar.1030.b
		owner = {
			add_resource = { influence = 50 }
		}
	}
}

country_event = {
	id = distar.1031
	title = "distar.1031.name"
	desc = "distar.1031.desc"
	picture = GFX_evt_city_ruins
	show_sound = event_ghost_town
	location = FROMFROM
	
	is_triggered_only = yes

	option = {
		name = distar.1031.a
		exclusive_trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		hidden_effect = {
			set_country_flag = lcluster_clue_desc_2
			pop_lcluster_event = yes
		}

		add_monthly_resource_mult = {
			resource = society_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
	}

	option = {
		name = distar.1031.b
		hidden_effect = { 
			set_country_flag = lcluster_clue_desc_2
			pop_lcluster_event = yes
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
	}
}

##### Bunker-Bot ######
ship_event = {
	id = distar.1040
	title = "distar.1040.name"
	desc = "distar.1040.desc"
	picture = GFX_evt_sapient_AI
	show_sound = event_alien_signal
	location = FROM
	
	is_triggered_only = yes

	immediate = { 
		owner = {
			country_event = { id = story.5 days = 30 }
		}
	}

	option = {
		name = distar.1040.a
		custom_tooltip = distar.1040.a.tooltip
		hidden_effect = { 
			owner = { pop_lcluster_event = yes }
		}
		owner = {
			add_resource = { alloys = 100 }
			add_resource = { rare_crystals = 50 }
			add_resource = { volatile_motes = 50 }
		}
	}
	option = {
		name = distar.1040.b
		custom_tooltip = distar.1040.b.tooltip
		hidden_effect = {
			owner = { pop_lcluster_event = yes }
		}
		owner = {
			add_modifier = {
				modifier = mega_computer
				days = 3600
			}
		}
	}
	option = {
		name = distar.1040.c
		custom_tooltip = distar.1040.c.tooltip
		hidden_effect = {
			owner = { pop_lcluster_event = yes }
		}
		owner = {
			add_resource = { influence = 200 }
		}
	}
}

##### ATOMIC CLOCK ######
ship_event = {
	id = distar.1045
	title = "distar.1045.name"
	desc = "distar.1045.desc"
	picture = GFX_evt_clocks
	show_sound = event_mystic_reveal
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = {
			country_event = { id = story.5 days = 30 }
			set_country_flag = atomic_clock
		}
	}

	option = {
		name = distar.1045.a
		custom_tooltip = distar.1045.a.tooltip
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
			hidden_effect = {
				country_event = { id = distar.310 days = 15333 }
			}
		}
	}
	option = {
		name = distar.1045.b
		custom_tooltip = distar.1045.b.tooltip
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
	}
}

###### EAT OR BE EATEN ######
ship_event = {
	id = distar.1050
	title = "distar.1050.name"
	desc = "distar.1050.desc"
	picture = GFX_evt_space_debris
	show_sound = event_alien_nature
	location = FROM
	
	is_triggered_only = yes

	trigger = {
		any_country = {
			is_country_type = default
			NOT = {
				is_same_value = root.owner
			}
		}
	}
	immediate = {
		owner = {
			country_event = { id = story.5 days = 30 }
			set_country_flag = eat_or_be_eaten
		}
		random_playable_country = {
			limit = {
				NOR = {
					is_same_value = root.owner
					has_authority = auth_machine_intelligence
					is_synthetic_empire = yes
					owner_species = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
			}
			establish_communications_no_message = root.owner
			save_event_target_as = delicious_aliens
			root.owner = { set_country_flag = establishing_delicious_comms }
		}
	}

	option = {
		name = distar.1050.a
		hidden_effect = {
			if = {
				limit = {
					root.owner = { has_country_flag = establishing_delicious_comms }
				}
				custom_tooltip = distar.1050.a.tooltip
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
	}
}
##### THE CUBE ######
ship_event = {
	id = distar.1055
	title = "distar.1055.name"
	desc = "distar.1055.desc"
	picture = GFX_evt_space_debris
	show_sound = event_mystic_reveal
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		leader = {
			save_event_target_as = cube_science_officer
		}
		owner = {
			country_event = { id = story.5 days = 30 }
		}
	}

	option = {
		name = distar.1055.a
		enable_special_project = {
			name = "THE_CUBE"
			location = from
			owner = root.owner
		}
	}
	option = {
		name = distar.1055.b
	}
}

country_event = {
	id = distar.1056
	title = "distar.1056.name"
	desc = "distar.1056.desc"
	picture = GFX_evt_space_debris
	show_sound = event_mystic_reveal
	location = FROMFROM
	
	is_triggered_only = yes

	trigger = {

	}

	immediate = {
		from.leader = {
			save_event_target_as = cube_science_officer
			add_trait = leader_trait_maniacal
		}
	}
	option = {
		name = distar.1056.a
		custom_tooltip = distar.1056.a.tooltip
		tooltip = {
			from.leader = {
			add_trait = leader_trait_maniacal
		}
		}
	}
}

##### HONEYMOONERS ######
ship_event = {
	id = distar.1060
	title = "distar.1060.name"
	desc = "distar.1060.desc"
	picture = GFX_evt_alien_nature
	show_sound = event_alien_nature
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = {
			country_event = { id = story.5 days = 30 }
		}
	}

	option = {
		name = distar.1060.a
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
				}
			}
		}
		owner = {
			add_modifier = {
				modifier = a_hitchikers_guide_to_the_galaxy
				days = 3600
			}
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
	option = {
		name = distar.1060.b
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		owner = {
			add_modifier = {
				modifier = littering_loitering_liability
				days = 3600
			}
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}			
	}
	option = {
		name = distar.1060.c
		trigger = {
			hidden_trigger = {
				owner = {
					OR = {
						has_ethic = ethic_xenophile
						has_ethic = ethic_fanatic_xenophile
						has_ethic = ethic_xenophobe
						has_ethic = ethic_fanatic_xenophobe
					}
				}
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
	option = {
		name = distar.1060.d
		trigger = {
			owner = {
				NOR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
	option = {
		name = FASCINATING
		trigger = {
			owner = {
				NOR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
}

##### HOLOGRAM ######
ship_event = {
	id = distar.1065
	title = "distar.1065.name"
	desc = "distar.1065.desc"
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_desert
			}
		}
		picture = GFX_evt_desert
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_tropical
			}
		}
		picture = GFX_evt_tropical
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_arid
			}
		}
		picture = GFX_evt_arid
	}
	picture = {
		trigger = {
			from = {
				OR = {
					is_planet_class = pc_continental
					is_planet_class = pc_gaia
					is_planet_class = pc_alpine
					is_planet_class = pc_savannah
				}
			}
		}
		picture = GFX_evt_continental
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_ocean
			}
		}
		picture = GFX_evt_ocean
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_tundra
			}
		}
		picture = GFX_evt_tundra
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_arctic	
			}
		}
		picture = GFX_evt_arctic
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		picture = GFX_evt_gas_giant
	}
	picture = {
		trigger = {
			from = {
				NOR = {
					is_planet_class = pc_arctic	
					is_planet_class = pc_desert
					is_planet_class = pc_tropical
					is_planet_class = pc_arid
					is_planet_class = pc_continental
					is_planet_class = pc_gaia
					is_planet_class = pc_alpine
					is_planet_class = pc_savannah
					is_planet_class = pc_ocean
					is_planet_class = pc_tundra
					is_planet_class = pc_arctic
				}
			}
		}
		picture = GFX_evt_ship_in_orbit_2
	}
	show_sound = event_mystic_reveal
	location = From
	
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = hologram
			}
		}
	}

	immediate = {
		owner = {
			country_event = { id = story.5 days = 30 }
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
		From = {
			remove_planet = yes
		}
	}

	option = {
		name = distar.1065.a
		tooltip = {
			owner = {
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier1researchreward
					min = @tier1researchmin
					max = @tier1researchmax
				}
			}
		}
	}
}

##### STAR CRAZY ######
ship_event = {
	id = distar.1070
	title = "distar.1070.name"
	desc = "distar.1070.desc"
	picture = GFX_evt_ship_in_orbit_2
	show_sound = event_mystic_reveal
	location = From
	
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
	}
	immediate = {
		leader = {
			save_global_event_target_as = crazy_science_officer
		}
		owner = {
			set_country_flag = star_crazy
		}
		save_event_target_as = crazy_scientist_ship
	}
	option = {
		name = distar.1070.a
		hidden_effect = {
			random_system = {
				limit = {
					NOR = {
						exists = space_owner
						has_star_flag = hostile_system
					}
					distance = {
						source = From
						min_distance >= 10
						max_distance <= 100
					}
					star = {
						NOR = {
							has_deposit_for = shipclass_research_station
							has_deposit_for = shipclass_mining_station
						}
					}
				}
				save_event_target_as = anomalous_star_system
				star = {
					save_global_event_target_as = anomalous_star 
				}
			}
		}
		enable_special_project = {
			name = "STAR_CRAZY"
			location = event_target:anomalous_star
			owner = root.owner
		}
	}
	option = {
		name = distar.1070.b
		owner = { add_resource = { influence = 25 } }
	}
}

country_event = {
	id = distar.1072
	title = "distar.1072.name"
	desc = "distar.1072.desc"
	picture = GFX_evt_ship_in_orbit_2

	show_sound = event_alien_nature
	location = From.From
	
	is_triggered_only = yes

	immediate = {
		event_target:anomalous_star = {
			surveyed = {
 				set_surveyed = yes
   				surveyor = root
 			}
		}
	}

	option = {
		name = distar.1072.a
		from.leader = {
			add_trait = leader_trait_meticulous
			add_experience = 200
		}
		event_target:anomalous_star = {
			add_deposit = d_energy_8
			surveyed = {
 				set_surveyed = yes
   				surveyor = root
 			}
		}
	}
}

country_event = {
	id = distar.1073
	title = "distar.1073.name"
	desc = "distar.1073.desc"
	picture = GFX_evt_surreal_visions
	show_sound = event_ghost_town
	location = From.From
	
	is_triggered_only = yes
	
	immediate = {
		event_target:anomalous_star = {
			surveyed = {
 				set_surveyed = yes
   				surveyor = root
 			}
		}
	}

	option = {
		name = distar.1073.a
		custom_tooltip = distar.1070.a.tooltip
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier1researchreward
			min = @tier1researchmin
			max = @tier1researchmax
		}
		
		hidden_effect = {
			if = {
				limit = {
					exists = event_target:crazy_science_officer
				}
				event_target:crazy_science_officer = {
					kill_leader = {
						show_notification = no
					}
				}
			}
		}
	}
}

##### AZIZIANS #####
ship_event = {
	id = distar.1080
	title = "distar.1080.name"
	desc = {
		trigger = { owner = { has_technology = tech_cloning } }
		text = distar.1080.desc.b
	}
	desc = {
		trigger = { NOT = { owner = { has_technology = tech_cloning } } }
		text = distar.1080.desc.c
	}
	picture = GFX_evt_space_debris
	show_sound = event_mystic_reveal
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = {
			country_event = { id = story.5 days = 30 }
		}
	}

	option = {
		trigger = {
			owner = {
				has_technology = tech_cloning
			}
		}
		name = distar.1080.a
		enable_special_project = {
			name = "ICE_ALIEN"
			location = owner.capital_scope
			owner = root.owner
		}
	}
	option = {
		name = distar.1080.b
		owner = {
			add_resource = { influence = 50 }
		}
	}
	option = {
		name = distar.1080.c
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
	option = {
		name = distar.1080.d
		trigger = { NOT = { owner = { has_technology = tech_cloning } } }
		hidden_effect = { 
			owner = {
				set_country_flag = stored_azizian_dna
			}
		}
	}
}

country_event = {	# RETILE
	id = distar.1081
	title = "distar.1081.name"
	desc = "distar.1081.desc"
	picture = GFX_evt_genetic_modification
	show_sound = event_mystic_reveal
	location = FROM

	is_triggered_only = yes
# spawns pops
	option = {
		name = distar.1081.a
		#trigger = {
		#	any_owned_planet = {
		#		free_housing > 0
		#	}
		#}
		random_owned_planet = {
			weights = {
				base = 1
				modifier = { 
					add = 5
					free_housing > 0
				}
				modifier = { 
					add = 10
					free_housing > 3
				}
			}
			create_species = {
				name = "Azizians"
				class = MOL
				portrait = mol8
				traits = {
					ideal_planet_class = "pc_frozen"
					trait = trait_presapient_proles
				}
				homeworld = this
				effect = {
					set_species_flag = azizans_@root
					set_global_flag = spawned_azizans_@root
					save_event_target_as = azizians_species
				}
			}
			create_pop = {
				species = event_target:azizians_species
			}
			hidden_effect = { set_planet_flag = azizian_pops_planet }
		}
	}
# Gives pets
	option = {
		name = distar.1081.b
		random_owned_planet = {
			add_deposit = d_alien_pets_deposit
			add_deposit = d_alien_pets_deposit
			hidden_effect = { set_planet_flag = azizian_pet_planet }
		}
	}
# Adds Azizian army
	option = {
		name = distar.1081.c
		custom_tooltip = distar.1080.c.tooltip
		random_owned_planet = {
			set_planet_flag = titanic_azizian_can_build
		}
		set_country_flag = titanic_azizian_soldiers
	}
# Get rid of them
	option = {
		name = distar.1081.d
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier1researchreward
			min = @tier1researchmin
			max = @tier1researchmax
		}
	}
}

# Followup for pops and pets
event = {
	id = distar.1082
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_playable_country = {
			any_owned_planet = {
				OR = {
					AND = {
						has_planet_flag = azizian_pet_planet
						has_deposit = d_alien_pets_deposit
						NOT = { has_planet_flag = azizians_escape_zoo }
					}
					AND = {
						has_planet_flag = azizian_pops_planet
						any_owned_pop = {
							species = {
								has_species_flag = azizans_@root
							}
						}
						NOT = { has_planet_flag = azizians_burrow }
					}
				}
			}
		}
	}
	immediate = {
	# pets
		if = {
			limit = {
				any_playable_country = {
					any_owned_planet = {
						has_planet_flag = azizian_pet_planet
						has_deposit = d_alien_pets_deposit
						NOT = { has_planet_flag = azizians_escape_zoo }
					}
				}
			}
			random_list = {
				20 = {
					random_planet = {
						limit = {
							has_owner = yes
							has_planet_flag = azizian_pet_planet
							has_deposit = d_alien_pets_deposit
						}
						planet_event = { id = distar.1083 }
						set_planet_flag = azizians_escape_zoo
					}
				}
				80 = {}
			}
		}
		# pops
		else_if = {
			limit = {
				any_playable_country = {
					any_owned_planet = {
						has_planet_flag = azizian_pops_planet
						any_owned_pop = {
							species = {
								has_species_flag = azizans_@root
							}
						}
					}
				}
			}
			random_list = {
				20 = {
					random_planet = {
						limit = {
							has_owner = yes
							has_planet_flag = azizian_pops_planet
							any_owned_pop = {
								species = {
									has_species_flag = azizans_@root
								}
							}
						}
						planet_event = { id = distar.1084 }
						set_planet_flag = azizians_burrow
					}
				}
				80 = {}
			}
		}
	}
}
# Azizians escape from Zoo
planet_event = {
	id = distar.1083
	title = "distar.1083.name"
	desc = "distar.1083.desc"
	picture = GFX_evt_interior_battle
	show_sound = event_mystic_reveal
	location = Root

	is_triggered_only = yes

	trigger = {
		has_owner = yes
		has_planet_flag = azizian_pet_planet
		has_deposit = d_alien_pets_deposit
	}
	immediate = {
		add_planet_devastation = 10
		add_modifier = { modifier = dangerous_wildlife days = -1 }
	}
	option = {
		name = distar.1083.a
		tooltip = {
			add_planet_devastation = 10
			add_modifier = { modifier = dangerous_wildlife days = -1 }
		}
	}
}

# Azizians change
planet_event = {
	id = distar.1084
	title = "distar.1084.name"
	desc = "distar.1084.desc"
	picture = GFX_evt_genetic_modification
	show_sound = event_mystic_reveal
	location = Root

	is_triggered_only = yes

	trigger = {
		has_owner = yes
		has_planet_flag = azizian_pops_planet
		any_owned_pop = {
			species = { has_species_flag = azizans_@root.owner }
 			is_being_purged = no
		}
		owner = {
			NOT = { has_country_flag = azizians_changed }
		}
	}

	immediate = {
		every_owned_pop = {
			limit = {
				species = { has_species_flag = azizans_@root.owner }
			}
			modify_species = {
				species = this
				remove_trait = trait_presapient_proles
				ideal_planet_class = "pc_frozen"
				add_trait = trait_agrarian
				add_trait = trait_very_strong
				add_traits_at_start_of_list = yes
			}
		}
		owner = {
			set_country_flag = azizians_changed
		}
	}
	option = {
		name = distar.1083.b
	}
}
# On researching cloning
country_event = {
	id = distar.1085
	title = "distar.1085.name"
	desc = "distar.1085.desc"
	picture = GFX_evt_society_research

	is_triggered_only = yes

	trigger = {
		has_country_flag = stored_azizian_dna
		last_increased_tech = tech_cloning
		NOT = { has_country_flag = offered_to_clone_azizians }
	}

	option = {
		name = distar.1085.a
		enable_special_project = {
			name = "ICE_ALIEN"
			location = root.capital_scope
			owner = root
		}
	}

	option = {
		name = distar.1085.b
		add_resource = { influence = 50 }
	}
}


##### Harvesters #####
ship_event = {
	id = distar.1090
	title = "distar.1090.name"
	desc = "distar.1090.desc"
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_tropical
			}
		}
		picture = GFX_evt_tropical
	}
	picture = {
		trigger = {
			from = {
				is_planet_class = pc_continental
			}
		}
		picture = GFX_evt_continental
	}

	picture = {
		trigger = {
			from = {
				NOR = {
					is_planet_class = pc_continental
					is_planet_class = pc_tropical
				}
			}
		}
		picture = GFX_evt_animal_wildlife
	}

	show_sound = event_construction
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.5 days = 30 } } 
		From = {
			add_deposit = d_harvester_fields
			add_modifier = { modifier = ancient_harvesters days = -1 }
		}
	}

	option = {
		name = distar.1090.a
	}

	option = {
		name = distar.1090.b
	}
}

##### LOCUSTS #####
ship_event = {
	id = distar.1095
	title = "distar.1095.name"
	desc = "distar.1095.desc"
	picture = GFX_evt_warm_barren
	show_sound = event_ghost_town
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.1 days = 30 } } 
		From = {
			change_pc = pc_barren
		}
	}

	option = {
		name = distar.1095.a
	}
}

##### SHATTERED WORLD #####
ship_event = {
	id = distar.2000
	title = "distar.2000.name"
	desc = "distar.2000.desc"
	picture = GFX_evt_space_debris
	show_sound = event_ghost_town
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.5 days = 30 } } 
	}

	option = {
		name = FASCINATING
		From = {
			add_deposit = d_minerals_3
		}
	}
}

##### WEAPON TESTING #####
ship_event = {
	id = distar.2005
	title = "distar.2005.name"
	desc = "distar.2005.desc"
	picture = GFX_evt_toxic
	show_sound = event_ghost_town
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.5 days = 30 } } 
		leader = {
			save_event_target_as = science_leader
		}
	}

	option = {
		name = distar.2005.a
		owner = {
			enable_special_project = {
				name = "WEAPONS_TESTING"
				location = from
				owner = root.owner
			}
		}
	}
	option = {
		name = distar.2005.b
	}
}
# Followup
country_event = {
	id = distar.2006
	title = "distar.2006.name"
	desc = {
		text = "distar.2006.desc.a"
		trigger = {
			OR = {
				NOT = { has_technology = tech_ship_armor_1 }
				NOT = { has_technology = tech_ship_armor_2 }
				NOT = { has_technology = tech_ship_armor_3 }
				NOT = { has_technology = tech_ship_armor_4 }
				NOT = { has_technology = tech_ship_armor_5 }
				NOT = { has_technology = tech_lasers_1 }
				NOT = { has_technology = tech_lasers_2 }
				NOT = { has_technology = tech_lasers_3 }
				NOT = { has_technology = tech_lasers_4 }
				NOT = { has_technology = tech_lasers_5 }
			}
		}
	}
	desc = {
		text = "distar.2006.desc.b"
		trigger = {
			AND = {
				has_technology = tech_ship_armor_1
				has_technology = tech_ship_armor_2
				has_technology = tech_ship_armor_3
				has_technology = tech_ship_armor_4
				has_technology = tech_ship_armor_5
				has_technology = tech_lasers_1
				has_technology = tech_lasers_2
				has_technology = tech_lasers_3
				has_technology = tech_lasers_4
				has_technology = tech_lasers_5
			}
		}
	}
	picture = GFX_evt_engineering_research
	show_sound = event_mystic_reveal
	location = fromfromfrom

	is_triggered_only = yes

	option = {
		name = distar.2006.a
		trigger = {
			OR = {
				NOT = { has_technology = tech_lasers_1 }
				NOT = { has_technology = tech_lasers_2 }
				NOT = { has_technology = tech_lasers_3 }
				NOT = { has_technology = tech_lasers_4 }
				NOT = { has_technology = tech_lasers_5 }
			}
		}
		if = {
			limit = {
				NOT = {
					has_technology = tech_lasers_1
				}
			}
			add_research_option = tech_lasers_1
			add_tech_progress = {
				tech = tech_lasers_1
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_lasers_1
				NOT = { has_technology = tech_lasers_2 }
			}
			add_research_option = tech_lasers_2
			add_tech_progress = {
				tech = tech_lasers_2
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_lasers_2
				NOT = { has_technology = tech_lasers_3 }
			}
			add_research_option = tech_lasers_3
			add_tech_progress = {
				tech = tech_lasers_3
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_lasers_3
				NOT = { has_technology = tech_lasers_4 }
			}
			add_research_option = tech_lasers_4
			add_tech_progress = {
				tech = tech_lasers_4
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_lasers_4
				NOT = { has_technology = tech_lasers_5 }
			}
			add_research_option = tech_lasers_5
			add_tech_progress = {
				tech = tech_lasers_5
				progress = 0.2
			}
		}
	}

	option = {
		name = distar.2006.b
		trigger = {
			OR = {
				NOT = { has_technology = tech_ship_armor_1 }
				NOT = { has_technology = tech_ship_armor_2 }
				NOT = { has_technology = tech_ship_armor_3 }
				NOT = { has_technology = tech_ship_armor_4 }
				NOT = { has_technology = tech_ship_armor_5 }
			}
		}
		if = {
			limit = {
				NOT = {
					has_technology = tech_ship_armor_1
				}
			}
			add_research_option = tech_ship_armor_1
			add_tech_progress = {
				tech = tech_ship_armor_1
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_ship_armor_1
				NOT = { has_technology = tech_ship_armor_2 }
			}
			add_research_option = tech_ship_armor_2
			add_tech_progress = {
				tech = tech_ship_armor_2
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_ship_armor_2
				NOT = { has_technology = tech_ship_armor_3 }
			}
			add_research_option = tech_ship_armor_3
			add_tech_progress = {
				tech = tech_ship_armor_3
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_ship_armor_3
				NOT = { has_technology = tech_ship_armor_4 }
			}
			add_research_option = tech_ship_armor_4
			add_tech_progress = {
				tech = tech_ship_armor_4
				progress = 0.2
			}
		}
		else_if = {
			limit = {
				has_technology = tech_ship_armor_4
				NOT = { has_technology = tech_ship_armor_5 }
			}
			add_research_option = tech_ship_armor_5
			add_tech_progress = {
				tech = tech_ship_armor_5
				progress = 0.2
			}
		}
	}

	option = {
		name = distar.2006.c
		trigger = {
			AND = {
				has_technology = tech_lasers_1
				has_technology = tech_lasers_2
				has_technology = tech_lasers_3
				has_technology = tech_lasers_4
				has_technology = tech_lasers_5
				has_technology = tech_shields_1
				has_technology = tech_shields_2
				has_technology = tech_shields_3
				has_technology = tech_shields_4
				has_technology = tech_shields_5
			}
		}
		add_resource = {
			influence = 50
			unity = 50
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier1researchreward
			min = @tier1researchmin
			max = @tier1researchmax
		}
	}
}

##### WETWARE COMPUTER #####
ship_event = {
	id = distar.2010
	title = "distar.2010.name"
	desc = "distar.2010.desc"
	picture = GFX_evt_ocean
	show_sound = event_alien_nature
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.1 days = 30 } }
	}

	option = {
		name = FASCINATING
		FROM = {
			add_deposit = d_wetware_computer
 		}
	}
}

##### PRIMORDIAL SOUP #####
ship_event = {
	id = distar.2015
	title = "distar.2015.name"
	desc = "distar.2015.desc"
	picture = GFX_evt_microscopic_life
	show_sound = event_alien_nature
	location = from
	
	is_triggered_only = yes

	option = {
		name = FASCINATING
		from = {
			add_deposit = d_society_3
 		}
	}
}

##### Single-Minded #####
ship_event = {
	id = distar.2020
	title = "distar.2020.name"
	desc = "distar.2020.desc"
	picture = GFX_evt_aggressive_flora
	show_sound = event_alien_nature
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.1 days = 30 } } 
	}

	option = {
		name = FASCINATING
		from = {
			add_deposit = d_dangerous_wildlife_blocker
 			add_deposit = d_savage_wildlands
			add_modifier = {
				modifier = dangerous_wildlife
				days = -1
			}	
 		}
	}
}

##### Artificial Moon #####
ship_event = {
	id = distar.2025
	title = "distar.2025.name"
	desc = "distar.2025.desc"
	picture = GFX_evt_ship_in_orbit
	show_sound = event_administrative_work
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = { country_event = { id = story.5 days = 30 } }
		from = {
			clear_deposits = yes
			solar_system = {
				random_system_planet = {
					limit = {
						has_moon = yes
						any_moon = {
							is_same_value = from
						}
					}
					save_event_target_as = artificial_moon_planet
				}
			}
		}
	}
	option = {
		name = FASCINATING
		from = {
			add_deposit = d_minerals_3
		}
	}
}

###### Time-Loop World ######
ship_event = {
	id = distar.2030
	title = "distar.2030.name"
	desc = "distar.2030.desc"
	picture = GFX_evt_metropolis
	show_sound = event_mystic_reveal
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		owner = {
			set_country_flag = researched_time_loop_anomaly
		}
	}

	option = {
		name = distar.2030.a
		if = {
			limit = {
				owner = {
					OR = { 
						has_ethic = ethic_materialist 
						has_ethic = ethic_fanatic_materialist
					}
				}
			}
			#custom_tooltip = distar.2030.a.tooltip.mat
		}
		else_if = {
			limit = {
				owner = {
					NOR = {
						has_ethic = ethic_materialist 
						has_ethic = ethic_fanatic_materialist
					}
				}
			}
			custom_tooltip = distar.2030.a.tooltip
		}
		enable_special_project = {
			name = MEND_SHIELD
			location = from
			owner = root.owner
		}
	}
	option = {
		name = distar.2030.b
		enable_special_project = {
			name = STOP_TIME_LOOP
			location = from
			owner = root.owner
		}
	}
	option = {
		name = distar.2030.c
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
		hidden_effect = {
			owner = {
				country_event = {
					id = distar.2038 days = 1800 random = 3600
				}
			}
		}
	}
}

# Shield Repaired
country_event = {
	id = distar.2031
	title = "distar.2031.name"
	desc = "distar.2031.desc"
	picture = GFX_evt_shielded_planet
	show_sound = event_mystic_reveal
	location = FROM
	
	is_triggered_only = yes

	immediate = {
		event_target:time_loop_world = {
			clear_deposits = yes
			set_planet_flag = repaired_time_loop_shield
			planet_event = { id = distar.2034 days = 3600 random = 7200 }
		}
	}
	option = {
		name = EXCELLENT
		event_target:time_loop_world = {
			add_deposit = d_physics_8
			add_deposit = d_society_4
		}
	}
}
## Lizards dead from overheating
planet_event = {
	id = distar.2034
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_planet_flag = time_loop_lizards_dead
		clear_deposits = yes
		if = {
			limit = {
				solar_system = {
					exists = space_owner
				}
			}
			solar_system = {
				owner = {
					country_event = { id = distar.2035 }
				}
			}
		}
	}
}

country_event = {
	id = distar.2035
	title = "distar.2035.name"
	desc = "distar.2035.desc"
	picture = GFX_evt_shielded_planet
	show_sound = event_mystic_reveal
	location = event_target:time_loop_world

	is_triggered_only = yes
	option = {
		name = distar.2035.a
	}
}
# When players who didn't have the anomaly claim ownership of timeloop system with repaired shield
ship_event = {
	id = distar.2036
	title = "distar.2036.name"
	desc = "distar.2036.desc"
	picture = GFX_evt_shielded_planet
	show_sound = event_mystic_reveal
	location = event_target:time_loop_world

	is_triggered_only = yes

	trigger = {
		exists = event_target:time_loop_world
		exists = solar_system
		solar_system = {
			any_system_planet = {
				is_same_value = event_target:time_loop_world
			}
		}
		event_target:time_loop_world = {
			has_planet_flag = repaired_time_loop_shield
			NOT = {
				has_planet_flag = time_loop_lizards_dead
			}
		}
		owner = {
			NOR = {
				has_country_flag = researched_time_loop_anomaly
				has_country_flag = discovered_time_loop_world
			} 
		}
	}

	immediate = {
		owner = {
			set_country_flag = discovered_time_loop_world
		}
	}
	option = {
		name = FASCINATING
	}
}

### Interrupted Time Loop
# They Die
country_event = {
	id = distar.2032
	title = "distar.2032.name"
	desc = "distar.2032.desc"
	picture = GFX_evt_large_explosion
	show_sound = event_super_explosion
	location = event_target:time_loop_world
	
	is_triggered_only = yes

	immediate = {
		event_target:time_loop_world = {
			change_pc = pc_nuked
		}
	}

	option = {
		name = distar.2032.a
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
	}
}

# They are freed
country_event = {	# RETILE
	id = distar.2033
	title = "distar.2033.name"
	desc = "distar.2033.desc"
	picture = GFX_evt_metropolis
	show_sound = event_mystic_reveal
	location = event_target:time_loop_world
	
	is_triggered_only = yes

	immediate = {
		event_target:time_loop_world = {
			change_pc = pc_desert
			set_name = "NAME_Gish"
			clear_planet_modifiers = yes
			if = {
				limit = {
					root = { NOT = { species_portrait = rep16 } }
				}
				log = "limit passed"
				create_species = {
					name = "NAME_Prikki"
					plural = "NAME_Prikki"
					class = REP
					portrait = rep16
					namelist = REP4
					traits = {
						ideal_planet_class = pc_desert
						trait = trait_industrious
						trait = trait_solitary
						trait = trait_decadent
					}
					homeworld = this
					effect = {
						save_event_target_as = prikki_species
					}
				}
			}
			else_if = {
				limit = {
					root = { species_portrait = rep16 }
				}
				create_species = {
					name = "NAME_Prikki"
					plural = "NAME_Prikki"
					class = REP
					portrait = rep12
					namelist = REP4
					traits = {
						ideal_planet_class = pc_desert
						trait = trait_industrious
						trait = trait_solitary
						trait = trait_decadent
					}
					homeworld = this
					effect = {
						save_event_target_as = prikki_species
					}
				}
			}
			create_country = {
				name = "NAME_Prikkiki-Ti"
				authority = random
				civics = {
					civic = civic_fanatic_purifiers
					civic = civic_cutthroat_politics
				}
				species = last_created
				ethos = {
					ethic = ethic_fanatic_xenophobe
					ethic = ethic_militarist
				}
				flag = {
					icon = {
						category = "domination"
						file = "domination_1.dds"
					}
					background= {
						category = backgrounds
						file = "v.dds"
					}
					colors = {
						"teal"
						"orange"
						"null"
						"null"
					}
				}
				type = default
				effect = {
					save_global_event_target_as = time_loop_country
					species = {
						save_global_event_target_as = time_loop_species
					}
					establish_communications_no_message = root
					
					##Copy technology
					IF = {
						LIMIT = {
							any_neighbor_country = {
								exists = this
								is_country_type = default
							}
						}
						random_neighbor_country = {
							limit = { is_country_type = default }
							save_event_target_as = tech_country
						}
						copy_techs_from = {
							target = event_target:tech_country
							except = {
								# Horizon Signal
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
							}
						}
					}
					ELSE_IF = {
						LIMIT = {
							any_country = {
								is_ai = no
							}
						}
						random_country = {
							limit = { is_ai = no }
							save_event_target_as = tech_country
						}
						copy_techs_from = {
							target = event_target:tech_country
							except = {
								# Horizon Signal
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
							}
						}
					}
					ELSE = {
						random_country = {
							limit = { is_country_type = default	}
							save_event_target_as = tech_country
						}
						copy_techs_from = {
							target = event_target:tech_country
							except = {
								# Horizon Signal
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
							}
						}
					}
					##Add some new technologies
					inverted_switch = {
						trigger = has_technology
						tech_starbase_2 = { give_technology = { tech = tech_starbase_2 } }
						tech_starbase_3 = { give_technology = { tech = tech_starbase_3 } }
						tech_starbase_4 = { give_technology = { tech = tech_starbase_4 } }
						tech_starbase_5 = { give_technology = { tech = tech_starbase_5 } }
						tech_power_plant_4 = { give_technology = { tech = tech_power_plant_4 } }
						tech_mining_3 = { give_technology = { tech = tech_mining_3 } }
						tech_power_hub_1 = { give_technology = { tech = tech_power_hub_1 } }
					}
	
					##Add resources
					add_resource = { minerals = 10000 }
					add_resource = { energy = 10000 }
					add_resource = { food = 3000 }
					add_resource = { consumer_goods = 3000 }
					add_resource = { alloys = 7000 }
					add_resource = { influence = 1000 }
					add_resource = { unity = 27000 }

					##Create fleets
					if = {
						limit = {
							has_technology = tech_destroyers
						}
						create_fleet = {
							effect = {
								set_owner = event_target:time_loop_country
								while = {
									count = 8
									create_ship = {
										name = random
										random_existing_design = destroyer
										graphical_culture = "reptilian_01"
									}
								}
								set_location = {
									target = event_target:time_loop_world
									distance = 10
									angle = random
								}			
							}
						}
					}
					if = {
						limit = {
							has_technology = tech_cruisers
						}
						create_fleet = {
							effect = {
								set_owner = event_target:time_loop_country
								while = {
									count = 6
									create_ship = {
										name = random
										random_existing_design = cruiser
										graphical_culture = "reptilian_01"
									}
								}
								set_location = {
									target = event_target:time_loop_world
									distance = 10
									angle = random
								}			
							}
						}
					}
					if = {
						limit = {
							has_technology = tech_battleships
						}
						create_fleet = {
							effect = {
								set_owner = event_target:time_loop_country
								while = {
									count = 2
									create_ship = {
										name = random
										random_existing_design = battleship
										graphical_culture = "reptilian_01"
									}
								}
								set_location = {
									target = event_target:time_loop_world
									distance = 10
									angle = random
								}			
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:time_loop_country
							while = {
								count = 10
								create_ship = {
									name = random
									random_existing_design = corvette
									graphical_culture = "reptilian_01"
								}
							}		
						}
					}
				}
			}
			set_owner = event_target:time_loop_country
			set_capital = yes
			while = {
				count = 17
				create_pop = {
					species = event_target:time_loop_species
				}					
			}
			add_district = district_city
			add_district = district_city
			add_district = district_city
			add_district = district_farming
			add_district = district_mining
			add_district = district_generator
			add_district = district_generator
			add_building = building_system_capital
			add_building = building_research_lab_1
			add_building = building_foundry_1
			add_building = building_factory_1
			while = {
				count = 5
				create_army = {
					name = random
					owner = event_target:time_loop_country
					species = event_target:time_loop_species
					type = defense_army
				}
			}
			solar_system = {
				create_starbase = {
					size = starbase_citadel
					module = shipyard
					owner = event_target:time_loop_country
				}
			}
		}
		establish_communications_no_message = last_created_country
	}

	option = {
		name = distar.2033.a
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
	}

	option = {
		name = distar.2033.b
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
	}
}

#### If shielded planet is left alone

# Lizards break free
country_event = {		# RETILE
	id = distar.2038
	title = "distar.2038.name"
	desc = "distar.2038.desc"
	picture = GFX_evt_metropolis
	show_sound = event_mystic_reveal
	location = event_target:time_loop_world
	
	is_triggered_only = yes

	trigger = {
		event_target:time_loop_world = {
			solar_system = {
				NOT = { exists = space_owner }
			}
		}
	}

	immediate = {
		event_target:time_loop_world = {
			change_pc = pc_desert
			set_name = "NAME_Gish"
			clear_planet_modifiers = yes
			create_species = {
				name = "NAME_Prikki"
				plural = "NAME_Prikki"
				class = REP
				portrait = rep16
				namelist = REP4
				traits = {
					ideal_planet_class = pc_desert
					trait = trait_industrious
					trait = trait_solitary
					trait = trait_decadent
				}
				homeworld = this
			}
			create_country = {
				name = "NAME_Prikkiki-Ti"
				authority = random
				civics = {
					civic = civic_fanatic_purifiers
					civic = civic_cutthroat_politics
				}
				species = last_created
				ethos = {
					ethic = ethic_fanatic_xenophobe
					ethic = ethic_militarist
				}
				flag = {
					icon = {
						category = "domination"
						file = "domination_1.dds"
					}
					background= {
						category = backgrounds
						file = "v.dds"
					}
					colors = {
						"teal"
						"orange"
						"null"
						"null"
					}
				}
				type = default
				day_zero_contact = no
				effect = {
					establish_communications_no_message = root
					save_global_event_target_as = time_loop_country
					species = {
						save_global_event_target_as = time_loop_species
					}
					##Copy technology
					IF = {
						LIMIT = {
							any_neighbor_country = {
								exists = this
								is_country_type = default
							}
						}
						random_neighbor_country = {
							limit = { is_country_type = default }
							save_event_target_as = tech_country
						}
						copy_techs_from = {
							target = event_target:tech_country
							except = {
								# Horizon Signal
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
							}
						}
					}
					ELSE_IF = {
						LIMIT = {
							any_country = {
								is_ai = no
							}
						}
						random_country = {
							limit = { is_ai = no }
							save_event_target_as = tech_country
						}
						copy_techs_from = {
							target = event_target:tech_country
							except = {
								# Horizon Signal
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
							}
						}
					}
					ELSE = {
						random_country = {
							limit = { is_country_type = default	}
							save_event_target_as = tech_country
						}
						copy_techs_from = {
							target = event_target:tech_country
							except = {
								# Horizon Signal
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
							}
						}
					}
					##Add some new technologies
					inverted_switch = {
						trigger = has_technology
						tech_starbase_2 = { give_technology = { tech = tech_starbase_2 } }
						tech_starbase_3 = { give_technology = { tech = tech_starbase_3 } }
						tech_starbase_4 = { give_technology = { tech = tech_starbase_4 } }
						tech_starbase_5 = { give_technology = { tech = tech_starbase_5 } }
						tech_power_plant_4 = { give_technology = { tech = tech_power_plant_4 } }
						tech_mining_3 = { give_technology = { tech = tech_mining_3 } }
						tech_power_hub_1 = { give_technology = { tech = tech_power_hub_1 } }
					}
	
					##Add resources
					add_resource = { minerals = 10000 }
					add_resource = { energy = 10000 }
					add_resource = { food = 3000 }
					add_resource = { consumer_goods = 3000 }
					add_resource = { alloys = 7000 }
					add_resource = { influence = 1000 }
					add_resource = { unity = 27000 }

					##Create fleets
					if = {
						limit = {
							has_technology = tech_destroyers
						}
						create_fleet = {
							effect = {
								set_owner = event_target:time_loop_country
								while = {
									count = 8
									create_ship = {
										name = random
										random_existing_design = destroyer
										graphical_culture = "reptilian_01"
									}
								}
								set_location = {
									target = event_target:time_loop_world
									distance = 10
									angle = random
								}			
							}
						}
					}
					if = {
						limit = {
							has_technology = tech_cruisers
						}
						create_fleet = {
							effect = {
								set_owner = event_target:time_loop_country
								while = {
									count = 6
									create_ship = {
										name = random
										random_existing_design = cruiser
										graphical_culture = "reptilian_01"
									}
								}
								set_location = {
									target = event_target:time_loop_world
									distance = 10
									angle = random
								}			
							}
						}
					}
					if = {
						limit = {
							has_technology = tech_battleships
						}
						create_fleet = {
							effect = {
								set_owner = event_target:time_loop_country
								while = {
									count = 2
									create_ship = {
										name = random
										random_existing_design = battleship
										graphical_culture = "reptilian_01"
									}
								}
								set_location = {
									target = event_target:time_loop_world
									distance = 10
									angle = random
								}			
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:time_loop_country
							while = {
								count = 10
								create_ship = {
									name = random
									random_existing_design = corvette
									graphical_culture = "reptilian_01"
								}
							}		
						}
					}
				}
			}

			set_owner = event_target:time_loop_country
			set_capital = yes
			while = {
				count = 17
				create_pop = {
					species = event_target:time_loop_species
				}					
			}
			add_district = district_city
			add_district = district_city
			add_district = district_city
			add_district = district_farming
			add_district = district_mining
			add_district = district_generator
			add_district = district_generator
			add_building = building_system_capital
			add_building = building_research_lab_1
			add_building = building_foundry_1
			add_building = building_factory_1
			while = {
				count = 5
				create_army = {
					name = random
					owner = event_target:time_loop_country
					species = event_target:time_loop_species
					type = defense_army
				}
			}
			solar_system = {
				create_starbase = {
					size = starbase_citadel
					module = shipyard
					owner = event_target:time_loop_country
				}
			}
		}
		establish_communications_no_message = last_created_country
		event_target:time_loop_country = { establish_communications_no_message = root }
	}

	option = {
		name = distar.2038.a
	}
}


##### THE ENIGMATIC CACHE ######

event = {
	id = distar.2050
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		has_distar = yes
		NOT = {
			any_system = {
				has_star_flag = enigmatic_cache_system
			}
		}
		any_playable_country = {
			is_ai = no
			is_at_war = no
		}
	}
	immediate = {
		# spawn tube by random gateway
		random_system = {
			limit = {
				any_system_megastructure = {
					OR = {
						is_megastructure_type = gateway_ruined
						is_megastructure_type = gateway_restored
						is_megastructure_type = gateway_final
						is_megastructure_type = lgate_base
					}
				}
			}
			star = {
				planet_event = { id = distar.20501 }
			}
		}
	}
}

planet_event = {
	id = distar.20501
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		# save spawn point
		solar_system = {
			if = {
				limit = {
					any_system_megastructure = {
						OR = {
							is_megastructure_type = gateway_ruined
							is_megastructure_type = gateway_restored
							is_megastructure_type = gateway_final
							is_megastructure_type = lgate_base
						}
					}
				}
				random_system_megastructure = {
					limit = {
						OR = {
							is_megastructure_type = gateway_ruined
							is_megastructure_type = gateway_restored
							is_megastructure_type = gateway_final
							is_megastructure_type = lgate_base
						}
					}
					save_event_target_as = spawning_gateway
				}
			}
			# use root planet as spawn point if fired for debugging
			else = {
				root = {
					save_event_target_as = spawning_gateway
				}
			}
		}
		# Finding a target planet to scan and spawning enigmatic cache system 
		if = {
			limit = {
				any_system = {
					exists = owner
					owner = {
						is_country_type = default
						is_at_war = no
						any_owned_planet = {
							is_colony = yes
							NOT = { has_planet_flag = has_been_scanned }
						}
					}
				}
			}
			if = {
				limit = {
					any_system = {
						exists = owner
						owner = {
							is_ai = no
							is_country_type = default
							is_at_war = no
							any_owned_planet = {
								is_colony = yes
								NOT = { has_planet_flag = has_been_scanned }
							}
						}
					}
				}
				closest_system = {
					limit = {
						exists = owner
						owner = {
							is_country_type = default
							is_at_war = no
							is_ai = no
							any_owned_planet = {
								is_colony = yes
								NOT = { has_planet_flag = has_been_scanned }
							}
						}
					}
					random_system_planet = {
						limit = { exists = owner }
						#set_planet_flag = has_been_scanned
						save_event_target_as = new_location
						solar_system = { set_star_flag = enigmatic_cache_system }
					}
				}
			}
		}
		else = {
			closest_system = {
				limit = {
					exists = owner
					owner = {
						is_country_type = default
						is_at_war = no
						any_owned_planet = {
							is_colony = yes
							NOT = { has_planet_flag = has_been_scanned }
						}
					}
				}
				random_system_planet = {
					limit = { exists = owner }
					#set_planet_flag = has_been_scanned
					save_event_target_as = new_location
					solar_system = { set_star_flag = enigmatic_cache_system }
				}
			}
		}
		create_country = {
			name = "NAME_enigmatic_cache"
			type = enigmatic_cache
			flag = {
				icon = {
					category = spherical
					file = flag_spherical_4.dds
				}
				background = {
					category = backgrounds
					file = "00_solid.dds"
				}
				colors = {
					"black"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				save_global_event_target_as = enigmatic_cache_country
			}
		}
		event_target:enigmatic_cache_country = {
			set_graphical_culture = guardian_01
			create_enigmatic_cache_fleet = yes
		}
		every_country = {
			establish_communications_no_message = event_target:enigmatic_cache_country
		}
	}
}

# when clear_auto_move_on_arrival is set to no the fleet will return to planet even if its orbit is interrupted until it is given another auto_move order.

# ON arrival to its new target the Enigmatic Cache "scans the planet"
country_event = {
	id = distar.5054
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			has_fleet_flag = enigmatic_cache_fleet
		}
		NOT = { has_global_flag = cache_returned }
	}
	immediate = {
		if = {
			limit = {
				from.orbit = {
					is_colony = yes
				}
			}
			from.orbit = {
				if = {
					limit = {
						NOT = {
							has_modifier = enigmatic_cache_in_orbit
						}
					}
					add_modifier = {
						modifier = enigmatic_cache_in_orbit
					}
				}
				planet_event = { id = distar.5057 }
			}
		}
		# Sets new location for cache
		country_event = { id = distar.5052 days = 3600 }
		#country_event = { id = distar.5052 days = 30 }
	}
}

# Notification the first time the cache scans one of your planets
planet_event = {
	id = distar.5057
	title = distar.5057.name
	desc = distar.5057.desc
	picture = GFX_evt_enigmatic_cache
	show_sound = event_mystic_reveal
	location = Root

	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = {
			NOT = {
				has_country_flag = discovered_enigmatic_cache
			}
		}
	}

	immediate = {
		if = {
			limit = {
				root.owner = {
					OR = {
						has_ethic = ethic_fanatic_xenophobe
						has_ethic = ethic_xenophobe
					}
				}
			}
			every_owned_pop = {
				limit = {
					OR = {
						has_ethic = ethic_fanatic_xenophobe
						has_ethic = ethic_xenophobe
					}
				}
				add_modifier = {
					modifier = enigmatic_cache_in_orbit_phobe
					days = -1
				}
			}
		}
		owner = { set_country_flag = discovered_enigmatic_cache }
	}

	option = {
		name = distar.5057.a
		enable_special_project = {
			name = "ENIGMATIC_CACHE_PROJECT"
			location = root
			owner = root.owner
		}
	}

	option = {
		name = distar.5057.b
		owner = {
			add_resource = { influence = 50 }
		}
	}
}

# Enigmatic Cache Project Followup
country_event = {
	id = distar.5058
	title = distar.5058.name
	desc = distar.5058.desc
	picture = GFX_evt_enigmatic_cache
	show_sound = event_mystic_reveal
	location = fromfrom

	is_triggered_only = yes

	immediate = {
		set_country_flag = lcluster_clue_desc_1
	}
	option = {
		name = distar.5058.a
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
		hidden_effect = {
			pop_lcluster_event = yes
		}
	}
}


# Enigmatic Cache moves if it can find a new location
country_event = {
	id = distar.5052
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOR = { 
			has_global_flag = cache_returned
			any_owned_ship = {
				has_ship_flag = enigmatic_cache_ship
				exists = orbit
				orbit = {
					owner = { is_researching_special_project = ENIGMATIC_CACHE_PROJECT }
				}
			}
		}
	}

	immediate = {
	# Runs check to remove enigmatic_cache_in_orbit modifier
		random_owned_ship = {
			limit = {
				has_ship_flag = enigmatic_cache_ship
				exists = orbit
			}
			orbit = {
				planet_event = { id = distar.5056 days = 2 }
				save_event_target_as = cache_present_location
				owner = { save_event_target_as = enigmatic_cache_present_host }
				# sets 'scanned' planet flag on present location
				if = {
					limit = {
						NOT = {
							has_planet_flag = has_been_scanned
						}
					}
					set_planet_flag = has_been_scanned
				}
			}
		}
		# Cache searches for new location:
		# Tries to find a player controlled country
		if = {
			limit = {
				any_playable_country = {
					is_ai = no
					is_at_war = no
					NOR = {
						is_hostile = root
						root = { is_hostile = prev }
					}
					any_owned_planet = {
						NOT = { has_planet_flag = has_been_scanned }
					}
				}
			}
			random_owned_ship = {
				limit = {
					has_ship_flag = enigmatic_cache_ship
				}
				solar_system = {
					closest_system = {
						limit = {
							exists = owner
							owner = {
								is_ai = no
								is_country_type = default
								is_at_war = no
								NOR = {
									is_hostile = root
									root = { is_hostile = prev }
								}
							}
							NOT = {
								any_ship_in_system = {
									exists = owner
									owner = { 
										is_hostile = root 
									} 
								}
							}
							any_system_planet = {
								is_colony = yes
								NOT = { has_planet_flag = has_been_scanned }
							}
						}
						random_system_planet = {
							limit = {
								is_colony = yes
								NOT = { has_planet_flag = has_been_scanned }
							}
							save_event_target_as = new_location
						}
					}
				}
				auto_move_to_planet = {
					target = event_target:new_location
					clear_auto_move_on_arrival = no	# distar. sets a new auto move target
				}
			}
		}
		else_if = {
			limit = {
				any_playable_country = {
					is_at_war = no
					NOR = {
						is_hostile = root 
						root = { is_hostile = prev }
					}
					any_owned_planet = {
						NOT = { has_planet_flag = has_been_scanned }
					}
				}
			}
			random_owned_ship = {
				limit = {
					has_ship_flag = enigmatic_cache_ship
				}
				solar_system = {
					closest_system = {
						limit = {
							exists = owner
							owner = {
								is_country_type = default
								is_at_war = no
								NOR = {
									is_hostile = root 
									root = { is_hostile = prev }
								}
							}
							any_system_planet = {
								is_colony = yes
								NOT = { has_planet_flag = has_been_scanned }
							}
						}
						random_system_planet = {
							limit = {
								is_colony = yes
								NOT = { has_planet_flag = has_been_scanned }
							}
							#set_planet_flag = has_been_scanned
							save_event_target_as = new_location
						}
					}
				}
				auto_move_to_planet = {
					target = event_target:new_location
					clear_auto_move_on_arrival = no	# istar. sets a new auto move target
				}
			}
		}

		# Attempts to move again later if no suitable location
		else = {
			country_event = { id = distar.5052 days = 100 }
		}
		# Set flag if cache is moving to planet within same country
		if = {
			limit = {
				exists = event_target:new_location
				event_target:new_location = {
					owner = {
						is_same_value = event_target:enigmatic_cache_present_host
					}
				}
				NOT = {
					has_country_flag = enigmatic_cache_host_country
				}
			}
			event_target:enigmatic_cache_present_host = {
				set_country_flag = enigmatic_cache_host_country 
			}
		}
		# remove flag if cache is moving to planet in different country
		else_if = {
			limit = {
				NOR = {
					exists = event_target:new_location
					event_target:new_location = {
						owner = {
							is_same_value = event_target:enigmatic_cache_present_host
						}
					}
				}
				has_country_flag = enigmatic_cache_host_country
			}
			event_target:enigmatic_cache_present_host = { 
				remove_country_flag = enigmatic_cache_host_country
			}
		}
	}
}

# Cache leaves: removes enigmatic_cache_in_orbit modifier and triggers notification
planet_event = {
	id = distar.5056
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		exists = owner
		has_modifier = enigmatic_cache_in_orbit
		NOT = {
			solar_system = {
				any_ship_in_system = {
					fleet = {
						exists = orbit
						orbit = { is_same_value = root }
						exists = owner
						owner = { is_same_value = event_target:enigmatic_cache_country }
					}
				}
			}
		}
	}
	immediate = {
		if = {
			limit = {
				owner = {
					has_special_project = ENIGMATIC_CACHE_PROJECT
					NOT = {
						has_country_flag = enigmatic_cache_host_country
					}
				}
				has_modifier = enigmatic_cache_in_orbit
				solar_system = {
					NOT = {
						any_ship_in_system = {
							fleet = {
								exists = orbit
								orbit = { is_same_value = root }
								exists = owner
								owner = { is_same_value = event_target:enigmatic_cache_country }
							}
						}
					}
				}
			}
			owner = { abort_special_project = { type = ENIGMATIC_CACHE_PROJECT } }
		}
		remove_modifier = enigmatic_cache_in_orbit
		every_owned_pop = {
			limit = {
				has_modifier = enigmatic_cache_in_orbit_phobe
			}
			remove_modifier = enigmatic_cache_in_orbit_phobe
		}
		planet_event = { id = distar.5059 days = 1 }
	}
}

# Notifies planet owner the first time the cache leaves
planet_event = {
	id = distar.5059
	title = distar.5059.name
	desc = {
		trigger = {
			owner = {
				has_country_flag = enigmatic_cache_host_country
			}
		}
		text = distar.5059.desc.b
	}
	desc = {
		trigger = {
			owner = {
				NOT = { has_country_flag = enigmatic_cache_host_country }
			}
		}
		text = distar.5059.desc
	}
	picture = GFX_evt_enigmatic_cache
	show_sound = event_mystic_reveal
	location = this
	
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = cache_has_changed_location
			}
		}
	}

	immediate = {
		owner = {
			set_country_flag = cache_has_changed_location
		}
	}

	option = {
		name = distar.5059.a
	}
	option = {
		name = distar.5059.b
	}
}

##### Enigmatic Cache Flees
ship_event = {
	id = distar.5053
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_ship_flag = enigmatic_cache_ship
	}

	immediate = {
		From.owner = { save_event_target_as = cache_killers }
		solar_system = {
			save_event_target_as = cache_current_location
		}
		create_ambient_object = {
			location = this
			type = horror_spawn_object
		}
		# Removes enigmatic_cache_in_orbit modifier if orbiting a planet
		if = {
			limit = {
				exists = orbit
				orbit = {
					has_modifier = enigmatic_cache_in_orbit
				}
			}
			orbit = {
				remove_modifier = enigmatic_cache_in_orbit
				every_owned_pop = {
					limit = {
						OR = {
							has_modifier = enigmatic_cache_in_orbit_phobe
						}
					}
					remove_modifier = enigmatic_cache_in_orbit_phobe
				}
				# Aborts enigmatic research project
				if = {
					limit = {
						owner = {
							has_special_project = ENIGMATIC_CACHE_PROJECT
						}
					}
					owner = { abort_special_project = { type = ENIGMATIC_CACHE_PROJECT } }
				}
			}
		}
		# Alerts Players with active Uplifting Project
		if = {
			limit = {
				any_playable_country = {
					is_researching_special_project = ENIGMATIC_UPLIFTING
					NOT = { is_same_value = FROM } # Aggressor is not country that is being uplifted
				}
			}
			random_playable_country = {
				limit = {
					is_researching_special_project = ENIGMATIC_UPLIFTING
				}
				country_event = { id = distar.5070 days = 20 }
			}
		}
		# Removes Inactive Enigmatic Uplift Project
		if = {
			limit = {
				any_playable_country = {
					has_special_project = ENIGMATIC_UPLIFTING
				}
			}
			random_playable_country = {
				limit = { has_special_project = ENIGMATIC_UPLIFTING }
				abort_special_project = { type = ENIGMATIC_UPLIFTING }
			}
			delete_ship = this
			break = yes # If the cache is interrupted while uplifting it will never come back.
		}
			
		# Finds another country to scan
		if = {
			limit = {
				any_playable_country = {
					is_at_war = no
					NOT = { is_hostile = root.owner }
					any_owned_planet = {
						NOT = { has_planet_flag = has_been_scanned }
						solar_system = {
							NOT = { 
								is_same_value = event_target:cache_current_location 
							}
						}
					}
				}
			}
			closest_system = {
				limit = {
					exists = owner
					owner = {
						is_at_war = no
						NOT = { is_hostile = root.owner }
					}
					any_system_planet = {
						is_colony = yes
						NOT = { has_planet_flag = has_been_scanned }
					}
				}
				random_system_planet = {
					limit = {
						is_colony = yes
						NOT = { has_planet_flag = has_been_scanned }
						solar_system = {
							NOT = {
								is_same_value = event_target:cache_current_location 
							}
						}
					}
					save_event_target_as = new_location
					solar_system = {
						set_star_flag = enigmatic_cache_system
					}
				}
			}
			create_enigmatic_cache_fleet = yes
		}
		# Finds a gateway if there are no viable countries
		else_if = {
			limit = {
				any_system = {
					any_system_megastructure = {
						OR = {
							is_megastructure_type = gateway_ruined
							is_megastructure_type = gateway_restored
							is_megastructure_type = gateway_final
						}
					}
					NOT = {
						is_same_value = event_target:cache_current_location 
					}
				}
			}
			closest_system = {
				limit = {
					any_system_megastructure = {
						OR = {
							is_megastructure_type = gateway_ruined
							is_megastructure_type = gateway_restored
							is_megastructure_type = gateway_final
						}
					}
					NOT = {
						is_same_value = event_target:cache_current_location 
					}
				}
				random_system_megastructure = {
					limit = {
						OR = {
							is_megastructure_type = gateway_ruined
							is_megastructure_type = gateway_restored
							is_megastructure_type = gateway_final
						}
					}
					save_event_target_as = new_location
					solar_system = {
						set_star_flag = enigmatic_cache_system
					}
				}
			}
			create_enigmatic_cache_fleet = yes
		}
		# Finds a random system without an owner
		else_if = {
			limit = {
				any_system = {
					has_owner = no
					NOR = {
						has_star_flag = guardian
						has_star_flag = hostile_system
						is_same_value = event_target:cache_current_location
					}
					NOT = {
						is_same_value = event_target:cache_current_location 
					}
				}
			}
			closest_system = {
				limit = {
					has_owner = no
					NOR = {
						has_star_flag = guardian
						has_star_flag = hostile_system
						is_same_value = event_target:cache_current_location
					}
					NOT = {
						is_same_value = event_target:cache_current_location 
					}
				}
				random_system_planet = {
					limit = {
						has_owner = no
					}
					save_event_target_as = new_location
					solar_system = {
						set_star_flag = enigmatic_cache_system
					}
				}
			}
			create_enigmatic_cache_fleet = yes
		}
		# Tries to spawn again later if it can't find good target location
		else = {
			owner = { country_event = { id = distar.5055 days = 500 } }
		}
		delete_ship = this
	}
}

# Attempts to create new enigmatic cache at safe location
country_event = {
	id = distar.5055
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	# Shouldn't trigger if the enigmatic cache country already has an enigmatic cache in rotation
		NOT = {
			any_owned_ship = {
				has_ship_flag = enigmatic_cache_ship
			}
		}
	}

	immediate = {
		if = {
			limit = {
				any_playable_country = {
					is_ai = no
					is_at_war = no
					NOT = { is_hostile = root.owner }
					any_owned_planet = {
						NOT = { has_planet_flag = has_been_scanned }
					}
				}
			}
			closest_system = {
				limit = {
					exists = owner
					owner = {
						is_ai = no
						is_at_war = no
						NOT = { is_hostile = root.owner }
					}
					any_system_planet = {
						is_colony = yes
						NOT = { has_planet_flag = has_been_scanned }
					}
				}
				random_system_planet = {
					limit = {
						is_colony = yes
						NOT = { has_planet_flag = has_been_scanned }
					}
					save_event_target_as = new_location
					solar_system = {
						set_star_flag = enigmatic_cache_system
					}
				}
			}
			create_enigmatic_cache_fleet = yes
		}
		# A gateway
		else_if = {
			limit = {
				any_system = {
					any_system_megastructure = {
						OR = {
							is_megastructure_type = gateway_ruined
							is_megastructure_type = gateway_restored
							is_megastructure_type = gateway_final
							is_megastructure_type = lgate_base
						}
					}
				}
			}
			closest_system = {
				limit = {
					any_system_megastructure = {
						OR = {
							is_megastructure_type = gateway_ruined
							is_megastructure_type = gateway_restored
							is_megastructure_type = gateway_final
							is_megastructure_type = lgate_base
						}
					}
				}
				random_system_megastructure = {
					limit = {
						OR = {
							is_megastructure_type = gateway_ruined
							is_megastructure_type = gateway_restored
							is_megastructure_type = gateway_final
							is_megastructure_type = lgate_base
						}
					}
					save_event_target_as = new_location
					solar_system = {
						set_star_flag = enigmatic_cache_system
					}
				}
			}
			create_enigmatic_cache_fleet = yes
		}
		# A non hostile system without an owner
		else_if = {
			limit = {
				any_system = {
					has_owner = no
					NOR = {
						has_star_flag = guardian
						has_star_flag = hostile_system
					}
				}
			}
			random_system = {
				limit = {
					has_owner = no
					NOR = {
						has_star_flag = guardian
						has_star_flag = hostile_system
					}
				}
				random_system_planet = {
					limit = {
						has_owner = no
					}
					save_event_target_as = new_location
					solar_system = {
						set_star_flag = enigmatic_cache_system
					}
				}
			}
			create_enigmatic_cache_fleet = yes
		}
		else = {
			country_event = { id = distar.5055 days = 500 }
		}
	}
}

#### THE ENIGMATIC CACHE RETURNS ####

event = {
	id = distar.5060
	hide_window = yes

	is_triggered_only = yes 

	trigger = {
	### There are no other player empires that are eligible for scanning
		exists = event_target:enigmatic_cache_country
		NOR = {
			has_global_flag = cache_returned
			any_playable_country = {
				NOT = {
					any_owned_planet = {
						is_colony = yes
						has_planet_flag = has_been_scanned
					}
				}
				NOR = {
					is_hostile = event_target:enigmatic_cache_country
					event_target:enigmatic_cache_country = { is_hostile = prev }
				}
				is_at_war = no
			}
		}
		### There is a player empire that has already been scanned
		any_playable_country = {
			any_owned_pop = {
				is_same_species = owner_species
				is_robot_pop = no
				is_sapient = yes
				NOT = { has_trait = trait_machine_unit }
			}
			any_owned_planet = {
				is_colony = yes
				has_planet_flag = has_been_scanned
			}
			NOR = {
				is_hostile = event_target:enigmatic_cache_country
				event_target:enigmatic_cache_country = { is_hostile = prev }
			}
			is_at_war = no
			is_ai = no
		}
	}
	immediate = {
	# Attempts to find a player empire with no other technologically inferior empires
		if = {
			limit = {
				any_playable_country = {
					any_owned_pop = {
						is_same_species = owner_species
						is_robot_pop = no
						is_sapient = yes
						NOT = { has_trait = trait_machine_unit }
					}
					NOT = {
						any_country = {
							is_country_type = default
							relative_power = { 
								who = prev
								category = technology
								value <= inferior 
							}
						}
					}
					any_owned_planet = {
						is_colony = yes
						has_planet_flag = has_been_scanned
					}
					NOR = {
						is_hostile = event_target:enigmatic_cache_country
						event_target:enigmatic_cache_country = { is_hostile = prev }
					}
					is_at_war = no
					is_ai = no
				}
			}
			random_playable_country = {
				limit = {
					any_owned_pop = {
						is_same_species = owner_species
						is_robot_pop = no
						is_sapient = yes
						NOT = { has_trait = trait_machine_unit }
					}
					NOT = {
						any_country = {
							is_country_type = default
							relative_power = { 
								who = prev
								category = technology
								value <= inferior 
							}
						}
					}
					any_owned_planet = {
						is_colony = yes
						has_planet_flag = has_been_scanned
					}
					NOR = {
						is_hostile = event_target:enigmatic_cache_country
						event_target:enigmatic_cache_country = { is_hostile = prev }
					}
					is_at_war = no
					is_ai = no
				}
				save_global_event_target_as = enigmatic_caches_choice
				set_country_flag = enigmatic_caches_choice
				random_owned_planet = {
					limit = {
						is_homeworld = yes
					}
					save_event_target_as = new_location
				}
			}
			set_global_flag = cache_returned
			event_target:enigmatic_cache_fleet = {
				set_fleet_flag = cache_returning
				auto_move_to_planet = {
					target = event_target:new_location
					clear_auto_move_on_arrival = no	
				}	
			}
		}
		# Attempts to find a player empire regardless of technology level
		else_if = {
			limit = {
				any_playable_country = {
					any_owned_pop = {
						is_same_species = owner_species
						is_robot_pop = no
						is_sapient = yes
						NOT = { has_trait = trait_machine_unit }
					}
					any_owned_planet = {
						is_colony = yes
						has_planet_flag = has_been_scanned
					}
					NOR = {
						is_hostile = event_target:enigmatic_cache_country
						event_target:enigmatic_cache_country = { is_hostile = prev }
					}
					is_at_war = no
					is_ai = no
				}
			}
			random_playable_country = {
				limit = {
					any_owned_pop = {
						is_same_species = owner_species
						is_robot_pop = no
						is_sapient = yes
						NOT = { has_trait = trait_machine_unit }
					}
					any_owned_planet = {
						is_colony = yes
						has_planet_flag = has_been_scanned
					}
					NOR = {
						is_hostile = event_target:enigmatic_cache_country
						event_target:enigmatic_cache_country = { is_hostile = prev }
					}
					is_at_war = no
					is_ai = no
				}
				save_global_event_target_as = enigmatic_caches_choice
				set_country_flag = enigmatic_caches_choice
				random_owned_planet = {
					limit = {
						is_homeworld = yes
					}
					save_event_target_as = new_location
				}
			}
			set_global_flag = cache_returned
			event_target:enigmatic_cache_fleet = {
				set_fleet_flag = cache_returning
				auto_move_to_planet = { # Triggers distar.5061 from on_action
					target = event_target:new_location
					clear_auto_move_on_arrival = no	
				}	
			}
		}
	}
}
# Triggers Cache Return Notification
country_event = {
	id = distar.5061
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		from = {
			has_fleet_flag = cache_returning
		}
		NOT = {
			any_playable_country = {
				has_country_flag = caches_choice_notified
			}
		}
	}

	immediate = {
		random_playable_country = {
			limit = {
				has_country_flag = enigmatic_caches_choice
			}
			country_event = { id = distar.5062 }
			set_country_flag = caches_choice_notified
		}
	}
}

# Cache Return Notification

country_event = {
	id = distar.5062
	title = "distar.5062.name"
	desc = "distar.5062.desc"
	picture = GFX_evt_enigmatic_cache
	show_sound = event_ship_bridge
	location = root.capital_scope
	trackable = yes

	is_triggered_only = yes

	option = {
		name = distar.5062.a
		country_event = { id = distar.5064 }
	}
	option = {
		name = distar.5062.b
	}
}

# Cache Transmission
country_event = {
	id = distar.5064
	title = "distar.5064.name"
	desc = "distar.5064.desc"
	location = root.capital_scope
	trackable = yes

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		room = no_video_feed_room
	}

	option = {
		name = distar.5064.a
		response_text = distar.5064.a.response
		is_dialog_only = yes
	}
	option = {
		name = distar.5064.b
		response_text = distar.5064.b.response
		is_dialog_only = yes
	}
	option = {
		name = distar.5064.c
		response_text = distar.5064.c.response
		is_dialog_only = yes
	}
	option = {
		name = distar.5064.d
		response_text = distar.5064.d.response
		is_dialog_only = yes
	}
	option = {
		name = distar.5064.e
		response_text = distar.5064.e.response
		custom_tooltip = distar.5064.e.tooltip
		enable_special_project = {
			name = "ENIGMATIC_UPLIFTING"
			location = root.capital_scope
			owner = root
		}
	}
	option = {
		name = distar.5064.f
		response_text = distar.5064.f.response
	}
}
# Gatekeeper - triggers Enigmatic Dreams
country_event = {
	id = distar.5066
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = triggered_enigmatic_dreams }
	}

	immediate = {
		country_event = { id = distar.5067 days = 60 random = 20 }
		random_list = {
			50 = { # if players are unintelligent things may go poorly
				modifier = {
					factor = 0
					owner_species = {
						OR = {
							has_trait = trait_intelligent
							has_trait = trait_quick_learners
						}
					}
				}
				set_country_flag = enigmatically_unlucky
			}

			50 = { }
		}
	}
}
# Enigmatic Dreams
country_event = {
	id = distar.5067
	title = "distar.5067.name"
	desc = {
		trigger = {
			NOT = { has_country_flag = enigmatically_unlucky }
		}
		text = distar.5067.desc.a
	}
	desc = {
		trigger = {
			has_country_flag = enigmatically_unlucky
		}
		text = distar.5067.desc.b
	}
	picture = GFX_evt_surreal_visions
	show_sound = event_ship_bridge
	location = root.capital_scope
	trackable = yes

	is_triggered_only = yes

	trigger = {
		is_researching_special_project = ENIGMATIC_UPLIFTING
		NOT = { has_country_flag = triggered_enigmatic_dreams }
	}
	immediate = {
		set_country_flag = triggered_enigmatic_dreams
		country_event = { id = distar.5071 days = 70 random = 20 }
	}
	option = {
		name = distar.5067.a
		custom_tooltip = distar.5067.a.tooltip
		trigger = {
			has_country_flag = enigmatically_unlucky
		}
		hidden_effect = {
			set_country_flag = enigmatic_fatigue
			while = {
				limit = {
					any_owned_pop = {
						is_same_species = owner_species
						is_robot_pop = no
						is_sapient = yes
						NOR = {
							has_modifier = enigmatic_fatigue
							has_trait = trait_machine_unit
						}
						enigmatic_modifier_jobs = yes
					}
				}
				count = 60
				random_owned_pop = {
					limit = {
						is_same_species = owner_species
						is_robot_pop = no
						is_sapient = yes
						NOR = {
							has_modifier = enigmatic_fatigue
							has_trait = trait_machine_unit
						}
						enigmatic_modifier_jobs = yes
					}
					add_modifier = {
						modifier = enigmatic_fatigue
					}
				}
			}
		}
	}
	option = {
		name = distar.5067.b
		trigger = {
			has_country_flag = enigmatically_unlucky
		}
		hidden_effect = {
			set_country_flag = aborted_enigmatic_uplift
		}
	}
	option = {
		name = FASCINATING
		trigger = {
			NOT =  { has_country_flag = enigmatically_unlucky }
		}
	}
}
# Cache breaks
country_event = {
	id = distar.5071
	title = "distar.5071.name"
	desc = "distar.5071.desc"
	picture = GFX_evt_enigmatic_cache
	show_sound = event_ship_bridge
	location = root.capital_scope
	trackable = yes

	is_triggered_only = yes

	trigger = {
		is_researching_special_project = ENIGMATIC_UPLIFTING
	}

	immediate = {
		set_country_flag = enigmatic_cache_broken
		set_country_flag = enigmatic_slumber
		while = {
			limit = {
				any_owned_pop = {
					is_same_species = owner_species
					is_robot_pop = no
					is_sapient = yes
					NOR = {
						has_modifier = enigmatic_slumber
						has_trait = trait_machine_unit
					}
					enigmatic_modifier_jobs = yes
				}
			}
			count = 4
			random_owned_pop = {
				limit = {
					is_same_species = owner_species
					is_robot_pop = no
					is_sapient = yes
					NOR = { 
						has_modifier = enigmatic_slumber
						has_trait = trait_machine_unit
					}
					enigmatic_modifier_jobs = yes  # Only pops with jobs affecting resources without modifiers qualify for enigmatic uplifting negative production modifiers.
				}
				if = {
					limit = {
						has_modifier = enigmatic_fatigue
					}
					remove_modifier = enigmatic_fatigue
				}
				add_modifier = {
					modifier = enigmatic_slumber
					days = -1
				}
			}
		}
	}
	option = {
		name = distar.5071.a
		custom_tooltip = distar.5071.tooltip
		country_event = { id = distar.5072 }
	}
# Repair Cache
	option = {
		name = distar.5071.b
		enable_special_project = {
			name = "ENIGMATIC_REPAIR"
			location = root.capital_scope
			owner = root
		}
		custom_tooltip = "distar.5071.tooltip"
	}
# Abort Ascension
	option = {
		name = distar.5071.c
		hidden_effect = { 
			set_country_flag = aborted_enigmatic_uplift 
			country_event = { id = distar.5069 days = 2 }
			every_owned_pop = {
				limit = {
					has_modifier = enigmatic_slumber
				}
				remove_modifier = enigmatic_slumber
			}
			every_owned_pop = {
				limit = {
					has_modifier = enigmatic_fatigue
				}
				remove_modifier = enigmatic_fatigue
			}
		}
	}

	option = {
		name = distar.5071.d
		custom_tooltip = "distar.5071.tooltip"
	}
}

# Broken Cache Transmission
country_event = {
	id = distar.5072
	title = "distar.5072.name"
	desc = "distar.5072.desc"
	location = root.capital_scope
	trackable = yes

	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		room = no_video_feed_room
	}

	option = {
		name = distar.5072.a
		response_text = distar.5072.response
		is_dialog_only = yes
	}
	option = {
		name = distar.5072.b
		response_text = distar.5072.b.response
		is_dialog_only = yes
	}
	option = {
		name = distar.5072.c
		response_text = distar.5072.c.response
		is_dialog_only = yes
	}
	# Abort Ascension
	option = {
		name = distar.5072.d
		response_text = distar.5064.d.response
		hidden_effect = {
			set_country_flag = aborted_enigmatic_uplift 
			country_event = { id = distar.5069 days = 2 }
		}
	}
	# Repair Cache
	option = {
		name = distar.5072.e
		response_text = distar.5072.e.response
		enable_special_project = {
			name = "ENIGMATIC_REPAIR"
			location = root.capital_scope
			owner = root
		}
	}
}

# Ascension Aborted
country_event = {
	id = distar.5069
	title = "distar.5069.name"
	desc = "distar.5069.desc"
	picture = GFX_evt_enigmatic_cache
	show_sound = event_ship_bridge
	location = root.capital_scope
	trackable = yes

	is_triggered_only = yes

	immediate = {
		capital_scope = {
			solar_system = {
				random_fleet_in_system = {
					limit = {
						has_fleet_flag = enigmatic_cache_fleet
					}
					delete_fleet = this
					create_ambient_object = {
						location = this
						type = horror_spawn_object
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = enigmatic_cache_broken
			}
			remove_country_flag = enigmatic_cache_broken
		}
	}
	option = {
		name = "distar.5069.a"
	}
}

# Repair Complete
country_event = {
	id = distar.5073
	title = "distar.5073.name"
	desc = "distar.5073.desc"
	picture = GFX_evt_enigmatic_cache
	show_sound = event_ship_bridge
	location = root.capital_scope
	trackable = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_country_flag = enigmatic_cache_broken
			}
			remove_country_flag = enigmatic_cache_broken
		}
	}

	option = {
		name = EXCELLENT
	}
}

# Enigmatic Uplift Complete - Success
country_event = {
	id = distar.5063
	title = "distar.5063.name"
	desc = "distar.5063.desc"
	picture = GFX_evt_enigmatic_cache
	show_sound = event_ship_bridge
	location = root.capital_scope
	trackable = yes

	is_triggered_only = yes

	immediate = {
		every_owned_pop = {
			limit = {
				is_same_species = owner_species
				is_robot_pop = no
				is_sapient = yes
				NOT = { has_trait = trait_machine_unit }
			}
			if = {
				limit = {
					NOT = { has_trait = trait_enigmatic_intelligence }
				}
				modify_species = {
					species = this
					add_trait = trait_enigmatic_intelligence
				}
				root = { set_country_flag = applied_enigmatic_intelligence }
			}
			if = {
				limit = {
					has_trait = trait_slow_learners
				}
				modify_species = {
					species = this
					remove_trait = trait_slow_learners
				}
			}
		}
		every_owned_pop = {
			limit = {
				has_modifier = enigmatic_fatigue
			}
			remove_modifier = enigmatic_fatigue
		}

		every_owned_pop = {
			limit = {
				has_modifier = enigmatic_slumber
			}
			remove_modifier = enigmatic_slumber
		}
	}

	option = {
		name = distar.5063.a
		if = {
			limit = {
				has_country_flag = applied_enigmatic_intelligence
			}
			custom_tooltip = applied_enigmatic_intelligence.tooltip
		}
	}
}

# Enigmatic Uplift Complete - Moderate Success
country_event = {
	id = distar.5068
	title = "distar.5068.name"
	desc = "distar.5068.desc"
	picture = GFX_evt_enigmatic_cache
	show_sound = event_ship_bridge
	location = root.capital_scope
	trackable = yes

	is_triggered_only = yes

	immediate = {
		every_owned_pop = {
			limit = {
				is_same_species = owner_species
				is_robot_pop = no
				is_sapient = yes
				NOT = { has_trait = trait_machine_unit }
			}
			if = {
				limit = {
					NOT = { has_trait = trait_enigmatic_intelligence }
				}
				modify_species = {
					species = this
					add_trait = trait_enigmatic_intelligence
				}
				root = { set_country_flag = applied_enigmatic_intelligence }
			}
			if = {
				limit = {
					NOT = { has_modifier = enigmatic_sadness }
				}
				add_modifier = {
					modifier = enigmatic_sadness
					days = 3600
				}
				root = { set_country_flag =  applied_enigmatic_sadness }
			}
			if = {
				limit = {
					has_trait = trait_slow_learners
				}
				modify_species = {
					species = this
					remove_trait = trait_slow_learners
				}
			}
		}
		every_owned_pop = {
			limit = {
				has_modifier = enigmatic_fatigue
			}
			remove_modifier = enigmatic_fatigue
		}
		every_owned_pop = {
			limit = {
				has_modifier = enigmatic_slumber
			}
			remove_modifier = enigmatic_slumber
		}
	}

	option = {
		name = distar.5068.a
		if = {
			limit = { has_country_flag = applied_enigmatic_intelligence }
			custom_tooltip = applied_enigmatic_intelligence.tooltip
		}
		if = {
			limit = { has_country_flag = applied_enigmatic_sadness }
			custom_tooltip = applied_enigmatic_sadness.tooltip
		}
	}
}

# Enigmatic Uplift Complete - Failure
country_event = {
	id = distar.5074
	title = "distar.5074.name"
	desc = "distar.5074.desc"
	picture = GFX_evt_enigmatic_cache
	show_sound = event_ship_bridge
	location = root.capital_scope
	trackable = yes

	is_triggered_only = yes

	immediate = {
		every_owned_pop = {
			limit = {
				is_same_species = owner_species
				is_robot_pop = no
				is_sapient = yes
				NOT = { 
					has_trait = trait_machine_unit 
				}
			}
			if = {
				limit = {
					NOR = { 
						has_trait = trait_enigmatic_intelligence_poor 
						has_modifier = enigmatic_slumber 
					}
				}
				modify_species = {
					species = this
					add_trait = trait_enigmatic_intelligence_poor
				}
				root = { set_country_flag = applied_enigmatic_intelligence_poor }
			}
			if = {
				limit = {
					NOT = {
						has_modifier = enigmatic_madness 
					}
				}
				add_modifier = {
					modifier = enigmatic_madness
					days = 3600
				}
				root = { set_country_flag = applied_enigmatic_madness }
			}

			if = {
				limit = {
					has_modifier = enigmatic_slumber
				}
				modify_species = {
					species = this
					add_trait = trait_enigmatic_intelligence_failed
				}
				remove_modifier = enigmatic_slumber
				root = { set_country_flag = applied_enigmatic_intelligence_failed }
			}

			if = {
				limit = {
					has_modifier = enigmatic_fatigue
				}
				remove_modifier = enigmatic_fatigue
			}
		}

		#every_owned_pop = {
		#	limit = {
		#		has_trait = trait_machine_unit
		#	}
		#	if = {
		#		limit = {
		#			NOT = { has_trait = trait_natural_physicists }
		#		}
		#		modify_species = {
		#			species = this
		#			add_trait = trait_natural_physicists
		#		}
		#	}
		#}
	}

	option = {
		name = distar.5074.a
		if = {
			limit = { has_country_flag = applied_enigmatic_intelligence_poor }
			custom_tooltip = applied_enigmatic_intelligence_poor.tooltip
		}
		if = {
			limit = { has_country_flag = applied_enigmatic_madness }
			custom_tooltip = applied_enigmatic_madness.tooltip
		}
		if = {
			limit = { has_country_flag = trait_enigmatic_intelligence_failed }
			custom_tooltip = trait_enigmatic_intelligence_failed.tooltip
		}
	}
}

# Cache attacked during uplift
country_event = {
	id = distar.5070
	title = "distar.5070.name"
	desc = "distar.5070.desc"
	picture = GFX_evt_enigmatic_cache
	show_sound = event_ship_bridge
	location = root.capital_scope
	trackable = yes

	is_triggered_only = yes

	option = {
		name = distar.5070.a
	}
}

# Uplifting Canceled
country_event = {
	id = distar.5075
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		every_owned_pop = {
			limit = {
				has_modifier = enigmatic_fatigue
			}
			remove_modifier = enigmatic_fatigue
		}
		every_owned_pop = {
			limit = {
				has_modifier = enigmatic_slumber
			}
			remove_modifier = enigmatic_slumber
		}
	}
}

# Uplifting Resumed
country_event = {
	id = distar.5076
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_country_flag = enigmatic_fatigue
			}
			while = {
				limit = {
					any_owned_pop = {
						is_same_species = owner_species
						is_robot_pop = no
						is_sapient = yes
						NOR = {
							has_modifier = enigmatic_fatigue
							has_trait = trait_machine_unit
						}
						enigmatic_modifier_jobs = yes
					}
				}
				count = 60
				random_owned_pop = {
					limit = {
						is_same_species = owner_species
						is_robot_pop = no
						is_sapient = yes
						NOR = {
							has_modifier = enigmatic_fatigue
							has_trait = trait_machine_unit
						}
						enigmatic_modifier_jobs = yes
					}
					add_modifier = {
						modifier = enigmatic_fatigue
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = enigmatic_slumber
			}
			while = {
				limit = {
					any_owned_pop = {
						is_same_species = owner_species
						is_robot_pop = no
						is_sapient = yes
						NOR = {
							has_modifier = enigmatic_slumber
							has_trait = trait_machine_unit
						}
						enigmatic_modifier_jobs = yes
					}
				}
				count = 4
				random_owned_pop = {
					limit = {
						is_same_species = owner_species
						is_robot_pop = no
						is_sapient = yes
						NOR = { 
							has_modifier = enigmatic_slumber
							has_trait = trait_machine_unit
						}
						enigmatic_modifier_jobs = yes
					}
					if = {
						limit = {
							has_modifier = enigmatic_fatigue
						}
						remove_modifier = enigmatic_fatigue
					}
					add_modifier = {
						modifier = enigmatic_slumber
						days = -1
					}
				}
			}
		}
	}
}

# Aborts enigmatic uplift if capital is lost
country_event = {
	id = distar.5077
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = event_target:enigmatic_cache_country
		fromfrom = {
			solar_system = {
				any_ship_in_system = {
					fleet = {
						exists = owner
						owner = { is_same_value = event_target:enigmatic_cache_country }
						exists = orbit
						orbit = { 
							is_same_value = fromfrom
							owner = {
								has_special_project = ENIGMATIC_UPLIFTING
							}
						}
					}
				}
			}
		}
	}

	immediate = {
		from = {
			abort_special_project = { type = ENIGMATIC_UPLIFTING }
			country_event = { id = distar.5078 days = 10 }
		}
		if = {
			limit = {
				exists = event_target:enigmatic_cache_ship
			}
			event_target:enigmatic_cache_ship = {
				create_ambient_object = {
					location = this
					type = horror_spawn_object
				}
				set_disabled = yes
			}
		}
	}
}


country_event = {
	id = distar.5078
	title = "distar.5078.name"
	desc = "distar.5078.desc"
	picture = GFX_evt_enigmatic_cache
	show_sound = event_ship_bridge
	location = root.capital_scope
	trackable = yes

	is_triggered_only = yes

	immediate = {
	}
	option = {
		name = distar.5078.a
	}
}

# INVISIBLE DEATH
ship_event = {
	id = distar.2040
	title = "distar.2040.name"
	desc = "distar.2040.desc"
	picture = GFX_evt_ship_in_orbit_2
	show_sound = event_ship_bridge
	location = from
	trackable = yes
	
	is_triggered_only = yes

	immediate = {
		owner = {
			country_event = { id = story.5 days = 30 }
		}
	}

	option = {
		name = distar.2040.a
		hidden_effect = {
			owner.capital_scope = {
				closest_system = {
					min_steps = 2
					limit = {
						has_access_fleet = root.owner
						any_system_planet = {
							is_asteroid = yes
						}
					}
					random_system_planet = {
						limit = {
							is_asteroid = yes
						}
						save_event_target_as = invisible_death_lab_planet
					}
				}
			}
		}
		from = {
			enable_special_project = {
				name = "INVISIBLE_DEATH"
				location = event_target:invisible_death_lab_planet
				owner = root.owner
			}
		}
	}

	option = {
		name = distar.2040.b
		owner = { add_resource = { influence = 50 } }
	}
}

ship_event = {
	id = distar.2041
	title = "distar.2041.name"
	desc = "distar.2041.desc"
	picture = GFX_evt_derelict_interior
	show_sound = event_ship_bridge
	location = from
	trackable = yes
	
	is_triggered_only = yes

	option = {
		name = distar.2041.a
		custom_tooltip = distar.2041.a.tooltip
		hidden_effect = {
			owner = { 
				set_country_flag = lcluster_clue_desc_3
				pop_lcluster_event = yes
			}
		}
		owner = {
			inverted_switch = {
				trigger = has_technology
				tech_engineering_1 = { 
					add_research_option = tech_engineering_1
					add_tech_progress = {
						tech = tech_engineering_1
						progress = 0.3
					}
				}
				tech_engineering_2 = { 
					add_research_option = tech_engineering_2
					add_tech_progress = {
						tech = tech_engineering_2
						progress = 0.3
					}
				}
				tech_engineering_3 = { 
					add_research_option = tech_engineering_3
					add_tech_progress = {
						tech = tech_engineering_3
						progress = 0.3
					}
				}
			}
			if = {
				limit = {
					has_technology = tech_engineering_3
				}
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier2researchreward
					min = @tier2researchmin
					max = @tier2researchmax
				}
			}
		}
	}
}

# GATEWAY HIJACKING
ship_event = {
	id = distar.2045
	title = "distar.2045.name"
	desc = "distar.2045.desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_ship_bridge
	location = from
	trackable = yes
	
	is_triggered_only = yes

	immediate = {
		owner = {
			country_event = { id = story.5 days = 30 }
		}
	}

	option = {
		name = distar.2045.a
		enable_special_project = {
			name = GATEWAY_INTERFERENCE
			location = from
			owner = root.owner
		}
	}

	option = {
		name = distar.2045.b
	}
}

ship_event = {
	id = distar.2046
	title = "distar.2046.name"
	desc = "distar.2046.desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_ship_bridge
	location = fromfrom
	trackable = yes
	
	is_triggered_only = yes

	option = {
		name = distar.2046.a
		owner = {
			generate_lcluster_clue = yes
		}
	}
}

#################################
#
# Anomaly Events
# by Linus Dilén
# anomaly.3000 - 3999
#
#################################

# ROOT = ship scope
# FROM = planet scope

### Trojan Asteroid ###
ship_event = {
	id = distar.3000
	title = "distar.3000.name"
	desc = "distar.3000.desc"
	picture = GFX_evt_asteroid_field
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		fromfrom = {
			save_event_target_as = trojan_asteroid
			# clear deposits so as not to conflict with energy added later
			clear_deposits = yes
		}
	}

	option = {
		name = distar.3000.a
		custom_tooltip = distar.3000.a.tooltip
		hidden_effect = {
			ship_event = { id = distar.3001 }
		}
	}

	option = {
		name = distar.3000.b
		custom_tooltip = distar.3000.b.tooltip
		hidden_effect = {
			ship_event = { id = distar.3002 }
		}
	}
}

ship_event = {
	id = distar.3001
	title = "trojan_asteroid_title"
	desc = "distar.3001.desc"
	picture = GFX_evt_asteroid_field
	show_sound = event_scanner
	location = event_target:trojan_asteroid
	
	is_triggered_only = yes

	option = {
		name = EXCELLENT

		event_target:trojan_asteroid = {
			add_deposit = d_energy_4
		}
	}
}

ship_event = {
	id = distar.3002
	title = "trojan_asteroid_title"
	desc = "distar.3002.desc"
	picture = GFX_evt_small_space_battle
	show_sound = event_scanner
	location = event_target:trojan_asteroid
	
	is_triggered_only = yes

	option = {
		name = OOPS
		hidden_effect = {
			if = {
				limit = {
					# Do this only if asteroid is not within alien borders
					event_target:trojan_asteroid.solar_system = {
						OR = {
							NOT = { exists = starbase }
							AND = {
								exists = starbase
								starbase.owner = {
									is_same_value = root.owner
								}
							}
						}
					}
				}
				owner = {
					# Spawn drones to attack science ship, but give player a fair chance to escape
					country_event = { id = distar.3004 days = 15 }
					# Trigger follow-up special project, via event
					country_event = { id = distar.3003 days = 90 }
				}
			}
		}

	}
}

country_event = {
	id = distar.3003
	title = "trojan_asteroid_title"
	desc = "distar.3003.desc"
	picture = GFX_evt_small_space_battle
	show_sound = event_scanner
	location = event_target:trojan_asteroid
	trackable = yes
	
	is_triggered_only = yes

	option = {
		name = OK
		event_target:trojan_asteroid = {
			enable_special_project = {
				name = "trojan_asteroid_project"
				location = event_target:trojan_asteroid
				owner = root.owner
			}
		}
	}
}

country_event = {
	id = distar.3004
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		create_country = {
			name = "NAME_Ancient_Drones"
			type = faction
			flag = {
    		    icon = {
    		        category = "pirate"
    		        file = "flag_pirate_3.dds"
    		    }
    		    background = {
    		        category = "backgrounds"
    		        file = "00_solid.dds"
    		    }
    		    colors = {
    		        "black"
    		        "black"
    		        "null"
    		        "null"
    		    }
    		}
			effect = {
				set_faction_hostility = {
					target = root
					set_hostile = yes
					set_neutral = no
					set_friendly = no
				}
				create_fleet = {
					name = "NAME_Ancient_Drones"
					effect = {
						set_owner = prev
						while = {
							count = 10
							create_ship = {
								design = "NAME_Ancient_Mining_Drone"
								prefix = no
								upgradable = no
							}
						}
						set_location = {
							target = event_target:trojan_asteroid
							distance = 5
							angle = random
						}
						set_fleet_stance = aggressive
						save_event_target_as = ancient_drones_fleet
					}
					settings = {
						can_upgrade = no
						can_disband = no
						can_change_composition = no
						can_change_leader = no
						uses_naval_capacity = no
						spawn_debris = no
					}
				}
			}
		}
	}
}

ship_event = {
	id = distar.3005
	title = "trojan_asteroid_title"
	desc = "distar.3005.desc"
	picture = GFX_evt_asteroid_field
	show_sound = event_scanner
	location = event_target:trojan_asteroid

	is_triggered_only = yes

	option = {
		name = EXCELLENT
		event_target:trojan_asteroid = {
			add_deposit = d_minerals_3
		}
	}
}

### Impossible Organism ###
ship_event = {
	id = distar.3010
	title = "impossible_organism_title"
	desc = "distar.3010.desc"
	picture = GFX_evt_toxic
	show_sound = event_scanner
	location = from
	trackable = yes

	is_triggered_only = yes

	immediate = {
		fromfrom = {
			save_event_target_as = impossible_organism_planet
			# clear deposits so as not to conflict with resources added later
			clear_deposits = yes
		}

		save_event_target_as = impossible_organism_science_ship
	}

	option = { # Yes, sample it.
		name = distar.3010.a
		enable_special_project = {
			name = "impossible_organism_project_1"
			location = root.owner.capital_scope
			owner = root.owner
		}
	}

	option = { # No. Study it from afar.
		name = distar.3010.b
		custom_tooltip = distar.3010.b.tooltip
		hidden_effect = {
			event_target:impossible_organism_planet = {
				add_deposit = d_society_4
			}
		}
	}
}

country_event = { # Organism growing fast
	id = distar.3011
	title = "impossible_organism_title"
	desc = "distar.3011.desc"
	picture = GFX_evt_microscopic_life
	show_sound = event_scanner
	location = from
	trackable = yes

	is_triggered_only = yes

	option = { # Amazing. Proceed.
		name = distar.3011.a
		trigger = {
			NOR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		enable_special_project = {
			name = "impossible_organism_project_2"
			location = root.owner.capital_scope
			owner = root.owner
		}
	}

	option = { # Phobe
		name = distar.3011.a.phobe
		trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		enable_special_project = {
			name = "impossible_organism_project_2"
			location = root.owner.capital_scope
			owner = root.owner
		}
	}

	option = { # This alien is too dangerous.
		name = distar.3011.b
		custom_tooltip = distar.3011.b.tooltip
		hidden_effect = {
			country_event = { id = distar.3014 days = 1700 random = 200 }
		}
	}
}

country_event = { # It's a fungoid
	id = distar.3012
	title = "distar.3012.name"
	desc = "distar.3012.desc"
	picture = GFX_evt_microscopic_life
	show_sound = event_scanner
	location = from

	is_triggered_only = yes

	option = { # Yes, proceed.
		name = distar.3012.a
		custom_tooltip = distar.3012.a.tooltip

		hidden_effect = {
			country_event = { id = distar.3013 days = 250 random = 50 }
		}
	}

	option = { # No, we must end this.
		name = distar.3012.b
		custom_tooltip = distar.3012.b.tooltip
		hidden_effect = {
			country_event = { id = distar.3014 days = 1300 random = 200 }
		}
	}
}

country_event = { # First words		# RETILE
	id = distar.3013
	title = "distar.3013.name"
	desc = "distar.3013.desc"
	picture = GFX_evt_microscopic_life
	show_sound = event_scanner
	location = from

	is_triggered_only = yes

	immediate = {
		random_owned_planet = {
			weights = {
				base = 1
				modifier = { 
					add = 2
					free_housing > 0
				}
				modifier = { 
					add = 5
					free_housing > 1
				}
				modifier = { 
					add = 10
					free_housing > 5
				}
				modifier = { 
					add = 10
					free_housing > 10
				}
				modifier = { 
					add = 5
					planet_size > 17
				}
				modifier = { 
					add = 5
					planet_size > 21
				}
			}
			save_event_target_as = nivlac_joint_planet
		}
	}

	option = { # Astonishing. Every species-X should have one!
		trigger = {
			OR = {
				has_ethic = ethic_xenophile
				has_ethic = ethic_fanatic_xenophile
			}
		}

		allow = {
			#any_owned_planet = {
			#	free_housing > 0
			#}
		}

		name = distar.3013.a.xenophile
		custom_tooltip = distar.3013.a.tooltip

		hidden_effect = {
			create_species = {
				name = "NAME_Nivlac"
				plural = "NAME_Nivlacs"
				class = FUN
				portrait = "fun15"
				namelist = "FUN4"
				traits = {
					trait = "trait_nivlac"
					trait = "trait_quick_learners"
				}
				homeworld = event_target:nivlac_joint_planet
				effect = {
					save_global_event_target_as = nivlac_species
				}
			}
			event_target:nivlac_joint_planet = {
				while = {
					count = 3
					# housing cache doesn't update frequently enough atm
					#limit = {
					#	free_housing > 0
					#}
					create_pop = {
						species = event_target:nivlac_species
					}
				}
			}			
			country_event = { id = distar.3017 days = 10 }
		}
	}

	option = { # Excellent. Species-X society could use them.
		trigger = {
			NOR = {
				has_ethic = ethic_xenophile
				has_ethic = ethic_fanatic_xenophile
				has_ethic = ethic_gestalt_consciousness
			}
		}

		allow = {
			#any_owned_planet = {
			#	free_housing > 0
			#}
		}

		name = distar.3013.a
		custom_tooltip = distar.3013.a.tooltip

		hidden_effect = {
			create_species = {
				name = "NAME_Nivlac"
				plural = "NAME_Nivlacs"
				class = FUN
				portrait = "fun15"
				namelist = "FUN4"
				traits = {
					trait = "trait_nivlac"
					trait = "trait_quick_learners"
				}
				homeworld = event_target:nivlac_joint_planet
				effect = {
					save_global_event_target_as = nivlac_species
				}
			}
			event_target:nivlac_joint_planet = {
				while = {
					count = 3
					# housing cache doesn't update frequently enough atm
					#limit = {
					#	free_housing > 0
					#}
					create_pop = {
						species = event_target:nivlac_species
					}
				}
			}
			country_event = { id = distar.3017 days = 10 }
		}
	}

	option = { # Servitor
		trigger = {
			has_civic = civic_machine_servitor
		}

		allow = {
			#any_owned_planet = {
			#	free_housing > 0
			#}
		}

		name = "distar.3013.a.serv"
		custom_tooltip = "distar.3013.a.tooltip"

		hidden_effect = {
			create_species = {
				name = "NAME_Nivlac"
				plural = "NAME_Nivlacs"
				class = FUN
				portrait = "fun15"
				namelist = "FUN4"
				traits = {
					trait = "trait_nivlac"
					trait = "trait_quick_learners"
				}
				homeworld = event_target:nivlac_joint_planet
				pops_can_reproduce = yes
				effect = {
					save_global_event_target_as = nivlac_species
				}
			}
			event_target:nivlac_joint_planet = {
				while = {
					count = 3
					# housing cache doesn't update frequently enough atm
					#limit = {
					#	free_housing > 0
					#}
					create_pop = {
						species = event_target:nivlac_species
					}
				}
			}
			country_event = { id = distar.3017 days = 10 }
		}
	}

	option = { # Assimilator
		trigger = {
			has_civic = civic_machine_assimilator
		}

		allow = {
			#any_owned_planet = {
			#	free_housing > 0
			#}
		}

		name = "distar.3013.a.assi"
		custom_tooltip = "distar.3013.a.assi.tooltip"

		hidden_effect = {
			create_species = {
				name = "NAME_Nivlac"
				plural = "NAME_Nivlacs"
				class = FUN
				portrait = "fun15"
				namelist = "FUN4"
				traits = {
					trait = "trait_nivlac"
					trait = "trait_quick_learners"
				}
				homeworld = event_target:nivlac_joint_planet
				pops_can_reproduce = no
				effect = {
					save_global_event_target_as = nivlac_species
				}
			}
			event_target:nivlac_joint_planet = {
				while = {
					count = 3
					# housing cache doesn't update frequently enough atm
					#limit = {
					#	free_housing > 0
					#}
					create_pop = {
						species = event_target:nivlac_species
					}
				}
			}
			country_event = { id = distar.3017 days = 10 }
		}
	}

	option = { # No room, Assimilator
		name = "distar.3013.b.no_room.kill"
		custom_tooltip = "distar.3013.b.no_room.kill.tooltip"

		trigger = {
			has_civic = civic_machine_assimilator
		}
		add_monthly_resource_mult = {
			resource = influence
			value = @tier3influencereward
			min = @tier3influencemin
			max = @tier3influencemax
		}
	}

	option = { # Let's find them a home.
		name = "distar.3013.b"
		custom_tooltip = distar.3013.b.tooltip
		trigger = {
			NOT = { has_civic = civic_machine_assimilator }
		}
		hidden_effect = {
			country_event = { id = distar.3016 days = 730 random = 100 }
		}
	}
}

country_event = { # Planetfall on planet X after being shoot into deep space. Recalls our earlier disregard for their survival
	id = distar.3014
	title = "distar.3015.name"
	desc = "distar.3015.desc"
	picture = GFX_evt_alien_city
	show_sound = event_scanner
	location = event_target:nivlac_planet

	is_triggered_only = yes

	trigger = {
		any_system = {
			any_system_planet = {
				is_colonizable = yes
				has_owner = no
				is_colony = no
				habitable_planet = yes
				has_anomaly = no
				NOR = {
					has_modifier = "holy_planet"
					solar_system = {
						has_star_flag = hostile_system
					}
				}
				distance = {
					source = root.owner.capital_scope
					max_distance <= 300
					min_distance >= 50
				}
				solar_system = {
					NOT = { exists = starbase }
				}
			}
		}
	}

	immediate = {
		random_planet = {
			limit = {
				is_colonizable = yes
				has_owner = no
				is_colony = no
				habitable_planet = yes
				has_anomaly = no
				NOR = {
					has_modifier = "holy_planet"
					solar_system = {
						has_star_flag = hostile_system
					}
				}
				distance = {
					source = root.owner.capital_scope
					max_distance <= 300
					min_distance >= 50
				}
				solar_system = {
					NOT = { exists = starbase }
				}
			}
			save_global_event_target_as = nivlac_planet
		}
		create_species = {
			name = "NAME_Nivlac"
			plural = "NAME_Nivlacs"
			class = FUN
			portrait = "fun15"
			namelist = "FUN4"
			traits = {
				trait = "trait_nivlac"
				trait = "trait_quick_learners"
			}
			homeworld = event_target:nivlac_planet
			effect = {
				save_global_event_target_as = nivlac_species
			}
		}
		create_country = {
			name = NAME_Nivlac_Circle
			authority = random
			civics = random
			species = event_target:nivlac_species
			ignore_initial_colony_error = yes
			type = nivlacs
			ethos = random
			flag = random
			effect = {
				save_global_event_target_as = nivlac_country
				add_resource = { minerals = 1000 }
				add_resource = { energy = 1000 }
				add_resource = { food = 100 }
				add_resource = { influence = 50 }
			}
		}
		event_target:nivlac_planet = {
			solar_system = {
				create_starbase = {
					size = starbase_outpost
					owner = event_target:nivlac_country
				}
			}
			set_owner = event_target:nivlac_country
			set_capital = yes
			clear_blockers = yes
			solar_system = {
				every_system_planet = {
					surveyed = {
						set_surveyed = yes
						surveyor = root.owner
					}
				}
			}
			while = {
				count = 22
				create_pop = {
					species = event_target:nivlac_species
				}					
			}
			add_district = district_city
			add_district = district_city
			add_district = district_city
			add_district = district_city
			add_district = district_farming
			add_district = district_farming
			add_district = district_farming
			add_district = district_mining
			add_district = district_mining
			add_district = district_generator
			add_district = district_generator
			add_building = building_capital
			add_building = building_research_lab_1
			add_building = building_foundry_1
			add_building = building_factory_1
			while = {
				count = 2
				create_army = {
					name = random
					owner = event_target:nivlac_country
					species = event_target:nivlac_species
					type = defense_army
				}
			}
		}

		event_target:nivlac_country = {
			establish_communications_no_message = root
			add_opinion_modifier = {
				who = root
				modifier = opinion_discarded
			}
		}
	}

	option = {
		name = OOPS
	}
}

country_event = { # Helpful relocation was a success
	id = distar.3016
	title = "distar.3016.name"
	desc = "distar.3016.desc"
	picture = GFX_evt_alien_city
	show_sound = event_scanner
	location = event_target:nivlac_planet

	is_triggered_only = yes

	trigger = {
		any_system = {
			any_system_planet = {
				is_colonizable = yes
				has_owner = no
				is_colony = no
				habitable_planet = yes
				has_anomaly = no
				NOR = {
					has_modifier = "holy_planet"
					solar_system = {
						has_star_flag = hostile_system
					}
				}
				distance = {
					source = root.owner.capital_scope
					max_distance <= 300
					min_distance >= 50
				}
				solar_system = {
					NOT = { exists = starbase }
				}
			}
		}
	}

	immediate = {
		random_planet = {
			limit = {
				is_colonizable = yes
				has_owner = no
				is_colony = no
				habitable_planet = yes
				has_anomaly = no
				NOR = {
					has_modifier = "holy_planet"
					solar_system = {
						has_star_flag = hostile_system
					}
				}
				distance = {
					source = root.owner.capital_scope
					max_distance <= 300
					min_distance >= 50
				}
				solar_system = {
					NOT = { exists = starbase }
				}
			}
			save_global_event_target_as = nivlac_planet
		}
		create_species = {
			name = "NAME_Nivlac"
			plural = "NAME_Nivlacs"
			class = FUN
			portrait = "fun15"
			namelist = "FUN4"
			traits = {
				trait = "trait_nivlac"
				trait = "trait_quick_learners"
			}
			homeworld = event_target:nivlac_planet
			effect = {
				save_global_event_target_as = nivlac_species
			}
		}
		create_country = {
			name = NAME_Nivlac_Circle
			authority = random
			civics = random
			species = event_target:nivlac_species
			ignore_initial_colony_error = yes
			type = nivlacs
			ethos = random
			flag = random
			effect = {
				save_global_event_target_as = nivlac_country
				add_resource = { minerals = 1000 }
				add_resource = { energy = 1000 }
				add_resource = { food = 100 }
				add_resource = { influence = 50 }
				establish_communications_no_message = root
			}
		}
		event_target:nivlac_planet = {
			solar_system = {
				create_starbase = {
					size = starbase_outpost
					owner = event_target:nivlac_country
				}
			}
			set_owner = event_target:nivlac_country
			set_capital = yes
			clear_blockers = yes
			while = {
				count = 22
				create_pop = {
					species = event_target:nivlac_species
				}					
			}
			add_district = district_city
			add_district = district_city
			add_district = district_city
			add_district = district_city
			add_district = district_farming
			add_district = district_farming
			add_district = district_farming
			add_district = district_mining
			add_district = district_mining
			add_district = district_generator
			add_district = district_generator
			add_building = building_capital
			add_building = building_research_lab_1
			add_building = building_foundry_1
			add_building = building_factory_1
			while = {
				count = 2
				create_army = {
					name = random
					owner = event_target:nivlac_country
					species = event_target:nivlac_species
					type = defense_army
				}
			}
			solar_system = {
				every_system_planet = {
					surveyed = {
						set_surveyed = yes
						surveyor = root.owner
					}
				}
			}
		}
		event_target:nivlac_country = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_nurtured
			}
		}
	}

	option = {
		name = EXCELLENT
	}
}

country_event = { # Releasing fungoids into society as pops was successful
	id = distar.3017
	title = "distar.3017.name"
	desc = {
		trigger = {
			NOR = {
				has_civic = civic_machine_assimilator
				has_civic = civic_machine_servitor
			}
		}
		text = "distar.3017.desc"
	}
	desc = {
		trigger = {
			has_civic = civic_machine_assimilator
		}
		text = "distar.3017.desc.assim"
	}
	picture = GFX_evt_colony_settlement
	show_sound = event_scanner
	location = event_target:nivlac_joint_planet

	is_triggered_only = yes

	option = {
		name = EXCELLENT
		custom_tooltip = distar.3017.a.tooltip
	}
	option = {
		exclusive_trigger = {
			has_civic = civic_machine_assimilator
		}
		name = EXCELLENT
		custom_tooltip = distar.3017.a.assi.tooltip
	}
	option = {
		exclusive_trigger = {
			has_civic = civic_machine_servitor
		}
		name = EXCELLENT
		custom_tooltip = distar.3017.a.serv.tooltip
	}
}

### Stranded Scientist ###
ship_event = {
	id = distar.3020
	title = "distar.3020.name"
	desc = "distar.3020.desc"
	picture = GFX_evt_exploding_ship
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		save_global_event_target_as = stranded_scientist_science_ship

		create_species = {
			name = random
			class = HUM
			portrait = "human"
			namelist = "HUM1"
			traits = random
			effect = {
				save_event_target_as = stranded_scientist_species
			}
		}
		create_country = {
			name = random
			type = faction
			flag = {
    		    icon = {
    		        category = "special"
    		        file = "unknown.dds"
    		    }
    		    background = {
    		        category = "backgrounds"
    		        file = "00_solid.dds"
    		    }
    		    colors = {
    		        "blue"
    		        "blue"
    		        "null"
    		        "null"
    		    }
    		}
    		effect = {
    			save_event_target_as = stranded_scientist_country
    		}
    	}
		event_target:stranded_scientist_country = {
			create_leader = {
				class = scientist
				species = event_target:stranded_scientist_species
				name = random
				skill = 6
				event_leader = yes
				leader_age_min = 30
				leader_age_max = 50
				traits = {
					trait = "leader_trait_expertise_computing"
					trait = "leader_trait_spark_of_genius"
				}
			}
		}
		last_created_leader = {
			set_is_female = yes
			save_global_event_target_as = stranded_scientist_leader
		}
	}

	option = { # Granted
		name = distar.3020.a
		custom_tooltip = distar.3020.a.tooltip

		hidden_effect = {
			owner = {
				country_event = { id = distar.3021 days = 60 }

				clone_leader = {
					target = event_target:stranded_scientist_leader
					class = scientist
					effect = {
						save_global_event_target_as = stranded_scientist_leader_clone
					}
				}
			}
			event_target:stranded_scientist_leader = {
				kill_leader = { type = scientist show_notification = no }
			}
		}
	}

	option = { # No. Leave her.
		name = distar.3020.b
		custom_tooltip = distar.3020.b.tooltip

		random_list = {
			1 = {
				leader = { add_trait = leader_trait_adaptable }
			}
			1 = {
				leader = { add_trait = leader_trait_paranoid }
			}
		}

		hidden_effect = {
			event_target:stranded_scientist_leader = {
				kill_leader = { type = scientist show_notification = no }
			}
		}
	}
}

country_event = {
	id = distar.3021
	title = "distar.3021.name"
	desc = "distar.3021.desc"
	picture = GFX_evt_physics_research
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		custom_tooltip = distar.3021.a.tooltip

		hidden_effect = {
			set_variable = { which = picked_tech value = 0 }
			if = {
				limit = {
					has_technology = tech_automated_exploration
					has_technology = tech_synchronized_defences
					has_technology = tech_sensors_3
				}
				add_monthly_resource_mult = {
					resource = physics_research
					value = @tier4researchreward
					min = @tier4researchmin
					max = @tier4researchmax
				}
			}
			else = {
				while = {
					limit = {
						check_variable = {
							which = picked_tech
							value < 2
						}
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_automated_exploration
							}
							give_technology = { tech = tech_automated_exploration }
						}
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_synchronized_defences
							}
							give_technology = { tech = tech_synchronized_defences }
						}
						1 = {
							modifier = {
								factor = 0
								has_technology = tech_sensors_3
							}
							give_technology = { tech = tech_sensors_3 }
						}
					}
					change_variable = { which = "picked_tech" value = 1 }
				}
			}
		}
	}
}


### Molluscoid Miners ###
ship_event = {
	id = distar.3030
	title = "distar.3030.name"
	desc = "distar.3030.desc"
	picture = GFX_evt_alien_cavemen
	show_sound = event_scanner
	location = from
	trackable = yes
	
	is_triggered_only = yes

	immediate = {
		fromfrom = {
			save_event_target_as = molluscoid_miners_planet
		}
	}

	option = { # Intriguing. Study them further.
		name = distar.3030.a

		enable_special_project = {
			name = "molluscoid_miners_project_1"
			location = event_target:molluscoid_miners_planet
			owner = root.owner
		}
	}

	option = { # Mine their minerals.
		name = distar.3030.b
		owner = {
			add_monthly_resource_mult = {
				resource = minerals
				value = @tier1materialreward
				min = @tier1materialmin
				max = @tier1materialmax
			}
			IF = {
				limit = {
					OR = {
						has_ethic = ethic_fanatic_xenophile
						has_ethic = ethic_xenophile
					}
				}
				add_modifier = {
					modifier = disregard_for_alien_life
					days = 360
				}
			}
		}
	}

}

country_event = { # More info about the molluscs
	id = distar.3031
	title = "distar.3030.name"
	desc = "distar.3031.desc"
	picture = GFX_evt_alien_cavemen
	show_sound = event_scanner
	location = from
	trackable = yes

	is_triggered_only = yes

	option = {  # Yes. Proceed with the integration.
		name = distar.3031.a

		enable_special_project = {
			name = "molluscoid_miners_project_2"
			location = root.owner.capital_scope
			owner = root.owner
		}
	}

	option = { # Yes, use this knowledge (to further our technology)
		name = distar.3031.b

		enable_special_project = {
			name = "molluscoid_miners_project_3"
			location = root.owner.capital_scope
			owner = root.owner
		}
	}

	option = { # No. Mine their planet.
		name = distar.3031.c
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		IF = {
			limit = {
				OR = {
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_xenophile
				}
			}
			add_modifier = {
				modifier = disregard_for_alien_life
				days = 360
			}
		}
	}
}

country_event = { # Integration into our society complete
	id = distar.3032
	title = "distar.3032.name"
	desc = "distar.3032.desc"
	picture = GFX_evt_colony_settlement
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		create_species = {
			name = random
			class = MOL
			portrait = "mol6"
			namelist = "MOL2"
			traits = {
				trait = "trait_slow_learners"
				trait = "trait_industrious"
				trait = "trait_uplifted"
			}
			homeworld = root.capital_scope
			effect = {
				save_global_event_target_as = molluscoid_miners_species
			}
		}
		capital_scope = {
			while = {
				count = 10
				# housing cache doesn't update frequently enough atm
				#limit = {
				#	free_housing > 0
				#}
				create_pop = {
					species = event_target:molluscoid_miners_species
				}
			}
		}
		#else = {
		#	set_country_flag = no_space_for_miners
		#}
	}

	option = {
		name = EXCELLENT
		custom_tooltip = distar.3032.a.tooltip
		#trigger = {
		#	hidden_trigger = {
		#		NOT = { has_country_flag = no_space_for_miners }
		#	}
		#}
	}

	#option = {
	#	name = distar.3032.b
	#	custom_tooltip = distar.3032.b.tooltip
		#trigger = {
		#	hidden_trigger = {
		#		has_country_flag = no_space_for_miners
		#	}
		#}
	#}
}

country_event = { # Mineral mapping system implemented
	id = distar.3033
	title = "distar.3033.name"
	desc = "distar.3033.desc"
	picture = GFX_evt_physics_research
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		add_modifier = {
			modifier = mineral_mapping
			days = -1
		}
	}
}

### Alien Machine ###
ship_event = {
	id = distar.3040
	title = "distar.3040.name"
	desc = "distar.3040.desc"
	picture = GFX_evt_synth_sabotage
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	immediate = {
		from = { save_event_target_as = asteroid_target }
		event_target:asteroid_target = {
			clear_deposits = yes
		}
		save_event_target_as = unknown_machine_science_ship
		solar_system = { save_event_target_as = sol_sys }
	}

	option = { # Pull the lever
		name = distar.3040.a
		custom_tooltip = distar.3040.a.tooltip
		hidden_effect = {
			owner.capital_scope = {
				if = {
					limit = {
						closest_system = {
							limit = {
								has_natural_wormhole = no
								is_surveyed = { who = root.owner status = yes }
							}
							min_steps = 2
							max_steps = 8
							#exists = this
						}
						closest_system = {
							limit = {
								has_natural_wormhole = no
							}
							min_steps = 15
							max_steps = 50
							#exists = this
						}
					}
					closest_system = {
						limit = {
							has_natural_wormhole = no
							is_surveyed = { who = root.owner status = yes }
						}
						min_steps = 2
						max_steps = 8
						save_event_target_as = system_one
					}
					closest_system = {
						limit = {
							has_natural_wormhole = no
						}
						min_steps = 15
						max_steps = 50
						save_event_target_as = system_two
					}
					root.owner = { country_event = { id = distar.3042 days = 1 } }
				}
				else = { root = { ship_event = { id = distar.3041 days = 1 } } }
			}
		}
	}

	option = { # Take it apart.
		name = distar.3040.b
		custom_tooltip = distar.3040.b.tooltip
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
			add_monthly_resource_mult = {
				resource = minerals
				value = @tier1materialreward
				min = @tier1materialmin
				max = @tier1materialmax
			}
		}
	}
}

ship_event = {
	id = distar.3041
	title = "distar.3041.name"
	desc = "distar.3041.desc"
	picture = GFX_evt_binary_stars
	show_sound = event_scanner
	location = fromfrom
	
	is_triggered_only = yes

	option = { # How strange. Take it apart.
		name = distar.3041.a
		custom_tooltip = distar.3040.b.tooltip
		leader = { add_experience = 800 }
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
			add_monthly_resource_mult = {
				resource = minerals
				value = @tier1materialreward
				min = @tier1materialmin
				max = @tier1materialmax
			}
		}
	}

	option = { # Intriguing. Research it further.
		name = distar.3041.b
		custom_tooltip = distar.3041.b.tooltip
		leader = { add_experience = 800 }
		hidden_effect = {
			event_target:asteroid_target = {
				add_deposit = d_physics_7
			}
		}
	}
}

country_event = { # Spike in energy readings from a nearby solar system observed
	id = distar.3042
	title = "distar.3042.name"
	desc = "distar.3042.desc"
	picture = GFX_evt_wormhole
	show_sound = event_scanner
	location = event_target:system_one
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:system_one
	}

	immediate = {
		event_target:system_one = {
			event_target:system_two = {
				prev = {
					spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = yes
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
				link_wormholes = prev
			}
		}
	}

	option = { # How strange. Take it apart.
		name = distar.3041.a
		custom_tooltip = distar.3040.b.tooltip
		leader = { add_experience = 800 }
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier4researchreward
			min = @tier4researchmin
			max = @tier4researchmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
	}

	option = { # Intriguing. Research it further.
		name = distar.3041.b
		custom_tooltip = distar.3041.b.tooltip
		leader = { add_experience = 800 }
		hidden_effect = {
			event_target:asteroid_target = {
				add_deposit = d_physics_7
			}
		}
	}
}

### Orbital Speed Demon ###
ship_event = {
	id = distar.3050
	title = "distar.3050.name"
	desc = "distar.3050.desc"
	picture = GFX_evt_ship_in_orbit
	show_sound = event_scanner
	location = from

	is_triggered_only = yes

	immediate = {
		from = {
			save_event_target_as = speed_demon_orbit_body
		}
	}

	option = { # Try to slow it down.
		name = distar.3050.a
		custom_tooltip = distar.3050.a.tooltip
		hidden_effect = {
			ship_event = { id = distar.3051 days = 5 }
		}
	}

	option = { # Attempt to halt it.
		name = distar.3050.b
		custom_tooltip = distar.3050.b.tooltip
		hidden_effect = {
			ship_event = { id = distar.3051 days = 5 }
			owner = { set_country_flag = option_2 }
		}
	}

	option = { # Get away from it.
		name = distar.3050.c
		custom_tooltip = distar.3050.c.tooltip
		leader = { add_experience = 200 }
	}
}

ship_event = { # Success
	id = distar.3051
	title = "distar.3051.name"
	desc = {
		trigger = {
			hidden:owner = {
				switch = {
					trigger = has_country_flag
					option_2 = { text = distar.3051.desc.1 }
					default = { text = distar.3051.desc }
				}
			}
		}
	}
	picture = GFX_evt_ship_in_orbit
	show_sound = event_scanner
	trackable = yes
	
	is_triggered_only = yes

	option = { # Open it.
		name = distar.3051.a
		enable_special_project = {
			name = "speed_demon_open_box_project"
			location = root.owner.capital_scope
			owner = root.owner
		}
	}

	option = { # Learn more about it.
		name = distar.3051.b
		enable_special_project = {
			name = "speed_demon_learn_more_project"
			location = root.owner.capital_scope
			owner = root.owner
		}
		hidden_effect = {
			owner = { set_country_flag = alien_box_researched }
		}
	}

	option = { # Get rid of it.
		name = distar.3051.c
		custom_tooltip = distar.3051.c.tooltip
		leader = { add_experience = 300 }
	}
}

country_event = { # Alien Box opened
	id = distar.3055
	title = "distar.3055.name"
	desc = {
		trigger = {
			hidden:owner = {
				switch = {
					trigger = has_country_flag
					alien_box_researched = { text = distar.3055.desc.1 }
					default = { text = distar.3055.desc }
				}
			}
		}
	}
	picture = GFX_evt_genetic_modification
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	option = { # Use the red solution
		name = distar.3055.a
		custom_tooltip = distar.3055.a.tooltip
		hidden_effect = {
			if = {
				limit = {
					has_trait = trait_strong
				}
				modify_species = {
					species = this
					#remove_trait = trait_strong
					add_trait = trait_social_pheromones
				}
				set_country_flag = strong_removed_verystrong_added
			}
			else_if = {
				limit = {
					has_trait = trait_weak
				}
				modify_species = {
					species = this
					#remove_trait = trait_weak
					add_trait = trait_social_pheromones
				}
				set_country_flag = weak_removed_strong_added
			}
			else_if = {
				#limit = {
				#	NOR = {
				#		has_trait = trait_weak
				#		has_trait = trait_strong
				#		has_trait = trait_very_strong
				#	}
				#}
				modify_species = {
					species = this
					add_trait = trait_social_pheromones
				}
				set_country_flag = verystrong_added
			}
			set_country_flag = modification_stronger # actually socialer now, but keeping the flags
			country_event = { id = distar.3057 days = 5 }
		}
	}

	option = { # Use the green solution
		name = distar.3055.b
		custom_tooltip = distar.3055.b.tooltip
		hidden_effect = {
			if = {
				limit = {
					has_trait = trait_adaptive
				}
				modify_species = {
					species = this
					#remove_trait = trait_adaptive
					add_trait = trait_bioadaptability
				}
				set_country_flag = adaptive_removed_extremelyadaptive_added
			}
			if = {
				limit = {
					has_trait = trait_nonadaptive
				}
				modify_species = {
					species = this
					#remove_trait = trait_nonadaptive
					add_trait = trait_bioadaptability
				}
				set_country_flag = nonadaptive_removed_adaptive_added
			}
			if = {
				#limit = {
				#	NOR = {
				#		has_trait = trait_nonadaptive
				#		has_trait = trait_adaptive
				#		has_trait = trait_extremely_adaptive
				#	}
				#}
				modify_species = {
					species = this
					add_trait = trait_bioadaptability
				}
				set_country_flag = extremelyadaptive_added
			}
			set_country_flag = modification_adaptive
			country_event = { id = distar.3057 days = 5 }
		}
	}

	option = { # Use the blue solution
		name = distar.3055.c
		custom_tooltip = distar.3055.c.tooltip
		hidden_effect = {
			if = {
				limit = {
					has_trait = trait_enduring
				}
				modify_species = {
					species = this
					#remove_trait = trait_enduring
					add_trait = trait_limited_regeneration
				}
				set_country_flag = enduring_removed_venerable_added
			}
			else_if = {
				limit = {
					has_trait = trait_fleeting
				}
				modify_species = {
					species = this
					add_trait = trait_limited_regeneration
				}
				set_country_flag = fleeting_removed_enduring_added
			}
			else = {
				#limit = {
				#	NOR = {
				#		has_trait = trait_fleeting
				#		has_trait = trait_enduring
				#		has_trait = trait_venerable
				#	}
				#}
				modify_species = {
					species = this
					add_trait = trait_limited_regeneration
				}
				set_country_flag = venerable_added
			}
			set_country_flag = modification_longlived
			country_event = { id = distar.3057 days = 5 }
		}
	}

	option = { # Sell them
		name = distar.3055.d
		custom_tooltip = distar.3055.d.tooltip
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
	}
}

country_event = { # Alien Box researched
	id = distar.3056
	title = "distar.3056.name"
	desc = "distar.3056.desc"
	picture = GFX_evt_physics_research
	show_sound = event_scanner
	location = from
	trackable = yes
	
	is_triggered_only = yes

	option = { # Open it.
		name = distar.3056.a
		enable_special_project = {
			name = "speed_demon_open_box_project"
			location = root.owner.capital_scope
			owner = root.owner
		}
		custom_tooltip = distar.3056.a.tooltip
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier4researchreward
			min = @tier4researchmin
			max = @tier4researchmax
		}
	}

	option = { # Sell it.
		name = distar.3056.b
		custom_tooltip = distar.3056.b.tooltip
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		custom_tooltip = distar.3056.a.tooltip
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier3researchreward
			min = @tier3researchmin
			max = @tier3researchmax
		}
	}
}

country_event = { # Genetic modifications applied
	id = distar.3057
	title = "distar.3057.name"
	desc = {
		trigger = {
			hidden:owner = {
				switch = {
					trigger = has_country_flag
					modification_stronger = { text = distar.3057.desc.stronger }
					modification_adaptive = { text = distar.3057.desc.adaptive }
					modification_longlived = { text = distar.3057.desc.longlived }
					default = { text = distar.3057.desc }
				}
			}
		}
	}
	picture = GFX_evt_genetic_modification
	show_sound = event_scanner
	location = from
	
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		exclusive_trigger = {
			has_country_flag = strong_removed_verystrong_added
		}
		hidden_effect = { remove_country_flag = strong_removed_verystrong_added }
		tooltip = {
			modify_species = {
				species = this
				#remove_trait = trait_strong
				add_trait = trait_social_pheromones
			}
		}
	}

	option = {
		name = EXCELLENT
		exclusive_trigger = {
			has_country_flag = weak_removed_strong_added
		}
		hidden_effect = { remove_country_flag = weak_removed_strong_added }
		tooltip = {
			modify_species = {
				species = this
				#remove_trait = trait_weak
				add_trait = trait_social_pheromones
			}
		}
	}

	option = {
		name = EXCELLENT
		exclusive_trigger = {
			has_country_flag = verystrong_added
		}
		hidden_effect = { remove_country_flag = verystrong_added }
		tooltip = {
			modify_species = {
				species = this
				add_trait = trait_social_pheromones
			}
		}
	}

	option = {
		name = EXCELLENT
		exclusive_trigger = {
			has_country_flag = adaptive_removed_extremelyadaptive_added
		}
		hidden_effect = { remove_country_flag = adaptive_removed_extremelyadaptive_added }
		tooltip = {
			modify_species = {
				species = this
				#remove_trait = trait_adaptive
				add_trait = trait_bioadaptability
			}
		}
	}

	option = {
		name = EXCELLENT
		exclusive_trigger = {
			has_country_flag = nonadaptive_removed_adaptive_added
		}
		hidden_effect = { remove_country_flag = nonadaptive_removed_adaptive_added }
		tooltip = {
			modify_species = {
				species = this
				#remove_trait = trait_nonadaptive
				add_trait = trait_bioadaptability
			}
		}
	}

	option = {
		name = EXCELLENT
		exclusive_trigger = {
			has_country_flag = extremelyadaptive_added
		}
		hidden_effect = { remove_country_flag = extremelyadaptive_added }
		tooltip = {
			modify_species = {
				species = this
				add_trait = trait_bioadaptability
			}
		}
	}

	option = {
		name = EXCELLENT
		exclusive_trigger = {
			has_country_flag = enduring_removed_venerable_added
		}
		hidden_effect = { remove_country_flag = enduring_removed_venerable_added }
		tooltip = {
			modify_species = {
				species = this
				#remove_trait = trait_enduring
				add_trait = trait_limited_regeneration
			}
		}
	}

	option = {
		name = EXCELLENT
		exclusive_trigger = {
			has_country_flag = fleeting_removed_enduring_added
		}
		hidden_effect = { remove_country_flag = fleeting_removed_enduring_added }
		tooltip = {
			modify_species = {
				species = this
				#remove_trait = trait_fleeting
				add_trait = trait_limited_regeneration
			}
		}
	}

	option = {
		name = EXCELLENT
		exclusive_trigger = {
			has_country_flag = venerable_added
		}
		hidden_effect = { remove_country_flag = venerable_added }
		tooltip = {
			modify_species = {
				species = this
				add_trait = trait_limited_regeneration
			}
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			NOR = {
				has_country_flag = strong_removed_verystrong_added
				has_country_flag = weak_removed_strong_added
				has_country_flag = verystrong_added
				has_country_flag = adaptive_removed_extremelyadaptive_added
				has_country_flag = nonadaptive_removed_adaptive_added
				has_country_flag = extremelyadaptive_added
				has_country_flag = enduring_removed_venerable_added
				has_country_flag = fleeting_removed_enduring_added
				has_country_flag = venerable_added
			}
		}
	}
}

### Breathing Rift ###
ship_event = {
	id = distar.3060
	title = "distar.3060.name"
	desc = "distar.3060.desc"
	picture = GFX_evt_wormhole
	show_sound = event_scanner
	location = from

	is_triggered_only = yes

	immediate = {
		from = {
			save_event_target_as = breathing_rift_object
		}
	}

	option = { # Keep close watch until we know more.
		name = distar.3060.a
		custom_tooltip = distar.3060.a.tooltip
		enable_special_project = {
			name = "breathing_rift_project"
			location = root.owner.capital_scope
			owner = root.owner
		}
	}

	option = { # It can be studied from a safe distance.
		name = distar.3060.b
		event_target:breathing_rift_object = {
			add_deposit = d_physics_4
		}
	}

	option = { # Leave now.
		name = distar.3060.c
		leader = { add_experience = 300 }
	}
}

country_event = {
	id = distar.3061
	title = "distar.3061.name"
	desc = {
		trigger = {
			hidden:owner = {
				switch = {
					trigger = has_country_flag
					rift_spew_done = { text = distar.3061.desc.repeat }
					default = { text = distar.3061.desc }
				}
			}
		}
	}
	picture = GFX_evt_asteroid_field
	show_sound = event_scanner
	location = event_target:breathing_rift_object

	is_triggered_only = yes

	option = { # Excellent. Collect them swiftly.
		name = distar.3061.a
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		hidden_effect = {
			random_list = {
				25 = { country_event = { id = distar.3061 days = 100 random = 100 } }
				25 = { country_event = { id = distar.3062 days = 100 random = 100 } }
				50 = { country_event = { id = distar.3064 days = 100 random = 50 } }
			}
			set_country_flag = rift_spew_done
		}
	}
}

country_event = {
	id = distar.3062
	title = "distar.3062.name"
	desc = {
		trigger = {
			hidden:owner = {
				switch = {
					trigger = has_country_flag
					rift_spew_done = { text = distar.3062.desc.repeat }
					default = { text = distar.3062.desc }
				}
			}
		}
	}
	picture = GFX_evt_space_debris
	show_sound = event_scanner
	location = event_target:breathing_rift_object

	is_triggered_only = yes

	option = { # Excellent. Collect it swiftly.
		name = distar.3062.a
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier1researchreward
			min = @tier1researchmin
			max = @tier1researchmax
		}
		hidden_effect = {
			random_list = {
				25 = { country_event = { id = distar.3061 days = 100 random = 100 } }
				25 = { country_event = { id = distar.3062 days = 100 random = 100 } }
				50 = { country_event = { id = distar.3064 days = 100 random = 50 } }
			}
			set_country_flag = rift_spew_done
		}
	}
}

country_event = {
	id = distar.3064
	title = "distar.3064.name"
	desc = "distar.3064.desc"
	picture = GFX_evt_wormhole
	show_sound = event_scanner
	location = event_target:breathing_rift_object

	is_triggered_only = yes

	option = { # Unfortunate.
		name = distar.3064.a
		custom_tooltip = distar.3064.a.tooltip
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier3researchreward
			min = @tier3researchmin
			max = @tier3researchmax
		}
	}
}

#################################
#
# Distant Stars Events
# by Miranda van den Brink
#
#################################

####### VOIDSPAWN/HATCHLING EVENTS #######

# Gatekeeper Egg Planet Owner

planet_event = {
	id = distar.5000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_planet_flag = hatchling_egg
		NOR = {
			has_global_flag = hatchling_triggered
			has_planet_flag = hatchling_planet_owner_triggered
			owner = {
				is_at_war = yes
			}
		}
	}

	immediate = {
		planet_event = { id = distar.5010 days = 200 random = 100 }
		#planet_event = { id = distar.5010 days = 3 random = 1 }
		set_planet_flag = hatchling_planet_owner_triggered
	}
}

# Gatekeeper Egg Space Owner
event = {
	id = distar.5001
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		#any_system = {
			exists = event_target:hatchling_egg
			event_target:hatchling_egg = {
				NOR = {
					has_planet_flag = space_owner_triggered
					has_planet_flag = hatchling_planet_owner_triggered
					has_global_flag = hatchling_triggered
				}
				is_colony = no
				is_under_colonization = no
				solar_system = {
					exists = space_owner
				}
				# exists = starbase
			}
		#}
	}

	immediate = {
		event_target:hatchling_egg = {
			planet_event = { id = distar.5002 days = 200 random = 100 }
			#planet_event = { id = distar.5002 days = 2 random = 1 }
			set_planet_flag = space_owner_triggered
		}
	}
}

# EGG is pulsating

planet_event = {
	id = distar.5010
	title = distar.5010.name
	desc = distar.5010.desc
	picture = GFX_evt_animal_wildlife
	show_sound = event_radio_chatter
	location = event_target:hatchling_egg

	is_triggered_only = yes

	trigger = {
		NOT = {
			has_global_flag = hatchling_triggered
		}
		OR = {
			has_owner = yes
			solar_system = {
				exists = space_owner
			}
		}
	}
	immediate = {
		planet_event = { id = distar.5002 days = 100 random = 50 } # Triggers Next Stage
		#planet_event = { id = distar.5002 days = 2 random = 1 } # Triggers Next Stage
		set_timed_planet_flag = { # So that egg changes can't trigger right after egg puslating
			flag = pulse_triggered
			days = 95
			#days = 1
		}
	}
	option = {
		name = PECULIAR
	}
}


# EGG changes stage 1

planet_event = {
	id = distar.5002
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOR = {
			has_global_flag = hatchling_triggered
			has_planet_flag = pulse_triggered
		}
		is_under_colonization = no
		OR = {
			has_owner = yes
			solar_system = {
				exists = space_owner
			}
		}
	}
	immediate = {
		set_planet_entity = {
			entity = infected_planet_01_stage_1_entity
		}
		add_deposit = d_egg_cracking
		add_deposit = d_egg_cracking
		add_deposit = d_egg_cracking
		add_planet_devastation = 30
		if = {
			limit = {
				has_owner = yes
			}
			owner = { country_event = { id = distar.5003 } } # Triggers Notification
		}
		else_if = {
			limit = {
				solar_system = {
					has_owner = yes
				}
			}
			solar_system = { owner = { country_event = { id = distar.5003 } } } # Triggers Notification
		}

		if = {
			limit = { has_planet_flag = hatchling_will_trigger}
			planet_event = { id = distar.5004 days = 60 random = 100 } # Triggers Next Stage
			#planet_event = { id = distar.5004 days = 2 random = 1 } # Triggers Next Stage
		}
		else_if = {
			limit = {
				has_owner = yes
			}
			owner = { country_event = { id = distar.5013 days = 30 random = 60 } } # Triggers Next Stage if no hatchling
			#owner = { country_event = { id = distar.5013 days = 3 random = 1 } } # Triggers Next Stage if no hatchling
		}
		else_if = {
			limit = {
				solar_system = {
					has_owner = yes
				}
			}
			solar_system = { owner = { country_event = { id = distar.5013 days = 30 random = 60 } } } # Triggers Next Stage
			#solar_system = { owner = { country_event = { id = distar.5013 days = 3 random = 1 } } } # Triggers Next Stage
		}
		set_global_flag = hatchling_triggered
		add_modifier = {
			modifier = seismological_phenomena
			days = -1
		}
	}
}
# EGG Changes Notification
country_event = {
	id = distar.5003
	title = distar.5001.name
	desc = {
		text = distar.5001.desc.a
		trigger = {
			event_target:hatchling_egg = {
				is_owned_by = root
				is_under_colonization = no
			}
		}
	}
	desc = {
		text = distar.5001.desc.b
		trigger = {
			event_target:hatchling_egg = {
				solar_system = {
					is_owned_by = root
				}
			}
			NOT = {
				event_target:hatchling_egg = {
					is_owned_by = root
				}
			}
		}
	}
	picture = GFX_evt_news_room
	show_sound = event_radio_chatter
	location = event_target:hatchling_egg

	is_triggered_only = yes

	trigger = {
		event_target:hatchling_egg = {
			OR = {
				is_owned_by = root
				solar_system = {
					is_owned_by = root
				}
			}
		}
	}

	option = {
		name = distar.5001.a
		custom_tooltip = distar.5001.a.tooltip
	}
}

# Egg changes stage 2
planet_event = {
	id = distar.5004
	hide_window = yes

	is_triggered_only = yes
	immediate = {
		set_planet_entity = {
			entity = infected_planet_01_stage_2_entity
		}
		add_deposit = d_egg_cracking
		add_deposit = d_egg_cracking
		add_deposit = d_egg_cracking
		add_planet_devastation = 30

		remove_modifier = seismological_phenomena
		add_modifier = {
			modifier = seismological_phenomena_2
			days = -1
		}
		if = {
			limit = {
				has_owner = yes
			}
			owner = { country_event = { id = distar.5005 } } # Triggers Notification
		}
		else_if = {
			limit = {
				solar_system = {
					has_owner = yes
				}
			}
			solar_system = { owner = { country_event = { id = distar.5005 } } } # Triggers Notification
		}
		planet_event = { id = distar.50041 days = 20 random = 10 } # Silent entity change
		planet_event = { id = distar.5006 days = 60 random = 90 } # Triggers Next Stage
		#planet_event = { id = distar.5006 days = 3 random = 1 } # Triggers Next Stage
	}
}

planet_event = {
	id = distar.50041
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_planet_entity = {
			entity = infected_planet_01_stage_3_entity
		}
	}
}

# Egg changes stage 2 Notification
country_event = {
	id = distar.5005
	title = distar.5002.name
	desc = {
		text = distar.5002.desc.a
		trigger = {
			event_target:hatchling_egg = {
				is_owned_by = root
				is_under_colonization = no
			}
		}
	}
	desc = {
		text = distar.5002.desc.b
		trigger = {
			event_target:hatchling_egg = {
				solar_system = {
					is_owned_by = root
				}
			}
			NOT = {
				event_target:hatchling_egg = {
				is_owned_by = root
				}
			}
		}
	}
	picture = GFX_evt_news_room
	show_sound = event_radio_chatter
	location = event_target:hatchling_egg

	is_triggered_only = yes

	trigger = {
		event_target:hatchling_egg = {
			OR = {
				is_owned_by = root
				solar_system = {
					is_owned_by = root
				}
			}
		}
	}

	option = {
		name = distar.5002.a
		custom_tooltip = distar.5001.a.tooltip
	}
}

# Egg Hatches
planet_event = {
	id = distar.5006
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { exists = owner }
			owner = { save_global_event_target_as = egg_owner }
		}
		change_pc = pc_egg_cracked
		# spawn animation
		create_ambient_object = {
			type = voidspawn_spawn_animation_object
			entity_face_object = root.star
		}
		last_created_ambient_object = {
			set_location = {
				target = root
				distance = 2.2
				direction = in_system
			}
			save_event_target_as = voidspawn_spawn
		}
		destroy_colony = yes
		clear_deposits = yes
		add_deposit = d_society_10
		add_deposit = d_society_10

		remove_modifier = seismological_phenomena_2
		solar_system = {
			random_system_planet = {
				limit = { is_star = no }
				save_event_target_as = new_location
			}
		}
		# fleet spawn timing
		planet_event = { id = distar.50061 days = 70 }
		if = {
			limit = {
				exists = event_target:egg_owner
			}
			event_target:egg_owner = { 
				country_event = { id = distar.5007 } 
			} # Triggers Notification
		}
		else_if = {
			limit = {
				solar_system = {
					has_owner = yes
				}
			}
			solar_system = { owner = { country_event = { id = distar.5007 } } } # Triggers Notification
		}
	}
}

planet_event = {
	id = distar.50061
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		create_country = {
			name = "NAME_Voidspawn"
			type = guardian_hatchling
			flag = {
				icon = {
					category = "spherical"
					file = "flag_spherical_6.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = {
					"red"
					"red"
					"null"
					"null"
				}
			}
			effect = {
				if = {
					limit = {
						NOT = {
							has_modifier = hatchling_power
						}
					}
					add_modifier = {
						modifier = hatchling_power
						days = -1
					}
				}
				save_global_event_target_as = hatchling_country
				set_country_flag = hatchling_country
				every_playable_country = {
					establish_communications_no_message = event_target:hatchling_country
				}
				create_fleet = {
					name = "NAME_Voidspawn"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						#set_owner = event_target:hatchling_country
						set_owner = prev
						create_ship = {
							name = "NAME_Voidspawn"
							design = "NAME_Voidspawn"
							effect = {
								set_ship_flag = hatchling_ship
								save_global_event_target_as = hatchling
								set_disabled = no
							}
						}
						save_global_event_target_as = hatchling_fleet
						set_location = {
							target = root
							distance = 0
							angle = 90
							direction = in_system
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self #or return_point
						set_aggro_range = 300
						auto_move_to_planet = {
							target = event_target:new_location
							clear_auto_move_on_arrival = no	# distar.5008 sets a new auto move target
						}
					}
				}
			}
		}
		event_target:voidspawn_spawn = { destroy_ambient_object = this }
	}
}



# Egg Hatches Notification
country_event = {
	id = distar.5007
	title = distar.5003.name
	desc = {
		text = distar.5003.desc.a
		trigger = {
			event_target:hatchling_egg = {
				is_under_colonization = no
			}
			exists = event_target:egg_owner
			root = {
				is_same_value = event_target:egg_owner
			}
		}
	}
	desc = {
		text = distar.5003.desc.b
		trigger = {
			event_target:hatchling_egg = {
				solar_system = {
					is_owned_by = root
				}
			}
			NOT = {
				event_target:hatchling_egg = {
					is_owned_by = root
				}
			}
		}
	}
	picture = GFX_evt_voidspawn
	show_sound = event_radio_chatter
	location = event_target:hatchling_egg

	is_triggered_only = yes

	trigger = {
		event_target:hatchling_egg = {
			OR = {
				AND = {
					exists = event_target:egg_owner
					root = {
						is_same_value = event_target:egg_owner
					}
				}
				solar_system = {
					is_owned_by = root
				}
			}
		}
	}

	immediate = {
		set_country_flag = encountered_hatchling
	}

	option = {
		name = distar.5003.a
	}
}

# Egg Interrupted: End Chain
country_event = {
	id = distar.5013
	title = distar.5013.name
	desc = {
		text = distar.5013.desc.a
		trigger = {
			event_target:hatchling_egg = {
				is_under_colonization = no
				is_owned_by = root
			}
		}
	}
	desc = {
		text = distar.5013.desc.b
		trigger = {
			event_target:hatchling_egg = {
				solar_system = {
					is_owned_by = root
				}
				NOT = {
					is_owned_by = root
				}
			}
		}
	}
	picture = GFX_evt_news_room
	show_sound = event_radio_chatter
	location = event_target:hatchling_egg

	is_triggered_only = yes

	trigger = {
		event_target:hatchling_egg = {
			OR = {
				AND = {
					exists = event_target:egg_owner
					root = {
						is_same_value = event_target:egg_owner
					}
				}
				solar_system = {
					is_owned_by = root
				}
			}
		}
	}

	immediate = {
		event_target:hatchling_egg = {
			if = {
				limit = {
					has_modifier = seismological_phenomena
				}
				remove_modifier = seismological_phenomena
			}
			else_if = {
				limit = {
					has_modifier = seismological_phenomena_2
				}
				remove_modifier = seismological_phenomena_2
			}
			if = {
				limit = {
					has_deposit = d_egg_cracking
				}
				add_modifier = {
					modifier = egg_rifts
					days = -1
				}
				set_planet_flag = egg_interrupted
			}
		}	 
	}

	option = {
		name = distar.5013.a
		trigger = {
			event_target:hatchling_egg = {
				solar_system = {
					is_owned_by = root
				}
				NOT = {
					is_owned_by = root
				}
			}
		}
		tooltip = {
			event_target:hatchling_egg = {
				if = {
					limit = {
						has_modifier = seismological_phenomena
					}
					remove_modifier = seismological_phenomena
				}
				else_if = {
					limit = {
						has_modifier = seismological_phenomena_2
					}
					remove_modifier = seismological_phenomena_2
				}
			}
		}
	}

	option = {
		name = distar.5013.b
		trigger = {
			event_target:hatchling_egg = {
				is_under_colonization = no
				is_owned_by = root
			}
		}
		tooltip = {
			event_target:hatchling_egg = {
				if = {
					limit = {
						has_modifier = seismological_phenomena
					}
					remove_modifier = seismological_phenomena
				}
				else_if = {
					limit = {
						has_modifier = seismological_phenomena_2
					}
					remove_modifier = seismological_phenomena_2
				}
			}
		}
	}
}

# All Rifts Removed 
event = {
	id = distar.5014
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = event_target:hatchling_egg
		event_target:hatchling_egg = {
			has_planet_flag = egg_interrupted
			NOR = {
				has_planet_flag = rifts_removed
				has_deposit = d_egg_cracking
			}
		}
	}
	immediate = {
		event_target:hatchling_egg = {
			switch = {
				trigger = is_planet_class
				pc_savannah = { set_planet_entity = { entity = pc_savannah } }
				pc_desert = { set_planet_entity = { entity = pc_desert } }
				pc_desert = { set_planet_entity = { entity = pc_desert } }
			}
			owner = {
				country_event = { id = distar.5015 }
			}
			set_planet_flag = rifts_removed
			remove_modifier = egg_rifts
		}
	}
}

# All Rifts Removed Notification
country_event = {
	id = distar.5015
	title = distar.5014.name
	desc = distar.5014.desc
	picture = GFX_evt_news_room
	show_sound = event_radio_chatter
	location = event_target:hatchling_egg

	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

# Hatchling Moves
country_event = {
	id = distar.5008
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = event_target:hatchling_country
		exists = event_target:hatchling
		is_same_value = event_target:hatchling_country
		from = {
			is_same_value = event_target:hatchling_fleet
		}
	}

	immediate = {
		from.solar_system = {
			random_system_planet = {
				limit = {
					NOT = { is_same_value = root.from.orbit }
				}
				save_event_target_as = new_location
			}
		}
		from = {
			auto_move_to_planet = {
				target = event_target:new_location
				clear_auto_move_on_arrival = no		# distar.5008 sets a new auto move target
			}
		}
	}
}

# Fleet Enters Hatchling System
# Entering System
fleet_event = {
	id = distar.5011
	title = "distar.5011.name"
	desc = "distar.5011.desc"
	picture = GFX_evt_voidspawn
	show_sound = event_activating_unknown_technology
	location = event_target:hatchling_system
	
	is_triggered_only = yes
	trigger = {
		owner = {
			NOT = { has_country_flag = encountered_hatchling }
		}
		FROM = {
			any_ship_in_system = {
				exists = owner
				owner = {
					is_country_type = guardian_hatchling
				}
			}
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = encountered_hatchling
			establish_communications_no_message = event_target:hatchling_country
			country_event = { id = story.8 days = 15 }
		}
	}
	option = {
		name = distar.5011.a
	}
	option = {
		name = distar.5011.b
	}
}


# Killed Hatchling
country_event = {
	id = distar.5009
	title = distar.5009.name
	desc = distar.5009.desc
	picture = GFX_evt_voidspawn
	show_sound = event_space_whale
	location = event_target:slain_guardian_system
	trackable = yes

	is_triggered_only = yes

	trigger = {
		from = { has_country_flag = hatchling_country }
	}

	immediate = {
		set_country_flag = hatchling_killed # Achievement flag
		set_country_flag = killed_hatchling
		fromfrom.solar_system = {
			save_event_target_as = slain_guardian_system
		}
		every_playable_country = {
			limit = {
				has_event_chain = curator_poi_chain
				event_target:slain_guardian_system = {
					is_point_of_interest = {
						id = curator_poi_hatchling
						event_chain = curator_poi_chain
						owner = prev
					}
				}
			}
			remove_point_of_interest = curator_poi_hatchling
			end_curator_chain = yes
		}
	}

	option = {
		name = distar.5009.a
		event_target:hatchling_egg = {
			enable_special_project = {
				name = SHATTERED_EGG
  				location = this
  				owner = root
			}
		}
		if = {
			limit = {
				exists = event_target:egg_owner
				is_same_value = event_target:egg_owner
			}
			add_monthly_resource_mult = {
 				resource = unity
				value = 72
				min = 600 
				max = 6000
  			}
		}
		else_if = {
			limit = {
				OR = {
					NOT = {
						exists = event_target:egg_owner
					}
					AND = {
						exists = event_target:egg_owner
						is_same_value = event_target:egg_owner
					}
				}
			}
			add_monthly_resource_mult = {
 				resource = unity
				value = @tier2unityreward
				min = @tier2unitymin
				max = @tier2unitymax
  			}
		}
	}

	option = {
		name = distar.5009.b
		if = {
			limit = {
				exists = event_target:egg_owner
				is_same_value = event_target:egg_owner
			}
			add_monthly_resource_mult = {
 				resource = unity
				value = 72
				min = 600 
				max = 6000
  			}
		}
		else_if = {
			limit = {
				NOR = {
					exists = event_target:egg_owner
					is_same_value = event_target:egg_owner
				}
			}
			add_monthly_resource_mult = {
 				resource = unity
				value = @tier2unityreward
				min = @tier2unitymin
				max = @tier2unitymax
  			}
		}
	}
}

country_event = {
	id = distar.5012
	title = distar.5012.name
	desc = distar.5012.desc
	picture = GFX_evt_voidspawn
	show_sound = event_laboratory_sound
	location = event_target:hatchling_egg

	is_triggered_only = yes

	option = {
		name = EXCELLENT
		add_research_option = tech_gargantuan_evolution
		add_tech_progress = {
			tech = tech_gargantuan_evolution
			progress = 0.3
		}
	}
}

#################################
#
# Distant Stars events
#
# distar.8000 - distar.19999
#
#################################

# Randomize L-Cluster outcome on_game_start
event = {
	id = distar.8000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_list = {
			50 = {
				set_global_flag = gray_goo_crisis_set
				set_global_flag = active_gray_goo
			}
			30 = {}
			30 = { set_global_flag = dragon_season }
			30 = { set_global_flag = gray_goo_empire_set }
		}
	}
}

# Injected cluenomaly followup
country_event = {
	id = distar.9000
	title = distar.9000.name
	desc = {
		trigger = {
			has_country_flag = lcluster_clue_sonic
		}
		text = distar.9000.lcluster_clue_sonic
	}
	desc = {
		trigger = {
			has_country_flag = lcluster_clue_desc_1
		}
		text = distar.9000.lcluster_clue_desc_1
	}
	desc = {
		trigger = {
			has_country_flag = lcluster_clue_desc_2
		}
		text = distar.9000.lcluster_clue_desc_2
	}
	desc = {
		trigger = {
			has_country_flag = lcluster_clue_desc_3
		}
		text = distar.9000.lcluster_clue_desc_3
	}
	desc = distar.9000.fallback
	picture = GFX_evt_drifting_gateway
	location = capital_scope

	is_triggered_only = yes

	# immediate is run before window is drawn,
	# might be safest to remove flags in AFTER?

	after = {
		hidden_effect = {
			switch = {
				trigger = has_country_flag
				lcluster_clue_sonic = { remove_country_flag = lcluster_clue_sonic }
				lcluster_clue_desc_1 = { remove_country_flag = lcluster_clue_desc_1 }
				lcluster_clue_desc_2 = { remove_country_flag = lcluster_clue_desc_2 }
				lcluster_clue_desc_3 = { remove_country_flag = lcluster_clue_desc_3 }
			}
		}
	}

	option = {
		name = FORTUITOUS
		generate_lcluster_clue = yes
	}
}

# check for gateway within borders
country_event = {
	id = distar.10900
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				any_owned_megastructure = {
					is_megastructure_type = lgate_base
				}
			}
			random_owned_megastructure = {
				limit = {
					is_megastructure_type = lgate_base
				}
				save_event_target_as = candidate_gateway
			}
			country_event = { id = distar.10905 } # enable project
		}
		else = {
			country_event = { id = distar.10901 } # looping check
		}
	}
}

# does not have gateway
country_event = {
	id = distar.10901
	title = "distar.10901.title"
	desc = "distar.10901.desc"
	picture = GFX_evt_binary_stars
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	option = {
		name = "distar.10901.a"
		hidden_effect = {
			set_country_flag = candiate_gateway_looping_check
			country_event = { id = distar.10902 days = 60 }
		}
	}

	option = {
		name = "distar.10901.b"
		liquidate_clues = yes
	}
}

# looping check for owning gateway, once every two months
country_event = {
	id = distar.10902
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = l_cluster_opened }
	}

	immediate = {
		if = {
			limit = {
				any_owned_megastructure = {
					is_megastructure_type = lgate_base
				}
				has_technology = tech_lgate_activation
			}
			random_owned_megastructure = {
				limit = {
					is_megastructure_type = lgate_base
				}
				save_event_target_as = candidate_gateway
			}
			country_event = { id = distar.10905 } # enable project
		}
		else = {
			country_event = { id = distar.10902 days = 60 } # *THIS* looping check
		}
	}
}

# Researched L-Gate tech
country_event = {
	id = distar.10903
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		last_increased_tech = tech_lgate_activation
		NOT = { has_global_flag = l_cluster_opened }
	}

	immediate = {
		country_event = { id = distar.10900 }
	}
}

# Technology available upon gaining all insights
country_event = {
	id = distar.10904
	title = "distar.10904.name"
	desc = "distar.10904.desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	immediate = {
		observer_event = { id = observer.61 }
	}

	option = {
		name = GOOD
		add_research_option = tech_lgate_activation
	}
}

# Project available
country_event = {
	id = distar.10905
	title = "distar.10905.name"
	desc = "distar.10905.desc"
	picture = GFX_evt_l-gateway
	show_sound = event_mystic_reveal
	location = event_target:candidate_gateway

	is_triggered_only = yes

	immediate = {
		end_event_chain = "l_cluster_chain"
		event_target:candidate_gateway = {
			solar_system = { save_event_target_as = candidate_gateway_system }
		}
	}

	option = {
		name = "distar.10905.a"
		event_target:candidate_gateway = {
			enable_special_project = {
				name = LCLUSTER_PROJECT
				location = this
			}
		}
	}
}

country_event = {
	id = distar.10950
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_country_flag = lcluster_opener
		set_global_flag = l_cluster_opened
		# spawn L-Cluster
		country_event = { id = distar.11000 }
		# enable L-Gate
		from.solar_system = {
			if = {
				# flag prevents the Tempest from using this gate,
				# do not set the flag if there's only one l-gate system
				limit = {
					any_system = {
						has_star_flag = lgate
						NOT = { is_same_value = prev }
					}
				}
				set_star_flag = lgate_originating_system
			}
			else = {
				root = { set_country_flag = only_one_lgate }
			}
			random_system_megastructure = {
				limit = {
					is_megastructure_type = lgate_base
					NOT = { has_megastructure_flag = lgate_activated }
				}
				activate_gateway = this
				set_megastructure_flag = lgate_activated
			}
		}
		# outcome, to be determined at game start
		if = {
			limit = { has_global_flag = gray_goo_crisis_set }
			country_event = { id = graygoo.1 }
			every_megastructure = {
				limit = {
					is_megastructure_type = lgate_base
					NOT = { has_megastructure_flag = lgate_activated }
				}
				activate_gateway = this
				set_megastructure_flag = lgate_activated
			}
		}
		else_if = {
			limit = { has_global_flag = dragon_season }
			country_event = { id = distar.13000 }
		}
		else_if = {
			limit = { has_global_flag = gray_goo_empire_set }
			country_event = { id = graygoo.100 }
		}
		else = {
			country_event = { id = distar.10951 }
			# enable other L-Gates over time
			random_country = {
				limit = { is_country_type = global_event }
				country_event = { id = distar.10960 days = 200 random = 500 }
			}
		}
		# activated terminal egress l-gate
		event_target:lcluster1 = {
			random_system_megastructure = {
				activate_gateway = this
				set_megastructure_flag = lgate_activated
			}
		}
		set_global_flag = lgates_activated_globally
		every_playable_country = {
			if = {
				limit = { is_researching_technology = tech_lgate_activation }
				give_technology = {
					tech = tech_lgate_activation
					message = no
				}
			}
		}
	}
}

# Abandoned Cluster Found
country_event = {
	id = distar.10951
	title = "distar.10951.name"
	desc = "distar.10951.desc"
	picture = GFX_evt_l-gateway
	show_sound = event_activating_unknown_technology
	location = event_target:candidate_gateway

	is_triggered_only = yes

	immediate = {
		country_event = { id = distar.11000 }
		every_playable_country = {
			limit = {
				has_special_project = LCLUSTER_PROJECT
				NOT = { is_same_value = root }
			}
			country_event = { id = distar.10952 }
		}
		every_playable_country = {
			limit = {
				NOR = {
					has_event_chain = l_cluster_chain
					has_special_project = LCLUSTER_PROJECT
					is_same_value = root 
				}
			}
			country_event = { id = distar.10954 }
		}
		every_playable_country = {
			limit = {
				NOR = {
					has_special_project = LCLUSTER_PROJECT
					is_same_value = root 
				}
				has_event_chain = l_cluster_chain
			}
			country_event = { id = distar.10953 }
		}
		observer_event = { id = observer.62 }
	}

	option = {
		name = "distar.10951.a"
	}
}

# Research Project Aborted
country_event = {
	id = distar.10952
	title = "distar.10952.name"
	desc = "distar.10952.desc"
	picture = GFX_evt_glitchy_matrix
	show_sound = event_alien_signal
	
	is_triggered_only = yes

	immediate = {
		abort_special_project = { type = LCLUSTER_PROJECT }
	}

	option = {
		name = "distar.10952.a"
	}
}

# Other Country Informed (has chain)
country_event = {
	id = distar.10953
	title = "distar.10953.name"
	desc = "distar.10953.desc"
	picture = GFX_evt_surreal_visions
	show_sound = event_alien_signal

	is_triggered_only = yes

	immediate = {
		liquidate_clues = yes
		end_event_chain = "l_cluster_chain"
	}

	option = {
		name = "distar.10953.a"
	}
}

# Other Country Informed (has nothing)
country_event = {
	id = distar.10954
	title = "distar.10953.name"
	desc = "distar.10954.desc"
	picture = GFX_evt_surreal_visions
	show_sound = event_alien_signal

	is_triggered_only = yes

	option = {
		name = FASCINATING
	}
}

# Informed about AI being close to opening L-Gate (HIDDEN)
event = {
	id = distar.10955
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		any_playable_country = {
			is_ai = no
			OR = {
				has_event_chain = l_cluster_chain
				has_special_project = LCLUSTER_PROJECT
			}
			any_relation = {
				is_country_type = default
				has_communications = prev
				has_event_chain = l_cluster_chain
				NOT = { has_country_flag = lgate_warned@prev }
				check_variable = {
					which = num_lcluster_clues
					value > 5
				}
				any_owned_megastructure = { is_megastructure_type = lgate_base }
			}
		}
	}

	immediate = {
		random_playable_country = {
			limit = {
				is_ai = no
				OR = {
					has_event_chain = l_cluster_chain
					has_special_project = LCLUSTER_PROJECT
				}
				any_relation = {
					is_country_type = default
					has_communications = prev
					has_event_chain = l_cluster_chain
					NOT = { has_country_flag = lgate_warned@prev }
					check_variable = {
						which = num_lcluster_clues
						value > 5
					}
					any_owned_megastructure = { is_megastructure_type = lgate_base }
				}
			}
			random_relation = {
				limit = {
					is_country_type = default
					has_communications = prev
					has_event_chain = l_cluster_chain
					NOT = { has_country_flag = lgate_warned@prev }
					check_variable = {
						which = num_lcluster_clues
						value > 5
					}
					any_owned_megastructure = { is_megastructure_type = lgate_base }
				}
				save_event_target_as = lgate_warning_country
				set_country_flag = lgate_warned@prev
			}
			country_event = { id = distar.10956 }
		}
	}
}

# Informed about AI being close to opening L-Gate
country_event = {
	id = distar.10956
	title = "distar.10956.name"
	desc = "distar.10956.desc"
	picture = GFX_evt_l-gateway
	show_sound = event_radio_chatter

	is_triggered_only = yes

	option = {
		name = distar.10956.a
	}
}

# Enable L-Gates over time
country_event = {
	id = distar.10960
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		any_megastructure = {
			is_megastructure_type = lgate_base
		}
	}

	immediate = {
		random_megastructure = {
			limit = {
				is_megastructure_type = lgate_base
				NOT = { has_megastructure_flag = lgate_activated }
			}
			activate_gateway = this
			set_megastructure_flag = lgate_activated
		}
		country_event = { id = distar.10960 days = 200 random = 500 }
	}
}

# spawn l-cluster
country_event = {
	id = distar.11000
	hide_window = yes

	is_triggered_only = yes

	fire_only_once = yes

	immediate = {
		set_spawn_system_batch = begin
		# batch-processes the spawn_system effects between "begin" and "end",
		# so caches are recalculated only once rather than for every system spawned
		# can also be used when removing and adding hyperlanes
		no_scope = {
			# makes system positions originate from galactic core
			spawn_system = {
				min_distance >= 550
				max_distance <= 560
				min_orientation_angle = 44
				max_orientation_angle = 46
				initializer = distantstars_init_01
			}
			random_system = {
				limit = { has_star_flag = lcluster1 }
				save_global_event_target_as = lcluster1
				spawn_system = {
					min_distance >= 29
					max_distance <= 31
					min_orientation_angle = 24
					max_orientation_angle = 66
					initializer = distantstars_init_02
				}
				spawn_system = {
					min_distance >= 29
					max_distance <= 31
					min_orientation_angle = 114
					max_orientation_angle = 156
					initializer = distantstars_init_03
				}
				spawn_system = {
					min_distance >= 30
					max_distance <= 60
					min_orientation_angle = 340
					max_orientation_angle = 20
					initializer = distantstars_init_01b
				}
			}
			random_system = {
				limit = { has_star_flag = lcluster2 }
				save_global_event_target_as = lcluster2
				spawn_system = {
					min_distance >= 30
					max_distance <= 60
					min_orientation_angle = 0
					max_orientation_angle = 40
					initializer = distantstars_init_02b
				}
			}
			random_system = {
				limit = { has_star_flag = lcluster3 }
				save_global_event_target_as = lcluster3
				spawn_system = {
					min_distance >= 20
					max_distance <= 30
					min_orientation_angle = 24
					max_orientation_angle = 66
					initializer = distantstars_init_04
				}
				spawn_system = {
					min_distance >= 10
					max_distance <= 50
					min_orientation_angle = 250
					max_orientation_angle = 290
					initializer = distantstars_init_03b
				}
			}
			random_system = {
				limit = { has_star_flag = lcluster4 }
				save_global_event_target_as = lcluster4
				spawn_system = {
					min_distance >= 5
					max_distance <= 10
					min_orientation_angle = 250
					max_orientation_angle = 290
					initializer = distantstars_init_05
				}
				spawn_system = {
					min_distance >= 30
					max_distance <= 60
					min_orientation_angle = 20
					max_orientation_angle = 160
					initializer = distantstars_init_04b
				}
			}
		}
		
		random_system = {
			limit = { has_star_flag = lcluster5 }
			save_global_event_target_as = lcluster5
		}
		random_system = {
			limit = { has_star_flag = lcluster1b }
			save_global_event_target_as = lcluster1b
		}
		random_system = {
			limit = { has_star_flag = lcluster2b }
			save_global_event_target_as = lcluster2b
		}
		random_system = {
			limit = { has_star_flag = lcluster3b }
			save_global_event_target_as = lcluster3b
		}
		random_system = {
			limit = { has_star_flag = lcluster4b }
			save_global_event_target_as = lcluster4b
		}
	
		# clear all hyperlanes to and within the cluster
		every_system = {
			limit = { has_star_flag = lcluster }
			isolate_system = yes
		}
	
		# add hyperlanes
		event_target:lcluster5 = {
			add_hyperlane = {
				from = event_target:lcluster5
				to = event_target:lcluster4
			}
		}
		event_target:lcluster4 = {
			add_hyperlane = {
				from = event_target:lcluster4
				to = event_target:lcluster3
			}
			add_hyperlane = {
				from = event_target:lcluster4
				to = event_target:lcluster2
			}
			add_hyperlane = {
				from = event_target:lcluster4
				to = event_target:lcluster4b
			}
		}
		event_target:lcluster3 = {
			add_hyperlane = {
				from = event_target:lcluster3
				to = event_target:lcluster1
			}
			add_hyperlane = {
				from = event_target:lcluster3
				to = event_target:lcluster3b
			}
		}
		event_target:lcluster2 = {
			add_hyperlane = {
				from = event_target:lcluster2
				to = event_target:lcluster1
			}
			add_hyperlane = {
				from = event_target:lcluster2
				to = event_target:lcluster3
			}
			add_hyperlane = {
				from = event_target:lcluster2
				to = event_target:lcluster2b
			}
		}
	
		event_target:lcluster1 = {
			add_hyperlane = {
				from = event_target:lcluster1
				to = event_target:lcluster1b
			}
		}
		event_target:lcluster1b = {
			add_hyperlane = {
				from = event_target:lcluster1b
				to = event_target:lcluster2b
			}
		}
		set_spawn_system_batch = end
	}
}

#hip_event = {
#	id = distar.11002
#	title = action.92.name
#	desc = {
#		trigger = {
#			success_text = {
#				text =							 distar.11002.nanodust
#				hidden:from = { has_resource = { type = sr_distar_nanodust amount > 0 } }
#			}
#			success_text = {
#				text =							 distar.11002.nanocrystal
#				hidden:from = { has_resource = { type = sr_distar_nanocrystal amount > 0 } }
#			}
#			success_text = {
#				text =							 distar.11002.nanoscale
#				hidden:from = { has_resource = { type = sr_distar_nanoscale amount > 0 } }
#			}
#			success_text = {
#				text =							 distar.11002.nanoactuator
#				hidden:from = { has_resource = { type = sr_distar_nanoactuator amount > 0 } }
#			}
#		}
#	}
#	picture = GFX_evt_surreal_visions
#	show_sound = event_default
#	location = from
#
#	is_triggered_only = yes
#
#	trigger = {
#		from = { has_strategic_resource = yes } # basically a pre-trigger
#		owner = {
#			OR = {
#				AND = {
#					root.from = {
#						has_resource = {
#							amount > 0
#									type = 	sr_distar_nanodust
#						}
#					}
#					NOT = {
#						has_country_flag = 	   distar_nanodust_found
#					}
#				}
#				AND = {
#					root.from = {
#						has_resource = {
#							amount > 0
#									type = 	sr_distar_nanocrystal
#						}
#					}
#					NOT = {
#						has_country_flag = 	   distar_nanocrystal_found
#					}
#				}
#				AND = {
#					root.from = {
#						has_resource = {
#							amount > 0
#									type = 	sr_distar_nanoscale
#						}
#					}
#					NOT = {
#						has_country_flag = 	   distar_nanoscale_found
#					}
#				}
#				AND = {
#					root.from = {
#						has_resource = {
#							amount > 0
#									type = 	sr_distar_nanoactuator
#						}
#					}
#					NOT = {
#						has_country_flag = 	   distar_nanoactuator_found
#					}
#				}
#			}
#		}
#	}
#
#	immediate = {
#		from = {
#			if = {
#				limit = { has_resource = { type = sr_distar_nanodust amount > 0 } }
#				root.owner = { set_country_flag =	distar_nanodust_found }
#			}
#			else_if = {
#				limit = { has_resource = { type = sr_distar_nanocrystal amount > 0 } }
#				root.owner = { set_country_flag =	distar_nanocrystal_found }
#			}
#			else_if = {
#				limit = { has_resource = { type = sr_distar_nanoscale amount > 0 } }
#				root.owner = { set_country_flag =	distar_nanoscale_found }
#			}
#			else_if = {
#				limit = { has_resource = { type = sr_distar_nanoactuator amount > 0 } }
#				root.owner = { set_country_flag =	distar_nanoactuator_found }
#			}
#		}
#	}
#
#	option = {
#		name = OK
#		from = {
#			hidden_effect = {
#				if = {
#					limit = { has_resource = { type = sr_distar_nanodust amount > 0 } }
#					custom_tooltip = distar.11002.nanodust.tooltip
#				}
#				else_if = {
#					limit = { has_resource = { type = sr_distar_nanocrystal amount > 0 } }
#					custom_tooltip = distar.11002.nanocrystal.tooltip
#				}
#				else_if = {
#					limit = { has_resource = { type = sr_distar_nanoscale amount > 0 } }
#					custom_tooltip = distar.11002.nanoscale.tooltip
#				}
#				else_if = {
#					limit = { has_resource = { type = sr_distar_nanoactuator amount > 0 } }
#					custom_tooltip = distar.11002.nanoactuator.tooltip
#				}
#			}
#		}
#	}
#}

# Curator Buy Clue Menu
country_event = {
	id = distar.11501
	title = distar.11501.name
	desc = distar.11501.desc
	
	is_triggered_only = yes
	diplomatic = yes
	custom_gui = "enclave_curator_window"

	picture_event_data = {
		portrait = event_target:curators
		room = enclave_curator_room
	}

	immediate = {
		set_country_flag = curator_enclave_diplomacy_engaged
		event_target:curators = {
			owner_species = { save_event_target_as = curator_species }
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = curator_enclave_diplomacy_engaged
		}
	}

	option = {
		name = distar.11501.a
		custom_gui = "enclave_curator_option"
		allow = {
			resource_stockpile_compare = { resource = energy value >= 5000 }
			hidden_trigger = {
				NOR = {
					has_completed_event_chain_counter = {
						event_chain = l_cluster_chain
						counter = clues
					}
					has_country_flag = curator_clue_purchased
				}
			}
		}
		add_resource = { energy = -5000 }
		custom_tooltip = opinion20
		generate_lcluster_clue = yes
		hidden_effect = {
			event_target:curators = {
				add_trust = {
					who = root
					amount = 20
				}
			}
			random_list = {
				1 = {
					set_timed_country_flag = {
						flag = curator_clue_purchased
						days = 4680 # 13 years
					}
				}
				1 = {
					set_timed_country_flag = {
						flag = curator_clue_purchased
						days = 3600 # 10 years
					}
				}
				1 = {
					set_timed_country_flag = {
						flag = curator_clue_purchased
						days = 2520 # 7 years
					}
				}
			}
		}
	}
	option = { # Back
		name = leviathans.506.d
		custom_gui = "enclave_curator_option"
		hidden_effect = {
			country_event = { id = leviathans.505 }
		}
	}
	option = { # Sign Off
		name = leviathans.506.e
		custom_gui = "enclave_curator_option"
		default_hide_option = yes
	}
}

# researched clue
country_event = {
	id = distar.12000
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		last_increased_tech = tech_repeatable_lcluster_clue
	}

	immediate = {
		generate_lcluster_clue = yes
	}
}

# Dragons!
# fired from opening event
country_event = {
	id = distar.13000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_country = {
			name = "NAME_Spawning_Dragons"
			type = ldragon_country
			effect = {
				save_global_event_target_as = spawning_dragons
				every_playable_country = {
					establish_communications_no_message = prev
				}
			}
		}
		while = {
			limit = {
				any_system = {
					any_system_megastructure = {
						is_megastructure_type = lgate_base
						NOT = { has_megastructure_flag = lgate_activated }
					}
				}
			}
			random_system = {
				limit = {
					any_system_megastructure = {
						is_megastructure_type = lgate_base
						NOT = { has_megastructure_flag = lgate_activated }
					}
				}
				# flip L-Gates
				random_system_megastructure = {
					limit = {
						is_megastructure_type = lgate_base
						NOT = { has_megastructure_flag = lgate_activated }
					}
					activate_gateway = this
					set_megastructure_flag = lgate_activated
				}
				# set dragon spawning grounds
				closest_system = {
					min_steps = 3
					limit = {
						NOR = {
							has_star_flag = dragon_point
							any_system_planet = { is_colony = yes }
						}
					}
					set_star_flag = dragon_point
				}
			}
		}
		# notify those without l-gate systems
		every_playable_country = {
			limit = {
				NOT = { any_system_within_border = { has_star_flag = lgate } }
			}
			country_event = { id = distar.13011 }
		}
		while = {
			limit = {
				any_system = {
					has_star_flag = lgate
					NOT = { has_star_flag = young_dragon_spawned }
				}
			}
			random_system = {
				limit = {
					has_star_flag = lgate
					NOT = { has_star_flag = young_dragon_spawned }
				}
				set_star_flag = young_dragon_spawned
				random_system_megastructure = {
					closest_system = {
						min_steps = 3
						limit = {
							has_star_flag = dragon_point
							NOT = { has_star_flag = dragon_point_picked }
						}
						set_star_flag = dragon_point_picked
						# notify re: destination
						if = {
							limit = {
								prevprev = {
									exists = owner
								}
							}
							save_event_target_as = dragons_target
							prevprev = {
								save_event_target_as = dragons_current_system
								owner = {
									if = {
										limit = { NOT = { is_same_value = root } }
										set_country_flag = knows_ldragon
										country_event = { id = distar.13010 }
									}
									else = {
										root = { country_event = { id = distar.13010 } }
									}
								}
							}
						}
						star = {
							create_fleet = {
								name = "NAME_Young_Dragon"
								settings = {
									is_boss = yes
									spawn_debris = no
									can_upgrade = no
									can_disband = yes
									can_change_composition = no
									can_change_leader = no
									uses_naval_capacity = no
								}
								effect = {
									set_owner = event_target:spawning_dragons
									create_ship = {
										design = "NAME_Nanite_Dragon"
										name = "NAME_Young_Dragon"
										prefix = no
										upgradable = no
									}
									set_location = prevprevprev # megastructure
									set_fleet_stance = passive
									set_aggro_range_measure_from = self
									#set_aggro_range = 10
									auto_move_to_planet = {
										target = prev # dragon_point star
										clear_auto_move_on_arrival = yes # hang around
									}
								}
							}
						}
					}
					create_ambient_object = {
						location = this
						type = horror_spawn_object
					}
				}
			}
		}
	}
}

# Notification telling you where dragons are headed
country_event = {
	id = distar.13010
	title = distar.13010.name
	desc = {
		text = distar.13010.desc.IOpened
		trigger = { has_country_flag = lcluster_opener }
	}
	desc = {
		text = distar.13010.desc.OtherOpened
		trigger = { NOT = { is_same_value = from } }
	}
	picture = GFX_evt_space_dragon
	location = event_target:dragons_current_system.star

	is_triggered_only = yes

	immediate = { 
		set_country_flag = ldragon_known
		observer_event = { id = observer.63 }
	}

	option = {
		name = distar.13010.a.homicidal
		exclusive_trigger = {
			is_homicidal = yes
		}
	}

	option = {
		name = ALARMING
	}
}

country_event = {
	id = distar.13011
	title = distar.13011.name
	desc = distar.13011.desc
	picture = GFX_evt_space_dragon

	is_triggered_only = yes

	trigger = { NOT = { has_country_flag = knows_ldragon } }

	immediate = {
		capital_scope = {
			closest_system = {
				limit = { has_star_flag = lgate }
				save_event_target_as = disturbance_system
			}
		}
	}

	option = {
		name = distar.13011.a
	}
}

# Killed dragon
country_event = {
	id = distar.13020
	title = distar.13020.name
	desc = {
		text = distar.13020.desc.LDragonKnown
		trigger = { has_country_flag = ldragon_known }
	}
	desc = {
		text = distar.13020.desc.LDragonUnknown
		trigger = { NOT = { has_country_flag = ldragon_known } }
	}
	picture = GFX_evt_space_dragon
	location = fromfrom

	is_triggered_only = yes

	trigger = {
		is_country_type = default
		from = { is_country_type = ldragon_country }
	}

	option = {
		name = distar.13020.a
		trigger = {
			NOT = { has_country_flag = ldragon_known }
		}
		add_monthly_resource_mult = {
			resource = influence
			value = @tier4materialreward
			min = @tier4materialmin
			max = @tier4materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier4materialreward
			min = @tier4materialmin
			max = @tier4materialmax
		}
	}

	option = {
		name = distar.13020.a
		trigger = {
			has_country_flag = ldragon_known
		}
		add_monthly_resource_mult = {
			resource = influence
			value = @tier4materialreward
			min = @tier4materialmin
			max = @tier4materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier4materialreward
			min = @tier4materialmin
			max = @tier4materialmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier4researchreward
			min = @tier4researchmin
			max = @tier4researchmax
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier4researchreward
			min = @tier4researchmin
			max = @tier4researchmax
		}
	}
}

# Science Ship enters dragon system
ship_event = {
	id = distar.13030
	title = distar.13030.name
	desc = distar.13030.desc
	picture = GFX_evt_space_dragon
	location = from.star

	is_triggered_only = yes

	trigger = {
		is_ship_class = shipclass_science_ship
		from = {
			has_star_flag = dragon_point
			NOT = { has_star_flag = visited_dragon_point@root.owner }
			any_ship_in_system = {
				is_ship_size = nanite_space_dragon_baby
			}
		}
	}

	immediate = {
		from = { set_star_flag = visited_dragon_point@root.owner }
	}

	option = {
		# enable special project
		name = distar.13030.a
		trigger = {
			owner = {
				NOR = {
					is_homicidal = yes
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		solar_system.star = {
			enable_special_project = {
				name = TAME_LDRAGON_PROJECT
				location = this
				owner = root.owner
			}
		}
	}

	option = {
		name = distar.13030.b
	}
}

# special project complete
country_event = {
	id = distar.13035
	title = distar.13035.name
	desc = distar.13035.desc
	picture = GFX_evt_space_dragon
	location = event_target:new_dragon

	is_triggered_only = yes

	immediate = {
		from.solar_system = {
			random_fleet_in_system = {
				limit = {
					exists = owner
					owner = { is_country_type = ldragon_country }
				}
				save_event_target_as = new_dragon
				set_owner = root
			}
		}
	}

	option = {
		name = INTERESTING
		fromfrom.solar_system = {
			custom_tooltip = distar.13035.a.tooltip
		}
	}
}

# Root = Planet
# From = Country
# FromFrom = Fleet of the science ship that surveyed it, if any
planet_event = {
	id = distar.13050
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = space_owner
		NOT = { exists = fromfrom } # not surveyed by science ship

		OR = {
			AND = {
				has_resource = {
					amount > 0
					type = 	exotic_gases
				}
				NOT = {
					from = { has_country_flag = 	   exotic_gases_found }
				}
			}
			AND = {
				has_resource = {
					amount > 0
					type = 	rare_crystals
				}
				NOT = {
					from = { has_country_flag = 	   rare_crystals_found }
				}
			}
			AND = {
				has_resource = {
					amount > 0
					type = 	volatile_motes
				}
				NOT = {
					from = { has_country_flag = 	   volatile_motes_found }
				}
			}
			AND = {
				has_resource = {
					amount > 0
					type = 	sr_living_metal
				}
				NOT = {
					from = { has_country_flag = 	   living_metal_found }
				}
			}
			AND = {
				has_resource = {
					amount > 0
					type = 	sr_zro
				}
				NOT = {
					from = { has_country_flag = 	   zro_found }
				}
			}
			AND = {
				has_resource = {
					amount > 0
					type = 	sr_dark_matter
				}
				NOT = {
					from = { has_country_flag = 	   dark_matter_found }
				}
			}
		}
	}

	immediate = {

		from = {
			save_event_target_as = finder
			create_message = {
				type = MESSAGE_TYPE_SR_INFORMED
				localization = MESSAGE_SR_INFORMED
				days = 30
				target = root.solar_system # the Go To
				variable = {
					type = name
					localization = PLANET
					scope = root
				}
				variable = {
					type = name
					localization = COUNTRY
					scope = root.space_owner
				}
			}
		}

		if = {
			limit = { has_resource = { type = volatile_motes amount > 0 } }
			from = { set_country_flag =    volatile_motes_found }
		}
		else_if = {
			limit = { has_resource = { type = exotic_gases amount > 0 } }
			from = { set_country_flag =    exotic_gases_found }
		}
		else_if = {
			limit = { has_resource = { type = rare_crystals amount > 0 } }
			from = { set_country_flag =    rare_crystals_found }
		}
		else_if = {
			limit = { has_resource = { type = sr_zro amount > 0 } }
			from = { set_country_flag =    zro_found }
		}
		else_if = {
			limit = { has_resource = { type = sr_dark_matter amount > 0 } }
			from = { set_country_flag =    dark_matter_found }
		}
		else_if = {
			limit = { has_resource = { type = sr_living_metal amount > 0 } }
			from = { set_country_flag =    living_metal_found }
		}
	}
}

country_event = {
	id = distar.13060
	title = apoc.5.name
	desc = "apoc.5.desc"
	picture = GFX_evt_wormhole
	show_sound = event_radio_chatter
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_country_flag = encountered_first_wormhole }
		FROM = {
			has_natural_wormhole = yes
		}
	}
	
	immediate = {
		FROM = { save_event_target_as = wormhole_system }
		set_country_flag = encountered_first_wormhole
		add_seen_bypass_type = wormhole
	}
	
	option = {
		name = apoc.5.a
	}
}

country_event = {
	id = distar.13070
	title = "apoc.1.name"
	desc = {
		text = apoc.1.desc
		trigger = {
			NOT = { 
				has_country_flag = encountered_first_lgate
			}
		}
	}
	desc = {
		text = apoc.1.b.desc
		trigger = {
			has_country_flag = encountered_first_lgate
		}
	}
	picture = GFX_evt_drifting_gateway
	show_sound = event_radio_chatter
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { exists = fromfrom } # not surveyed by ship
		NOT = { has_country_flag = encountered_first_gateway }
		FROM = {
			has_star_flag = abandoned_gateway
			any_system_megastructure = { is_megastructure_type = gateway_ruined }
		}
	}
	
	immediate = {
		FROM = { save_event_target_as = gateway_system }
		set_country_flag = encountered_first_gateway
		add_seen_bypass_type = gateway
	}
	
	option = {
		name = INTRIGUING
	}
}

country_event = {
	id = distar.13080
	title = "apoc.1.name"
	desc = {
		text = apoc.3.desc
		trigger = {
			NOT = { 
				has_country_flag = encountered_first_gateway
			}
		}
	}
	desc = {
		text = apoc.3.b.desc
		trigger = {
			has_country_flag = encountered_first_gateway
		}
	}
	picture = GFX_evt_drifting_gateway
	show_sound = event_radio_chatter
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { exists = fromfrom } # not surveyed by ship
		NOR = { 
			has_country_flag = encountered_first_lgate
			has_event_chain = "l_cluster_chain"
		}
		FROM = {
			has_star_flag = lgate
			any_system_megastructure = { is_megastructure_type = lgate_base }
		}
	}
	
	immediate = {
		FROM = { save_event_target_as = gateway_system }
		set_country_flag = encountered_first_lgate
	}
	
	option = {
		name = INTRIGUING
		start_lcluster_chain = yes
	}
}